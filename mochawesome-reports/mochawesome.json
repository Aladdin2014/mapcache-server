{
  "reportTitle": "mapcache-server",
  "stats": {
    "suites": 18,
    "tests": 37,
    "passes": 37,
    "pending": 0,
    "failures": 0,
    "start": "2015-11-17T18:38:54.087Z",
    "end": "2015-11-17T18:38:55.307Z",
    "duration": 1220,
    "testsRegistered": 37,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "generic",
        "suites": [
          {
            "title": "#constructor",
            "suites": [],
            "tests": [
              {
                "title": "should construct an generic with a source",
                "fullTitle": "generic #constructor should construct an generic with a source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> generic = <span class=\"hljs-keyword\">new</span> Generic({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>generic.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
                "isRoot": false,
                "uuid": "d7013fdc-9a53-42e3-a425-6e739e3b205c",
                "parentUUID": "4afd830f-54a8-4554-b45d-ca414f762a44",
                "skipped": false
              },
              {
                "title": "should construct an generic with a cache",
                "fullTitle": "generic #constructor should construct an generic with a cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> generic = <span class=\"hljs-keyword\">new</span> Generic({cache: {id: <span class=\"hljs-string\">'6'</span>}});<br>generic.cache.id.should.equal(<span class=\"hljs-string\">'6'</span>);",
                "isRoot": false,
                "uuid": "1ab98f33-7a2f-41c4-bf57-b4ac6cbd2c0d",
                "parentUUID": "4afd830f-54a8-4554-b45d-ca414f762a44",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/generic_test.js",
            "uuid": "4afd830f-54a8-4554-b45d-ca414f762a44",
            "fullFile": "/data/git/mapcache-server/test/format/generic_test.js",
            "passes": [
              {
                "title": "should construct an generic with a source",
                "fullTitle": "generic #constructor should construct an generic with a source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> generic = <span class=\"hljs-keyword\">new</span> Generic({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>generic.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
                "isRoot": false,
                "uuid": "d7013fdc-9a53-42e3-a425-6e739e3b205c",
                "parentUUID": "4afd830f-54a8-4554-b45d-ca414f762a44",
                "skipped": false
              },
              {
                "title": "should construct an generic with a cache",
                "fullTitle": "generic #constructor should construct an generic with a cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> generic = <span class=\"hljs-keyword\">new</span> Generic({cache: {id: <span class=\"hljs-string\">'6'</span>}});<br>generic.cache.id.should.equal(<span class=\"hljs-string\">'6'</span>);",
                "isRoot": false,
                "uuid": "1ab98f33-7a2f-41c4-bf57-b4ac6cbd2c0d",
                "parentUUID": "4afd830f-54a8-4554-b45d-ca414f762a44",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "generic source tests",
            "suites": [
              {
                "title": "generic cache tests",
                "suites": [],
                "tests": [
                  {
                    "title": "should pull the 0/0/0 tile for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "b391d141-a6ce-4a34-83e6-ad96e89e2f2c",
                    "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                    "skipped": false
                  },
                  {
                    "title": "should pull the 0/0/0 generic tile for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "5753d274-b9a3-4dee-92d8-572fe9b1c0ee",
                    "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                    "skipped": false
                  },
                  {
                    "title": "should generate the cache",
                    "fullTitle": "generic source tests generic cache tests should generate the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "ec78ccec-b3f0-4410-8b52-0838ad963a53",
                    "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                    "skipped": false
                  },
                  {
                    "title": "should pull features for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull features for the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "f5b08540-9c98-40f5-9b0b-815b0abe7bc5",
                    "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/format/generic_test.js",
                "uuid": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "fullFile": "/data/git/mapcache-server/test/format/generic_test.js",
                "passes": [
                  {
                    "title": "should pull the 0/0/0 tile for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "b391d141-a6ce-4a34-83e6-ad96e89e2f2c",
                    "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                    "skipped": false
                  },
                  {
                    "title": "should pull the 0/0/0 generic tile for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "5753d274-b9a3-4dee-92d8-572fe9b1c0ee",
                    "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                    "skipped": false
                  },
                  {
                    "title": "should generate the cache",
                    "fullTitle": "generic source tests generic cache tests should generate the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "ec78ccec-b3f0-4410-8b52-0838ad963a53",
                    "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                    "skipped": false
                  },
                  {
                    "title": "should pull features for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull features for the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "f5b08540-9c98-40f5-9b0b-815b0abe7bc5",
                    "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1
              }
            ],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "generic generic source tests should process the source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "3847f241-5c8c-4a8e-9b62-91da53071b17",
                "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "generic generic source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "b10facdf-5421-415b-8cbf-3ecc5b6febde",
                "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the data source",
                "fullTitle": "generic generic source tests should pull the 0/0/0 geojson tile for the data source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "68c880ff-ccd3-4918-b4d8-a00ed21bb008",
                "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "generic generic source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "d46f8978-f34a-4e22-93d3-01c3ff0d80a3",
                "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/generic_test.js",
            "uuid": "c88526bc-fd18-4084-aed4-4b48090e1e96",
            "fullFile": "/data/git/mapcache-server/test/format/generic_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "generic generic source tests should process the source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "3847f241-5c8c-4a8e-9b62-91da53071b17",
                "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "generic generic source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "b10facdf-5421-415b-8cbf-3ecc5b6febde",
                "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the data source",
                "fullTitle": "generic generic source tests should pull the 0/0/0 geojson tile for the data source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "68c880ff-ccd3-4918-b4d8-a00ed21bb008",
                "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "generic generic source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "d46f8978-f34a-4e22-93d3-01c3ff0d80a3",
                "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": true,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/generic_test.js",
        "uuid": "779fe45d-ad84-4e47-b6ca-a6be300d719e",
        "fullFile": "/data/git/mapcache-server/test/format/generic_test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "geojson",
        "suites": [
          {
            "title": "#constructor",
            "suites": [],
            "tests": [
              {
                "title": "should construct an geojson with a source",
                "fullTitle": "geojson #constructor should construct an geojson with a source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> geojson = <span class=\"hljs-keyword\">new</span> GeoJSON({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>geojson.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
                "isRoot": false,
                "uuid": "58c3ae08-abd0-46e3-84e2-f681e686edc7",
                "parentUUID": "1c60cb1d-a935-47e1-a09f-7e3373202b54",
                "skipped": false
              },
              {
                "title": "should construct an geojson with a cache",
                "fullTitle": "geojson #constructor should construct an geojson with a cache",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> geojson = <span class=\"hljs-keyword\">new</span> GeoJSON({cache: {id: <span class=\"hljs-string\">'6'</span>}});<br>geojson.cache.id.should.equal(<span class=\"hljs-string\">'6'</span>);",
                "isRoot": false,
                "uuid": "e7814593-c802-422e-8c99-909a9fbe0bce",
                "parentUUID": "1c60cb1d-a935-47e1-a09f-7e3373202b54",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/geojson_test.js",
            "uuid": "1c60cb1d-a935-47e1-a09f-7e3373202b54",
            "fullFile": "/data/git/mapcache-server/test/format/geojson_test.js",
            "passes": [
              {
                "title": "should construct an geojson with a source",
                "fullTitle": "geojson #constructor should construct an geojson with a source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> geojson = <span class=\"hljs-keyword\">new</span> GeoJSON({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>geojson.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
                "isRoot": false,
                "uuid": "58c3ae08-abd0-46e3-84e2-f681e686edc7",
                "parentUUID": "1c60cb1d-a935-47e1-a09f-7e3373202b54",
                "skipped": false
              },
              {
                "title": "should construct an geojson with a cache",
                "fullTitle": "geojson #constructor should construct an geojson with a cache",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> geojson = <span class=\"hljs-keyword\">new</span> GeoJSON({cache: {id: <span class=\"hljs-string\">'6'</span>}});<br>geojson.cache.id.should.equal(<span class=\"hljs-string\">'6'</span>);",
                "isRoot": false,
                "uuid": "e7814593-c802-422e-8c99-909a9fbe0bce",
                "parentUUID": "1c60cb1d-a935-47e1-a09f-7e3373202b54",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "geojson source tests",
            "suites": [
              {
                "title": "geojson cache tests",
                "suites": [],
                "tests": [
                  {
                    "title": "should pull the 0/0/0 tile for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
                    "timedOut": false,
                    "duration": 13,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                    "isRoot": false,
                    "uuid": "d8950717-d280-4703-a8d2-ae5535e82e79",
                    "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                    "skipped": false
                  },
                  {
                    "title": "should pull the 0/0/0 geojson tile for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
                    "isRoot": false,
                    "uuid": "46497a33-02df-41ed-8ab6-04bc9feddf59",
                    "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                    "skipped": false
                  },
                  {
                    "title": "should generate the cache",
                    "fullTitle": "geojson source tests geojson cache tests should generate the cache",
                    "timedOut": false,
                    "duration": 19,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "85cde8d4-538e-4fc1-9c1c-c4959ae59dda",
                    "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                    "skipped": false
                  },
                  {
                    "title": "should pull features for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "e5410562-34d1-466f-8459-cddc7f04f55d",
                    "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/format/geojson_test.js",
                "uuid": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "fullFile": "/data/git/mapcache-server/test/format/geojson_test.js",
                "passes": [
                  {
                    "title": "should pull the 0/0/0 tile for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
                    "timedOut": false,
                    "duration": 13,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                    "isRoot": false,
                    "uuid": "d8950717-d280-4703-a8d2-ae5535e82e79",
                    "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                    "skipped": false
                  },
                  {
                    "title": "should pull the 0/0/0 geojson tile for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
                    "isRoot": false,
                    "uuid": "46497a33-02df-41ed-8ab6-04bc9feddf59",
                    "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                    "skipped": false
                  },
                  {
                    "title": "should generate the cache",
                    "fullTitle": "geojson source tests geojson cache tests should generate the cache",
                    "timedOut": false,
                    "duration": 19,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "85cde8d4-538e-4fc1-9c1c-c4959ae59dda",
                    "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                    "skipped": false
                  },
                  {
                    "title": "should pull features for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "e5410562-34d1-466f-8459-cddc7f04f55d",
                    "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 38
              }
            ],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "geojson geojson source tests should process the source",
                "timedOut": false,
                "duration": 10,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  FeatureModel.getAllSourceFeatures(geojson.source.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'features'</span>, features);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "167e5350-b812-4017-9b7a-dfbb2f392225",
                "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "geojson geojson source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "286787d4-6a5f-45a9-87ee-d7c8841ee50f",
                "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the data source",
                "fullTitle": "geojson geojson source tests should pull the 0/0/0 geojson tile for the data source",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "2d15370a-87f0-4011-8d31-916f1555488d",
                "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "geojson geojson source tests should get all features of the source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"feature count\"</span>, features);<br>  features.length.should.be.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "7b6fe700-53d6-4886-a780-e083cf31d705",
                "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/geojson_test.js",
            "uuid": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
            "fullFile": "/data/git/mapcache-server/test/format/geojson_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "geojson geojson source tests should process the source",
                "timedOut": false,
                "duration": 10,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  FeatureModel.getAllSourceFeatures(geojson.source.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'features'</span>, features);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "167e5350-b812-4017-9b7a-dfbb2f392225",
                "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "geojson geojson source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "286787d4-6a5f-45a9-87ee-d7c8841ee50f",
                "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the data source",
                "fullTitle": "geojson geojson source tests should pull the 0/0/0 geojson tile for the data source",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "2d15370a-87f0-4011-8d31-916f1555488d",
                "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "geojson geojson source tests should get all features of the source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"feature count\"</span>, features);<br>  features.length.should.be.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "7b6fe700-53d6-4886-a780-e083cf31d705",
                "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": true,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 25
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/geojson_test.js",
        "uuid": "eeedac9c-a9b2-4265-a413-04f84281849d",
        "fullFile": "/data/git/mapcache-server/test/format/geojson_test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "geotiff",
        "suites": [
          {
            "title": "#constructor",
            "suites": [],
            "tests": [
              {
                "title": "should construct an geotiff with a source",
                "fullTitle": "geotiff #constructor should construct an geotiff with a source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> geotiff = <span class=\"hljs-keyword\">new</span> GeoTIFF({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>geotiff.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
                "isRoot": false,
                "uuid": "7cfb1ee8-ae45-4fb7-b1be-4d9244e4ebb5",
                "parentUUID": "9fd6257c-bc04-4ee4-919a-ce7a9e401226",
                "skipped": false
              },
              {
                "title": "should throw an error since geotiff caches are not supported",
                "fullTitle": "geotiff #constructor should throw an error since geotiff caches are not supported",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">try</span> {<br>  <span class=\"hljs-keyword\">new</span> GeoTIFF({cache: {id: <span class=\"hljs-string\">'6'</span>}}).should.throw(<span class=\"hljs-built_in\">Error</span>);<br>} <span class=\"hljs-keyword\">catch</span> (e) {<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'threw error'</span>, e);<br>}",
                "isRoot": false,
                "uuid": "18780a47-e7fd-49cd-bd60-cae9818df17c",
                "parentUUID": "9fd6257c-bc04-4ee4-919a-ce7a9e401226",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/geotiff_test.js",
            "uuid": "9fd6257c-bc04-4ee4-919a-ce7a9e401226",
            "fullFile": "/data/git/mapcache-server/test/format/geotiff_test.js",
            "passes": [
              {
                "title": "should construct an geotiff with a source",
                "fullTitle": "geotiff #constructor should construct an geotiff with a source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> geotiff = <span class=\"hljs-keyword\">new</span> GeoTIFF({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>geotiff.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
                "isRoot": false,
                "uuid": "7cfb1ee8-ae45-4fb7-b1be-4d9244e4ebb5",
                "parentUUID": "9fd6257c-bc04-4ee4-919a-ce7a9e401226",
                "skipped": false
              },
              {
                "title": "should throw an error since geotiff caches are not supported",
                "fullTitle": "geotiff #constructor should throw an error since geotiff caches are not supported",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">try</span> {<br>  <span class=\"hljs-keyword\">new</span> GeoTIFF({cache: {id: <span class=\"hljs-string\">'6'</span>}}).should.throw(<span class=\"hljs-built_in\">Error</span>);<br>} <span class=\"hljs-keyword\">catch</span> (e) {<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'threw error'</span>, e);<br>}",
                "isRoot": false,
                "uuid": "18780a47-e7fd-49cd-bd60-cae9818df17c",
                "parentUUID": "9fd6257c-bc04-4ee4-919a-ce7a9e401226",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "geotiff source tests",
            "suites": [],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "geotiff geotiff source tests should process the source",
                "timedOut": false,
                "duration": 18,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geotiff.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>],<br>        [-<span class=\"hljs-number\">104.82331093941556</span>,<span class=\"hljs-number\">39.67084478892132</span>],<br>        [-<span class=\"hljs-number\">104.82337800954186</span>,<span class=\"hljs-number\">39.64449869141027</span>],<br>        [-<span class=\"hljs-number\">104.85255015490993</span>,<span class=\"hljs-number\">39.64453938508538</span>],<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'26913'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "30c6c60d-9d72-477a-8a66-b5942cc230de",
                "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
                "skipped": false
              },
              {
                "title": "should pull the 13/1710/3111 tile for the data source",
                "fullTitle": "geotiff geotiff source tests should pull the 13/1710/3111 tile for the data source",
                "timedOut": false,
                "duration": 119,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/geotifftile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
                "isRoot": false,
                "uuid": "ee56d1c7-5937-4b53-b236-e66e275c87cd",
                "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "geotiff geotiff source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "4dc203ec-ed4f-478b-a637-0c3e02dbe27a",
                "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/geotiff_test.js",
            "uuid": "9c91327e-9071-4edb-afb6-a559a1162cf8",
            "fullFile": "/data/git/mapcache-server/test/format/geotiff_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "geotiff geotiff source tests should process the source",
                "timedOut": false,
                "duration": 18,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geotiff.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>],<br>        [-<span class=\"hljs-number\">104.82331093941556</span>,<span class=\"hljs-number\">39.67084478892132</span>],<br>        [-<span class=\"hljs-number\">104.82337800954186</span>,<span class=\"hljs-number\">39.64449869141027</span>],<br>        [-<span class=\"hljs-number\">104.85255015490993</span>,<span class=\"hljs-number\">39.64453938508538</span>],<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'26913'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "30c6c60d-9d72-477a-8a66-b5942cc230de",
                "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
                "skipped": false
              },
              {
                "title": "should pull the 13/1710/3111 tile for the data source",
                "fullTitle": "geotiff geotiff source tests should pull the 13/1710/3111 tile for the data source",
                "timedOut": false,
                "duration": 119,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/geotifftile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
                "isRoot": false,
                "uuid": "ee56d1c7-5937-4b53-b236-e66e275c87cd",
                "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "geotiff geotiff source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "4dc203ec-ed4f-478b-a637-0c3e02dbe27a",
                "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 137
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/geotiff_test.js",
        "uuid": "2fbee929-47f5-4a29-922d-24385da6a667",
        "fullFile": "/data/git/mapcache-server/test/format/geotiff_test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "MrSID",
        "suites": [
          {
            "title": "#constructor",
            "suites": [],
            "tests": [
              {
                "title": "should construct an MrSID with a source",
                "fullTitle": "MrSID #constructor should construct an MrSID with a source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> mrsid = <span class=\"hljs-keyword\">new</span> MrSID({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>mrsid.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
                "isRoot": false,
                "uuid": "6466ac24-3939-4fe1-9b86-24b628985407",
                "parentUUID": "f6a9515e-a7d0-40df-a638-331dd8a66711",
                "skipped": false
              },
              {
                "title": "should throw an error since MrSID caches are not supported",
                "fullTitle": "MrSID #constructor should throw an error since MrSID caches are not supported",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">try</span> {<br>  <span class=\"hljs-keyword\">new</span> MrSID({cache: {id: <span class=\"hljs-string\">'6'</span>}}).should.throw(<span class=\"hljs-built_in\">Error</span>);<br>} <span class=\"hljs-keyword\">catch</span> (e) {<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'threw error'</span>, e);<br>}",
                "isRoot": false,
                "uuid": "44dae77c-1abe-491d-bfe9-a75df0e1818d",
                "parentUUID": "f6a9515e-a7d0-40df-a638-331dd8a66711",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/mrsid_test.js",
            "uuid": "f6a9515e-a7d0-40df-a638-331dd8a66711",
            "fullFile": "/data/git/mapcache-server/test/format/mrsid_test.js",
            "passes": [
              {
                "title": "should construct an MrSID with a source",
                "fullTitle": "MrSID #constructor should construct an MrSID with a source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> mrsid = <span class=\"hljs-keyword\">new</span> MrSID({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>mrsid.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
                "isRoot": false,
                "uuid": "6466ac24-3939-4fe1-9b86-24b628985407",
                "parentUUID": "f6a9515e-a7d0-40df-a638-331dd8a66711",
                "skipped": false
              },
              {
                "title": "should throw an error since MrSID caches are not supported",
                "fullTitle": "MrSID #constructor should throw an error since MrSID caches are not supported",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">try</span> {<br>  <span class=\"hljs-keyword\">new</span> MrSID({cache: {id: <span class=\"hljs-string\">'6'</span>}}).should.throw(<span class=\"hljs-built_in\">Error</span>);<br>} <span class=\"hljs-keyword\">catch</span> (e) {<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'threw error'</span>, e);<br>}",
                "isRoot": false,
                "uuid": "44dae77c-1abe-491d-bfe9-a75df0e1818d",
                "parentUUID": "f6a9515e-a7d0-40df-a638-331dd8a66711",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "MrSID source tests",
            "suites": [],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "MrSID MrSID source tests should process the source",
                "timedOut": false,
                "duration": 16,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "mrsid.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'newSource'</span>, newSource);<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'4326'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "c492a8a0-a85d-4b39-aa38-6eb9cb681610",
                "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
                "skipped": false
              },
              {
                "title": "should not pull the 13/1710/3111 tile for the data source because no data exists there",
                "fullTitle": "MrSID MrSID source tests should not pull the 13/1710/3111 tile for the data source because no data exists there",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(stream);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "06d98f42-9889-44bb-8363-c6c5399eea12",
                "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
                "skipped": false
              },
              {
                "title": "should pull the 11/572/747 tile for the data source",
                "fullTitle": "MrSID MrSID source tests should pull the 11/572/747 tile for the data source",
                "timedOut": false,
                "duration": 97,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">572</span>, <span class=\"hljs-number\">747</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/mrsidtile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
                "isRoot": false,
                "uuid": "e84830c1-91b2-4692-8523-40edeba544f8",
                "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "MrSID MrSID source tests should get all features of the source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "mrsid.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "0a0e81ce-2c20-4094-be04-bdab58279573",
                "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
                "skipped": false
              },
              {
                "title": "should fail to process this source",
                "fullTitle": "MrSID MrSID source tests should fail to process this source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> fail = <span class=\"hljs-keyword\">new</span> MrSID({<br>  source: failDataSource<br>});<br>fail.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.failure.should.be.true();<br>  done();<br>});",
                "isRoot": false,
                "uuid": "2b81dbf7-1a5b-456e-aec7-690f896a8369",
                "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/mrsid_test.js",
            "uuid": "bddda678-433a-40b1-83b5-34bf26f17cb1",
            "fullFile": "/data/git/mapcache-server/test/format/mrsid_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "MrSID MrSID source tests should process the source",
                "timedOut": false,
                "duration": 16,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "mrsid.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'newSource'</span>, newSource);<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'4326'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "c492a8a0-a85d-4b39-aa38-6eb9cb681610",
                "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
                "skipped": false
              },
              {
                "title": "should not pull the 13/1710/3111 tile for the data source because no data exists there",
                "fullTitle": "MrSID MrSID source tests should not pull the 13/1710/3111 tile for the data source because no data exists there",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(stream);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "06d98f42-9889-44bb-8363-c6c5399eea12",
                "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
                "skipped": false
              },
              {
                "title": "should pull the 11/572/747 tile for the data source",
                "fullTitle": "MrSID MrSID source tests should pull the 11/572/747 tile for the data source",
                "timedOut": false,
                "duration": 97,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">572</span>, <span class=\"hljs-number\">747</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/mrsidtile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
                "isRoot": false,
                "uuid": "e84830c1-91b2-4692-8523-40edeba544f8",
                "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "MrSID MrSID source tests should get all features of the source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "mrsid.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "0a0e81ce-2c20-4094-be04-bdab58279573",
                "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
                "skipped": false
              },
              {
                "title": "should fail to process this source",
                "fullTitle": "MrSID MrSID source tests should fail to process this source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> fail = <span class=\"hljs-keyword\">new</span> MrSID({<br>  source: failDataSource<br>});<br>fail.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.failure.should.be.true();<br>  done();<br>});",
                "isRoot": false,
                "uuid": "2b81dbf7-1a5b-456e-aec7-690f896a8369",
                "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 118
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/mrsid_test.js",
        "uuid": "18fd069b-da74-4375-b5b4-5f8e88380911",
        "fullFile": "/data/git/mapcache-server/test/format/mrsid_test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "xyz",
        "suites": [
          {
            "title": "#constructor",
            "suites": [],
            "tests": [
              {
                "title": "should construct an Xyz with a source",
                "fullTitle": "xyz #constructor should construct an Xyz with a source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> xyz = <span class=\"hljs-keyword\">new</span> XYZ({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>xyz.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
                "isRoot": false,
                "uuid": "08d7920a-4c65-4ce8-9f20-2bb5d0c36c77",
                "parentUUID": "5b53220c-c1ff-43e3-88f4-761374de4820",
                "skipped": false
              },
              {
                "title": "should construct an Xyz with a cache",
                "fullTitle": "xyz #constructor should construct an Xyz with a cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> xyz = <span class=\"hljs-keyword\">new</span> XYZ({cache: {id: <span class=\"hljs-string\">'6'</span>}});<br>xyz.cache.id.should.equal(<span class=\"hljs-string\">'6'</span>);",
                "isRoot": false,
                "uuid": "651d99e3-65fe-489a-a3a4-8d0890701704",
                "parentUUID": "5b53220c-c1ff-43e3-88f4-761374de4820",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/xyz_test.js",
            "uuid": "5b53220c-c1ff-43e3-88f4-761374de4820",
            "fullFile": "/data/git/mapcache-server/test/format/xyz_test.js",
            "passes": [
              {
                "title": "should construct an Xyz with a source",
                "fullTitle": "xyz #constructor should construct an Xyz with a source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> xyz = <span class=\"hljs-keyword\">new</span> XYZ({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>xyz.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
                "isRoot": false,
                "uuid": "08d7920a-4c65-4ce8-9f20-2bb5d0c36c77",
                "parentUUID": "5b53220c-c1ff-43e3-88f4-761374de4820",
                "skipped": false
              },
              {
                "title": "should construct an Xyz with a cache",
                "fullTitle": "xyz #constructor should construct an Xyz with a cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> xyz = <span class=\"hljs-keyword\">new</span> XYZ({cache: {id: <span class=\"hljs-string\">'6'</span>}});<br>xyz.cache.id.should.equal(<span class=\"hljs-string\">'6'</span>);",
                "isRoot": false,
                "uuid": "651d99e3-65fe-489a-a3a4-8d0890701704",
                "parentUUID": "5b53220c-c1ff-43e3-88f4-761374de4820",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "source tests",
            "suites": [],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "xyz source tests should process the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "94f37ef2-60ac-46d3-acbf-0b86880f4146",
                "parentUUID": "627045d6-4c41-44c8-95c8-9c3fb32e17b4",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "xyz source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 353,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, tileRequest</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  tileRequest.on(<span class=\"hljs-string\">'response'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">response</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>      response.statusCode.should.equal(<span class=\"hljs-number\">200</span>);<br>      <span class=\"hljs-keyword\">var</span> size = response.headers[<span class=\"hljs-string\">'content-length'</span>];<br>      size.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>      response.headers[<span class=\"hljs-string\">'content-type'</span>].should.equal(<span class=\"hljs-string\">'image/png'</span>);<br>      done();<br>    } <span class=\"hljs-keyword\">catch</span> (e) {<br>      done(e);<br>    }<br>  })<br>  .on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile request error'</span>, err);<br>    done(err);<br>  });<br>});",
                "isRoot": false,
                "uuid": "93707689-1e29-490c-8aec-69c13ea8247d",
                "parentUUID": "627045d6-4c41-44c8-95c8-9c3fb32e17b4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/xyz_test.js",
            "uuid": "627045d6-4c41-44c8-95c8-9c3fb32e17b4",
            "fullFile": "/data/git/mapcache-server/test/format/xyz_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "xyz source tests should process the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "94f37ef2-60ac-46d3-acbf-0b86880f4146",
                "parentUUID": "627045d6-4c41-44c8-95c8-9c3fb32e17b4",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "xyz source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 353,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, tileRequest</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  tileRequest.on(<span class=\"hljs-string\">'response'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">response</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>      response.statusCode.should.equal(<span class=\"hljs-number\">200</span>);<br>      <span class=\"hljs-keyword\">var</span> size = response.headers[<span class=\"hljs-string\">'content-length'</span>];<br>      size.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>      response.headers[<span class=\"hljs-string\">'content-type'</span>].should.equal(<span class=\"hljs-string\">'image/png'</span>);<br>      done();<br>    } <span class=\"hljs-keyword\">catch</span> (e) {<br>      done(e);<br>    }<br>  })<br>  .on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile request error'</span>, err);<br>    done(err);<br>  });<br>});",
                "isRoot": false,
                "uuid": "93707689-1e29-490c-8aec-69c13ea8247d",
                "parentUUID": "627045d6-4c41-44c8-95c8-9c3fb32e17b4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 353
          },
          {
            "title": "cache tests",
            "suites": [],
            "tests": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "xyz cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 510,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "102e787d-5989-431a-9cf2-da6a12c853e4",
                "parentUUID": "7c6eea2f-f790-4a63-8c37-2d00b324ff23",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/xyz_test.js",
            "uuid": "7c6eea2f-f790-4a63-8c37-2d00b324ff23",
            "fullFile": "/data/git/mapcache-server/test/format/xyz_test.js",
            "passes": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "xyz cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 510,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "102e787d-5989-431a-9cf2-da6a12c853e4",
                "parentUUID": "7c6eea2f-f790-4a63-8c37-2d00b324ff23",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 510
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/xyz_test.js",
        "uuid": "647ff3ce-9800-4b9b-97cd-7c8d4a8342f0",
        "fullFile": "/data/git/mapcache-server/test/format/xyz_test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "b9fbf2ed-523f-4bbc-bbce-b1f695922370",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should construct an generic with a source",
      "fullTitle": "#constructor should construct an generic with a source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> generic = <span class=\"hljs-keyword\">new</span> Generic({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>generic.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
      "isRoot": false,
      "uuid": "5c321a0d-4ae6-4de9-8d87-8b5520f05a1a",
      "parentUUID": "4afd830f-54a8-4554-b45d-ca414f762a44",
      "skipped": false
    },
    {
      "title": "should construct an generic with a cache",
      "fullTitle": "#constructor should construct an generic with a cache",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> generic = <span class=\"hljs-keyword\">new</span> Generic({cache: {id: <span class=\"hljs-string\">'6'</span>}});<br>generic.cache.id.should.equal(<span class=\"hljs-string\">'6'</span>);",
      "isRoot": false,
      "uuid": "cfb33d9b-fc3c-446d-a161-96e1809dce19",
      "parentUUID": "4afd830f-54a8-4554-b45d-ca414f762a44",
      "skipped": false
    },
    {
      "title": "should process the source",
      "fullTitle": "generic source tests should process the source",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
      "isRoot": false,
      "uuid": "cbdf4039-6aba-42a7-80eb-82d58e4f26b9",
      "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 tile for the data source",
      "fullTitle": "generic source tests should pull the 0/0/0 tile for the data source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
      "isRoot": false,
      "uuid": "c5e5aeb9-5988-4d88-ab68-693a17732b64",
      "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 geojson tile for the data source",
      "fullTitle": "generic source tests should pull the 0/0/0 geojson tile for the data source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
      "isRoot": false,
      "uuid": "a4825139-1402-44ca-a315-677cd5810fa4",
      "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
      "skipped": false
    },
    {
      "title": "should get all features of the source",
      "fullTitle": "generic source tests should get all features of the source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
      "isRoot": false,
      "uuid": "dff0447a-6391-4f0a-8ae9-837dc0781f88",
      "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 tile for the cache",
      "fullTitle": "generic cache tests should pull the 0/0/0 tile for the cache",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
      "isRoot": false,
      "uuid": "849a177b-e946-482a-82bc-71f7be79d096",
      "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 generic tile for the cache",
      "fullTitle": "generic cache tests should pull the 0/0/0 generic tile for the cache",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
      "isRoot": false,
      "uuid": "389f9c25-16cc-4c12-b2d6-cfa1382fe094",
      "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
      "skipped": false
    },
    {
      "title": "should generate the cache",
      "fullTitle": "generic cache tests should generate the cache",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
      "isRoot": false,
      "uuid": "80f01af6-4b41-4be6-9442-ceed0c8f9e54",
      "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
      "skipped": false
    },
    {
      "title": "should pull features for the cache",
      "fullTitle": "generic cache tests should pull features for the cache",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
      "isRoot": false,
      "uuid": "fc3cdf36-d1d2-4fad-96b8-b1c0af6075a0",
      "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
      "skipped": false
    },
    {
      "title": "should construct an geojson with a source",
      "fullTitle": "#constructor should construct an geojson with a source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> geojson = <span class=\"hljs-keyword\">new</span> GeoJSON({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>geojson.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
      "isRoot": false,
      "uuid": "ee32c683-be3c-44f5-b5e3-52ef6edcb1b7",
      "parentUUID": "1c60cb1d-a935-47e1-a09f-7e3373202b54",
      "skipped": false
    },
    {
      "title": "should construct an geojson with a cache",
      "fullTitle": "#constructor should construct an geojson with a cache",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> geojson = <span class=\"hljs-keyword\">new</span> GeoJSON({cache: {id: <span class=\"hljs-string\">'6'</span>}});<br>geojson.cache.id.should.equal(<span class=\"hljs-string\">'6'</span>);",
      "isRoot": false,
      "uuid": "9f197c49-8adb-4d2c-be51-6c6cae3e98e6",
      "parentUUID": "1c60cb1d-a935-47e1-a09f-7e3373202b54",
      "skipped": false
    },
    {
      "title": "should process the source",
      "fullTitle": "geojson source tests should process the source",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  FeatureModel.getAllSourceFeatures(geojson.source.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'features'</span>, features);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
      "isRoot": false,
      "uuid": "be1317ac-4c20-4002-bc9d-b6822bb431dd",
      "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 tile for the data source",
      "fullTitle": "geojson source tests should pull the 0/0/0 tile for the data source",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
      "isRoot": false,
      "uuid": "3e089fec-935e-4f01-a785-75362c3eedca",
      "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 geojson tile for the data source",
      "fullTitle": "geojson source tests should pull the 0/0/0 geojson tile for the data source",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
      "isRoot": false,
      "uuid": "255cf302-267c-4518-825f-1263a462c266",
      "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
      "skipped": false
    },
    {
      "title": "should get all features of the source",
      "fullTitle": "geojson source tests should get all features of the source",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"feature count\"</span>, features);<br>  features.length.should.be.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
      "isRoot": false,
      "uuid": "c7ae0d5b-8793-491f-b2de-d076504b6a54",
      "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 tile for the cache",
      "fullTitle": "geojson cache tests should pull the 0/0/0 tile for the cache",
      "timedOut": false,
      "duration": 13,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
      "isRoot": false,
      "uuid": "5bc688f3-0c06-4c93-acd7-7162e3729825",
      "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 geojson tile for the cache",
      "fullTitle": "geojson cache tests should pull the 0/0/0 geojson tile for the cache",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
      "isRoot": false,
      "uuid": "fe223bca-52a5-4411-9345-3007d58f6239",
      "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
      "skipped": false
    },
    {
      "title": "should generate the cache",
      "fullTitle": "geojson cache tests should generate the cache",
      "timedOut": false,
      "duration": 19,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
      "isRoot": false,
      "uuid": "6a03b7bc-062b-4264-900f-9c9ee0822bf8",
      "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
      "skipped": false
    },
    {
      "title": "should pull features for the cache",
      "fullTitle": "geojson cache tests should pull features for the cache",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
      "isRoot": false,
      "uuid": "45adfe6d-07c7-4ea7-9d7a-4f1dfc4b4c15",
      "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
      "skipped": false
    },
    {
      "title": "should construct an geotiff with a source",
      "fullTitle": "#constructor should construct an geotiff with a source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> geotiff = <span class=\"hljs-keyword\">new</span> GeoTIFF({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>geotiff.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
      "isRoot": false,
      "uuid": "af6e98c7-ed07-4a0b-ac96-7d745e6da59f",
      "parentUUID": "9fd6257c-bc04-4ee4-919a-ce7a9e401226",
      "skipped": false
    },
    {
      "title": "should throw an error since geotiff caches are not supported",
      "fullTitle": "#constructor should throw an error since geotiff caches are not supported",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">try</span> {<br>  <span class=\"hljs-keyword\">new</span> GeoTIFF({cache: {id: <span class=\"hljs-string\">'6'</span>}}).should.throw(<span class=\"hljs-built_in\">Error</span>);<br>} <span class=\"hljs-keyword\">catch</span> (e) {<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'threw error'</span>, e);<br>}",
      "isRoot": false,
      "uuid": "3192e017-941d-468e-a3ac-dc16bec375bc",
      "parentUUID": "9fd6257c-bc04-4ee4-919a-ce7a9e401226",
      "skipped": false
    },
    {
      "title": "should process the source",
      "fullTitle": "geotiff source tests should process the source",
      "timedOut": false,
      "duration": 18,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "geotiff.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>],<br>        [-<span class=\"hljs-number\">104.82331093941556</span>,<span class=\"hljs-number\">39.67084478892132</span>],<br>        [-<span class=\"hljs-number\">104.82337800954186</span>,<span class=\"hljs-number\">39.64449869141027</span>],<br>        [-<span class=\"hljs-number\">104.85255015490993</span>,<span class=\"hljs-number\">39.64453938508538</span>],<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'26913'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
      "isRoot": false,
      "uuid": "9df79cea-1a82-4f7e-a252-f39732a8d30e",
      "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
      "skipped": false
    },
    {
      "title": "should pull the 13/1710/3111 tile for the data source",
      "fullTitle": "geotiff source tests should pull the 13/1710/3111 tile for the data source",
      "timedOut": false,
      "duration": 119,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/geotifftile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
      "isRoot": false,
      "uuid": "d6caa17c-a4aa-417c-a77e-464e70887d61",
      "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
      "skipped": false
    },
    {
      "title": "should get all features of the source",
      "fullTitle": "geotiff source tests should get all features of the source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
      "isRoot": false,
      "uuid": "ff8f7ce1-b083-4bda-9c3a-00981c8cc5c4",
      "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
      "skipped": false
    },
    {
      "title": "should construct an MrSID with a source",
      "fullTitle": "#constructor should construct an MrSID with a source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> mrsid = <span class=\"hljs-keyword\">new</span> MrSID({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>mrsid.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
      "isRoot": false,
      "uuid": "7a263686-0370-471d-8483-a3dc6c717bf4",
      "parentUUID": "f6a9515e-a7d0-40df-a638-331dd8a66711",
      "skipped": false
    },
    {
      "title": "should throw an error since MrSID caches are not supported",
      "fullTitle": "#constructor should throw an error since MrSID caches are not supported",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">try</span> {<br>  <span class=\"hljs-keyword\">new</span> MrSID({cache: {id: <span class=\"hljs-string\">'6'</span>}}).should.throw(<span class=\"hljs-built_in\">Error</span>);<br>} <span class=\"hljs-keyword\">catch</span> (e) {<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'threw error'</span>, e);<br>}",
      "isRoot": false,
      "uuid": "5d4df3d3-90d7-4704-bf52-c820194a1556",
      "parentUUID": "f6a9515e-a7d0-40df-a638-331dd8a66711",
      "skipped": false
    },
    {
      "title": "should process the source",
      "fullTitle": "MrSID source tests should process the source",
      "timedOut": false,
      "duration": 16,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "mrsid.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'newSource'</span>, newSource);<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'4326'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
      "isRoot": false,
      "uuid": "4f7c61bb-d5c9-4fd7-8c85-6d734f68575d",
      "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
      "skipped": false
    },
    {
      "title": "should not pull the 13/1710/3111 tile for the data source because no data exists there",
      "fullTitle": "MrSID source tests should not pull the 13/1710/3111 tile for the data source because no data exists there",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(stream);<br>  done();<br>});",
      "isRoot": false,
      "uuid": "00b959d0-f590-428a-9528-114749c83eb7",
      "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
      "skipped": false
    },
    {
      "title": "should pull the 11/572/747 tile for the data source",
      "fullTitle": "MrSID source tests should pull the 11/572/747 tile for the data source",
      "timedOut": false,
      "duration": 97,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">572</span>, <span class=\"hljs-number\">747</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/mrsidtile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
      "isRoot": false,
      "uuid": "52369757-0b07-4a60-b328-0c0c4c0c89cc",
      "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
      "skipped": false
    },
    {
      "title": "should get all features of the source",
      "fullTitle": "MrSID source tests should get all features of the source",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "mrsid.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
      "isRoot": false,
      "uuid": "ca70e772-6ef4-4796-b4ce-357e6f92ee5b",
      "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
      "skipped": false
    },
    {
      "title": "should fail to process this source",
      "fullTitle": "MrSID source tests should fail to process this source",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> fail = <span class=\"hljs-keyword\">new</span> MrSID({<br>  source: failDataSource<br>});<br>fail.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.failure.should.be.true();<br>  done();<br>});",
      "isRoot": false,
      "uuid": "c2db6df5-cf66-4955-986f-e9abcc30bd5f",
      "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
      "skipped": false
    },
    {
      "title": "should construct an Xyz with a source",
      "fullTitle": "#constructor should construct an Xyz with a source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> xyz = <span class=\"hljs-keyword\">new</span> XYZ({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>xyz.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
      "isRoot": false,
      "uuid": "25550b13-f8ad-46cf-bb26-fb98118d8429",
      "parentUUID": "5b53220c-c1ff-43e3-88f4-761374de4820",
      "skipped": false
    },
    {
      "title": "should construct an Xyz with a cache",
      "fullTitle": "#constructor should construct an Xyz with a cache",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> xyz = <span class=\"hljs-keyword\">new</span> XYZ({cache: {id: <span class=\"hljs-string\">'6'</span>}});<br>xyz.cache.id.should.equal(<span class=\"hljs-string\">'6'</span>);",
      "isRoot": false,
      "uuid": "81558f6c-d3d3-4910-82a1-744d17b5d985",
      "parentUUID": "5b53220c-c1ff-43e3-88f4-761374de4820",
      "skipped": false
    },
    {
      "title": "should process the source",
      "fullTitle": "source tests should process the source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "xyz.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  done();<br>});",
      "isRoot": false,
      "uuid": "769fa463-4a70-4c39-a65a-90828c916c9a",
      "parentUUID": "627045d6-4c41-44c8-95c8-9c3fb32e17b4",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 tile for the data source",
      "fullTitle": "source tests should pull the 0/0/0 tile for the data source",
      "timedOut": false,
      "duration": 353,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, tileRequest</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  tileRequest.on(<span class=\"hljs-string\">'response'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">response</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>      response.statusCode.should.equal(<span class=\"hljs-number\">200</span>);<br>      <span class=\"hljs-keyword\">var</span> size = response.headers[<span class=\"hljs-string\">'content-length'</span>];<br>      size.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>      response.headers[<span class=\"hljs-string\">'content-type'</span>].should.equal(<span class=\"hljs-string\">'image/png'</span>);<br>      done();<br>    } <span class=\"hljs-keyword\">catch</span> (e) {<br>      done(e);<br>    }<br>  })<br>  .on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile request error'</span>, err);<br>    done(err);<br>  });<br>});",
      "isRoot": false,
      "uuid": "77875a32-d2f0-495b-a699-72a74955c1a3",
      "parentUUID": "627045d6-4c41-44c8-95c8-9c3fb32e17b4",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 tile for the cache",
      "fullTitle": "cache tests should pull the 0/0/0 tile for the cache",
      "timedOut": false,
      "duration": 510,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
      "isRoot": false,
      "uuid": "51a87dd4-7989-47ec-a233-8b889822e416",
      "parentUUID": "7c6eea2f-f790-4a63-8c37-2d00b324ff23",
      "skipped": false
    }
  ],
  "allHooks": [
    {
      "title": "\"before all\" hook",
      "async": 0,
      "sync": true,
      "_timeout": 2000,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "generic source tests",
        "suites": [
          {
            "title": "generic cache tests",
            "suites": [],
            "tests": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "b391d141-a6ce-4a34-83e6-ad96e89e2f2c",
                "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 generic tile for the cache",
                "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "5753d274-b9a3-4dee-92d8-572fe9b1c0ee",
                "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "skipped": false
              },
              {
                "title": "should generate the cache",
                "fullTitle": "generic source tests generic cache tests should generate the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                "isRoot": false,
                "uuid": "ec78ccec-b3f0-4410-8b52-0838ad963a53",
                "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "skipped": false
              },
              {
                "title": "should pull features for the cache",
                "fullTitle": "generic source tests generic cache tests should pull features for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "f5b08540-9c98-40f5-9b0b-815b0abe7bc5",
                "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/generic_test.js",
            "uuid": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
            "fullFile": "/data/git/mapcache-server/test/format/generic_test.js",
            "passes": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "b391d141-a6ce-4a34-83e6-ad96e89e2f2c",
                "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 generic tile for the cache",
                "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "5753d274-b9a3-4dee-92d8-572fe9b1c0ee",
                "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "skipped": false
              },
              {
                "title": "should generate the cache",
                "fullTitle": "generic source tests generic cache tests should generate the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                "isRoot": false,
                "uuid": "ec78ccec-b3f0-4410-8b52-0838ad963a53",
                "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "skipped": false
              },
              {
                "title": "should pull features for the cache",
                "fullTitle": "generic source tests generic cache tests should pull features for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "f5b08540-9c98-40f5-9b0b-815b0abe7bc5",
                "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [
          {
            "title": "should process the source",
            "fullTitle": "generic generic source tests should process the source",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "3847f241-5c8c-4a8e-9b62-91da53071b17",
            "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 tile for the data source",
            "fullTitle": "generic generic source tests should pull the 0/0/0 tile for the data source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "b10facdf-5421-415b-8cbf-3ecc5b6febde",
            "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 geojson tile for the data source",
            "fullTitle": "generic generic source tests should pull the 0/0/0 geojson tile for the data source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "68c880ff-ccd3-4918-b4d8-a00ed21bb008",
            "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "generic generic source tests should get all features of the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "d46f8978-f34a-4e22-93d3-01c3ff0d80a3",
            "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/generic_test.js",
        "uuid": "c88526bc-fd18-4084-aed4-4b48090e1e96",
        "fullFile": "/data/git/mapcache-server/test/format/generic_test.js",
        "passes": [
          {
            "title": "should process the source",
            "fullTitle": "generic generic source tests should process the source",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "3847f241-5c8c-4a8e-9b62-91da53071b17",
            "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 tile for the data source",
            "fullTitle": "generic generic source tests should pull the 0/0/0 tile for the data source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "b10facdf-5421-415b-8cbf-3ecc5b6febde",
            "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 geojson tile for the data source",
            "fullTitle": "generic generic source tests should pull the 0/0/0 geojson tile for the data source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "68c880ff-ccd3-4918-b4d8-a00ed21bb008",
            "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "generic generic source tests should get all features of the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "d46f8978-f34a-4e22-93d3-01c3ff0d80a3",
            "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": true,
        "totalTests": 4,
        "totalPasses": 4,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 1
      },
      "ctx": {
        "_runnable": {
          "title": "\"after all\" hook",
          "async": 0,
          "sync": true,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "type": "hook",
          "parent": {
            "title": "generic source tests",
            "suites": [
              {
                "title": "generic cache tests",
                "suites": [],
                "tests": [
                  {
                    "title": "should pull the 0/0/0 tile for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "b391d141-a6ce-4a34-83e6-ad96e89e2f2c",
                    "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                    "skipped": false
                  },
                  {
                    "title": "should pull the 0/0/0 generic tile for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "5753d274-b9a3-4dee-92d8-572fe9b1c0ee",
                    "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                    "skipped": false
                  },
                  {
                    "title": "should generate the cache",
                    "fullTitle": "generic source tests generic cache tests should generate the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "ec78ccec-b3f0-4410-8b52-0838ad963a53",
                    "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                    "skipped": false
                  },
                  {
                    "title": "should pull features for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull features for the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "f5b08540-9c98-40f5-9b0b-815b0abe7bc5",
                    "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/format/generic_test.js",
                "uuid": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "fullFile": "/data/git/mapcache-server/test/format/generic_test.js",
                "passes": [
                  {
                    "title": "should pull the 0/0/0 tile for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "b391d141-a6ce-4a34-83e6-ad96e89e2f2c",
                    "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                    "skipped": false
                  },
                  {
                    "title": "should pull the 0/0/0 generic tile for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "5753d274-b9a3-4dee-92d8-572fe9b1c0ee",
                    "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                    "skipped": false
                  },
                  {
                    "title": "should generate the cache",
                    "fullTitle": "generic source tests generic cache tests should generate the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "ec78ccec-b3f0-4410-8b52-0838ad963a53",
                    "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                    "skipped": false
                  },
                  {
                    "title": "should pull features for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull features for the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "f5b08540-9c98-40f5-9b0b-815b0abe7bc5",
                    "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1
              }
            ],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "generic generic source tests should process the source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "3847f241-5c8c-4a8e-9b62-91da53071b17",
                "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "generic generic source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "b10facdf-5421-415b-8cbf-3ecc5b6febde",
                "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the data source",
                "fullTitle": "generic generic source tests should pull the 0/0/0 geojson tile for the data source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "68c880ff-ccd3-4918-b4d8-a00ed21bb008",
                "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "generic generic source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "d46f8978-f34a-4e22-93d3-01c3ff0d80a3",
                "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/generic_test.js",
            "uuid": "c88526bc-fd18-4084-aed4-4b48090e1e96",
            "fullFile": "/data/git/mapcache-server/test/format/generic_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "generic generic source tests should process the source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "3847f241-5c8c-4a8e-9b62-91da53071b17",
                "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "generic generic source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "b10facdf-5421-415b-8cbf-3ecc5b6febde",
                "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the data source",
                "fullTitle": "generic generic source tests should pull the 0/0/0 geojson tile for the data source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "68c880ff-ccd3-4918-b4d8-a00ed21bb008",
                "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "generic generic source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "d46f8978-f34a-4e22-93d3-01c3ff0d80a3",
                "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": true,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          "ctx": "[Circular ~.allHooks.0.ctx]",
          "_events": {},
          "duration": 0,
          "_error": null
        },
        "test": {
          "title": "\"after all\" hook",
          "async": 0,
          "sync": true,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "type": "hook",
          "parent": {
            "title": "generic source tests",
            "suites": [
              {
                "title": "generic cache tests",
                "suites": [],
                "tests": [
                  {
                    "title": "should pull the 0/0/0 tile for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "b391d141-a6ce-4a34-83e6-ad96e89e2f2c",
                    "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                    "skipped": false
                  },
                  {
                    "title": "should pull the 0/0/0 generic tile for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "5753d274-b9a3-4dee-92d8-572fe9b1c0ee",
                    "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                    "skipped": false
                  },
                  {
                    "title": "should generate the cache",
                    "fullTitle": "generic source tests generic cache tests should generate the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "ec78ccec-b3f0-4410-8b52-0838ad963a53",
                    "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                    "skipped": false
                  },
                  {
                    "title": "should pull features for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull features for the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "f5b08540-9c98-40f5-9b0b-815b0abe7bc5",
                    "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/format/generic_test.js",
                "uuid": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "fullFile": "/data/git/mapcache-server/test/format/generic_test.js",
                "passes": [
                  {
                    "title": "should pull the 0/0/0 tile for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "b391d141-a6ce-4a34-83e6-ad96e89e2f2c",
                    "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                    "skipped": false
                  },
                  {
                    "title": "should pull the 0/0/0 generic tile for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "5753d274-b9a3-4dee-92d8-572fe9b1c0ee",
                    "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                    "skipped": false
                  },
                  {
                    "title": "should generate the cache",
                    "fullTitle": "generic source tests generic cache tests should generate the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "ec78ccec-b3f0-4410-8b52-0838ad963a53",
                    "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                    "skipped": false
                  },
                  {
                    "title": "should pull features for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull features for the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "f5b08540-9c98-40f5-9b0b-815b0abe7bc5",
                    "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1
              }
            ],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "generic generic source tests should process the source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "3847f241-5c8c-4a8e-9b62-91da53071b17",
                "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "generic generic source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "b10facdf-5421-415b-8cbf-3ecc5b6febde",
                "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the data source",
                "fullTitle": "generic generic source tests should pull the 0/0/0 geojson tile for the data source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "68c880ff-ccd3-4918-b4d8-a00ed21bb008",
                "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "generic generic source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "d46f8978-f34a-4e22-93d3-01c3ff0d80a3",
                "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/generic_test.js",
            "uuid": "c88526bc-fd18-4084-aed4-4b48090e1e96",
            "fullFile": "/data/git/mapcache-server/test/format/generic_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "generic generic source tests should process the source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "3847f241-5c8c-4a8e-9b62-91da53071b17",
                "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "generic generic source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "b10facdf-5421-415b-8cbf-3ecc5b6febde",
                "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the data source",
                "fullTitle": "generic generic source tests should pull the 0/0/0 geojson tile for the data source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "68c880ff-ccd3-4918-b4d8-a00ed21bb008",
                "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "generic generic source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "d46f8978-f34a-4e22-93d3-01c3ff0d80a3",
                "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": true,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          "ctx": "[Circular ~.allHooks.0.ctx]",
          "_events": {},
          "duration": 0,
          "_error": null
        }
      },
      "_events": {},
      "duration": 0,
      "_error": null
    },
    {
      "title": "\"before all\" hook",
      "async": 0,
      "sync": true,
      "_timeout": 2000,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "generic cache tests",
        "suites": [],
        "tests": [
          {
            "title": "should pull the 0/0/0 tile for the cache",
            "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "b391d141-a6ce-4a34-83e6-ad96e89e2f2c",
            "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 generic tile for the cache",
            "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "5753d274-b9a3-4dee-92d8-572fe9b1c0ee",
            "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
            "skipped": false
          },
          {
            "title": "should generate the cache",
            "fullTitle": "generic source tests generic cache tests should generate the cache",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
            "isRoot": false,
            "uuid": "ec78ccec-b3f0-4410-8b52-0838ad963a53",
            "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
            "skipped": false
          },
          {
            "title": "should pull features for the cache",
            "fullTitle": "generic source tests generic cache tests should pull features for the cache",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "f5b08540-9c98-40f5-9b0b-815b0abe7bc5",
            "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/generic_test.js",
        "uuid": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
        "fullFile": "/data/git/mapcache-server/test/format/generic_test.js",
        "passes": [
          {
            "title": "should pull the 0/0/0 tile for the cache",
            "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "b391d141-a6ce-4a34-83e6-ad96e89e2f2c",
            "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 generic tile for the cache",
            "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "5753d274-b9a3-4dee-92d8-572fe9b1c0ee",
            "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
            "skipped": false
          },
          {
            "title": "should generate the cache",
            "fullTitle": "generic source tests generic cache tests should generate the cache",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
            "isRoot": false,
            "uuid": "ec78ccec-b3f0-4410-8b52-0838ad963a53",
            "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
            "skipped": false
          },
          {
            "title": "should pull features for the cache",
            "fullTitle": "generic source tests generic cache tests should pull features for the cache",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "f5b08540-9c98-40f5-9b0b-815b0abe7bc5",
            "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 4,
        "totalPasses": 4,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 1
      },
      "ctx": {
        "_runnable": {
          "title": "\"after all\" hook",
          "async": 0,
          "sync": true,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "type": "hook",
          "parent": {
            "title": "generic cache tests",
            "suites": [],
            "tests": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "b391d141-a6ce-4a34-83e6-ad96e89e2f2c",
                "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 generic tile for the cache",
                "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "5753d274-b9a3-4dee-92d8-572fe9b1c0ee",
                "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "skipped": false
              },
              {
                "title": "should generate the cache",
                "fullTitle": "generic source tests generic cache tests should generate the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                "isRoot": false,
                "uuid": "ec78ccec-b3f0-4410-8b52-0838ad963a53",
                "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "skipped": false
              },
              {
                "title": "should pull features for the cache",
                "fullTitle": "generic source tests generic cache tests should pull features for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "f5b08540-9c98-40f5-9b0b-815b0abe7bc5",
                "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/generic_test.js",
            "uuid": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
            "fullFile": "/data/git/mapcache-server/test/format/generic_test.js",
            "passes": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "b391d141-a6ce-4a34-83e6-ad96e89e2f2c",
                "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 generic tile for the cache",
                "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "5753d274-b9a3-4dee-92d8-572fe9b1c0ee",
                "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "skipped": false
              },
              {
                "title": "should generate the cache",
                "fullTitle": "generic source tests generic cache tests should generate the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                "isRoot": false,
                "uuid": "ec78ccec-b3f0-4410-8b52-0838ad963a53",
                "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "skipped": false
              },
              {
                "title": "should pull features for the cache",
                "fullTitle": "generic source tests generic cache tests should pull features for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "f5b08540-9c98-40f5-9b0b-815b0abe7bc5",
                "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          "ctx": "[Circular ~.allHooks.1.ctx]",
          "_events": {},
          "duration": 0,
          "_error": null
        },
        "test": {
          "title": "\"after all\" hook",
          "async": 0,
          "sync": true,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "type": "hook",
          "parent": {
            "title": "generic cache tests",
            "suites": [],
            "tests": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "b391d141-a6ce-4a34-83e6-ad96e89e2f2c",
                "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 generic tile for the cache",
                "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "5753d274-b9a3-4dee-92d8-572fe9b1c0ee",
                "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "skipped": false
              },
              {
                "title": "should generate the cache",
                "fullTitle": "generic source tests generic cache tests should generate the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                "isRoot": false,
                "uuid": "ec78ccec-b3f0-4410-8b52-0838ad963a53",
                "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "skipped": false
              },
              {
                "title": "should pull features for the cache",
                "fullTitle": "generic source tests generic cache tests should pull features for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "f5b08540-9c98-40f5-9b0b-815b0abe7bc5",
                "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/generic_test.js",
            "uuid": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
            "fullFile": "/data/git/mapcache-server/test/format/generic_test.js",
            "passes": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "b391d141-a6ce-4a34-83e6-ad96e89e2f2c",
                "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 generic tile for the cache",
                "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "5753d274-b9a3-4dee-92d8-572fe9b1c0ee",
                "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "skipped": false
              },
              {
                "title": "should generate the cache",
                "fullTitle": "generic source tests generic cache tests should generate the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                "isRoot": false,
                "uuid": "ec78ccec-b3f0-4410-8b52-0838ad963a53",
                "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "skipped": false
              },
              {
                "title": "should pull features for the cache",
                "fullTitle": "generic source tests generic cache tests should pull features for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "f5b08540-9c98-40f5-9b0b-815b0abe7bc5",
                "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          "ctx": "[Circular ~.allHooks.1.ctx]",
          "_events": {},
          "duration": 0,
          "_error": null
        }
      },
      "_events": {},
      "duration": 0,
      "_error": null
    },
    {
      "title": "\"after all\" hook",
      "async": 0,
      "sync": true,
      "_timeout": 2000,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "generic cache tests",
        "suites": [],
        "tests": [
          {
            "title": "should pull the 0/0/0 tile for the cache",
            "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "b391d141-a6ce-4a34-83e6-ad96e89e2f2c",
            "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 generic tile for the cache",
            "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "5753d274-b9a3-4dee-92d8-572fe9b1c0ee",
            "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
            "skipped": false
          },
          {
            "title": "should generate the cache",
            "fullTitle": "generic source tests generic cache tests should generate the cache",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
            "isRoot": false,
            "uuid": "ec78ccec-b3f0-4410-8b52-0838ad963a53",
            "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
            "skipped": false
          },
          {
            "title": "should pull features for the cache",
            "fullTitle": "generic source tests generic cache tests should pull features for the cache",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "f5b08540-9c98-40f5-9b0b-815b0abe7bc5",
            "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/generic_test.js",
        "uuid": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
        "fullFile": "/data/git/mapcache-server/test/format/generic_test.js",
        "passes": [
          {
            "title": "should pull the 0/0/0 tile for the cache",
            "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "b391d141-a6ce-4a34-83e6-ad96e89e2f2c",
            "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 generic tile for the cache",
            "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "5753d274-b9a3-4dee-92d8-572fe9b1c0ee",
            "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
            "skipped": false
          },
          {
            "title": "should generate the cache",
            "fullTitle": "generic source tests generic cache tests should generate the cache",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
            "isRoot": false,
            "uuid": "ec78ccec-b3f0-4410-8b52-0838ad963a53",
            "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
            "skipped": false
          },
          {
            "title": "should pull features for the cache",
            "fullTitle": "generic source tests generic cache tests should pull features for the cache",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "f5b08540-9c98-40f5-9b0b-815b0abe7bc5",
            "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 4,
        "totalPasses": 4,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 1
      },
      "ctx": {
        "_runnable": "[Circular ~.allHooks.2]",
        "test": "[Circular ~.allHooks.2]"
      },
      "_events": {},
      "duration": 0,
      "_error": null
    },
    {
      "title": "\"after all\" hook",
      "async": 0,
      "sync": true,
      "_timeout": 2000,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "generic source tests",
        "suites": [
          {
            "title": "generic cache tests",
            "suites": [],
            "tests": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "b391d141-a6ce-4a34-83e6-ad96e89e2f2c",
                "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 generic tile for the cache",
                "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "5753d274-b9a3-4dee-92d8-572fe9b1c0ee",
                "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "skipped": false
              },
              {
                "title": "should generate the cache",
                "fullTitle": "generic source tests generic cache tests should generate the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                "isRoot": false,
                "uuid": "ec78ccec-b3f0-4410-8b52-0838ad963a53",
                "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "skipped": false
              },
              {
                "title": "should pull features for the cache",
                "fullTitle": "generic source tests generic cache tests should pull features for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "f5b08540-9c98-40f5-9b0b-815b0abe7bc5",
                "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/generic_test.js",
            "uuid": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
            "fullFile": "/data/git/mapcache-server/test/format/generic_test.js",
            "passes": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "b391d141-a6ce-4a34-83e6-ad96e89e2f2c",
                "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 generic tile for the cache",
                "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "5753d274-b9a3-4dee-92d8-572fe9b1c0ee",
                "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "skipped": false
              },
              {
                "title": "should generate the cache",
                "fullTitle": "generic source tests generic cache tests should generate the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                "isRoot": false,
                "uuid": "ec78ccec-b3f0-4410-8b52-0838ad963a53",
                "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "skipped": false
              },
              {
                "title": "should pull features for the cache",
                "fullTitle": "generic source tests generic cache tests should pull features for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "f5b08540-9c98-40f5-9b0b-815b0abe7bc5",
                "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [
          {
            "title": "should process the source",
            "fullTitle": "generic generic source tests should process the source",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "3847f241-5c8c-4a8e-9b62-91da53071b17",
            "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 tile for the data source",
            "fullTitle": "generic generic source tests should pull the 0/0/0 tile for the data source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "b10facdf-5421-415b-8cbf-3ecc5b6febde",
            "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 geojson tile for the data source",
            "fullTitle": "generic generic source tests should pull the 0/0/0 geojson tile for the data source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "68c880ff-ccd3-4918-b4d8-a00ed21bb008",
            "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "generic generic source tests should get all features of the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "d46f8978-f34a-4e22-93d3-01c3ff0d80a3",
            "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/generic_test.js",
        "uuid": "c88526bc-fd18-4084-aed4-4b48090e1e96",
        "fullFile": "/data/git/mapcache-server/test/format/generic_test.js",
        "passes": [
          {
            "title": "should process the source",
            "fullTitle": "generic generic source tests should process the source",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "3847f241-5c8c-4a8e-9b62-91da53071b17",
            "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 tile for the data source",
            "fullTitle": "generic generic source tests should pull the 0/0/0 tile for the data source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "b10facdf-5421-415b-8cbf-3ecc5b6febde",
            "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 geojson tile for the data source",
            "fullTitle": "generic generic source tests should pull the 0/0/0 geojson tile for the data source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "68c880ff-ccd3-4918-b4d8-a00ed21bb008",
            "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "generic generic source tests should get all features of the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "d46f8978-f34a-4e22-93d3-01c3ff0d80a3",
            "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": true,
        "totalTests": 4,
        "totalPasses": 4,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 1
      },
      "ctx": {
        "_runnable": "[Circular ~.allHooks.3]",
        "test": "[Circular ~.allHooks.3]"
      },
      "_events": {},
      "duration": 0,
      "_error": null
    },
    {
      "title": "\"before all\" hook",
      "async": 1,
      "sync": false,
      "_timeout": 2000,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "geojson source tests",
        "suites": [
          {
            "title": "geojson cache tests",
            "suites": [],
            "tests": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "d8950717-d280-4703-a8d2-ae5535e82e79",
                "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "46497a33-02df-41ed-8ab6-04bc9feddf59",
                "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "skipped": false
              },
              {
                "title": "should generate the cache",
                "fullTitle": "geojson source tests geojson cache tests should generate the cache",
                "timedOut": false,
                "duration": 19,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                "isRoot": false,
                "uuid": "85cde8d4-538e-4fc1-9c1c-c4959ae59dda",
                "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "skipped": false
              },
              {
                "title": "should pull features for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "e5410562-34d1-466f-8459-cddc7f04f55d",
                "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/geojson_test.js",
            "uuid": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
            "fullFile": "/data/git/mapcache-server/test/format/geojson_test.js",
            "passes": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "d8950717-d280-4703-a8d2-ae5535e82e79",
                "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "46497a33-02df-41ed-8ab6-04bc9feddf59",
                "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "skipped": false
              },
              {
                "title": "should generate the cache",
                "fullTitle": "geojson source tests geojson cache tests should generate the cache",
                "timedOut": false,
                "duration": 19,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                "isRoot": false,
                "uuid": "85cde8d4-538e-4fc1-9c1c-c4959ae59dda",
                "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "skipped": false
              },
              {
                "title": "should pull features for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "e5410562-34d1-466f-8459-cddc7f04f55d",
                "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 38
          }
        ],
        "tests": [
          {
            "title": "should process the source",
            "fullTitle": "geojson geojson source tests should process the source",
            "timedOut": false,
            "duration": 10,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  FeatureModel.getAllSourceFeatures(geojson.source.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'features'</span>, features);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "167e5350-b812-4017-9b7a-dfbb2f392225",
            "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 tile for the data source",
            "fullTitle": "geojson geojson source tests should pull the 0/0/0 tile for the data source",
            "timedOut": false,
            "duration": 9,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "286787d4-6a5f-45a9-87ee-d7c8841ee50f",
            "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 geojson tile for the data source",
            "fullTitle": "geojson geojson source tests should pull the 0/0/0 geojson tile for the data source",
            "timedOut": false,
            "duration": 5,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "2d15370a-87f0-4011-8d31-916f1555488d",
            "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "geojson geojson source tests should get all features of the source",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"feature count\"</span>, features);<br>  features.length.should.be.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "7b6fe700-53d6-4886-a780-e083cf31d705",
            "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/geojson_test.js",
        "uuid": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
        "fullFile": "/data/git/mapcache-server/test/format/geojson_test.js",
        "passes": [
          {
            "title": "should process the source",
            "fullTitle": "geojson geojson source tests should process the source",
            "timedOut": false,
            "duration": 10,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  FeatureModel.getAllSourceFeatures(geojson.source.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'features'</span>, features);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "167e5350-b812-4017-9b7a-dfbb2f392225",
            "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 tile for the data source",
            "fullTitle": "geojson geojson source tests should pull the 0/0/0 tile for the data source",
            "timedOut": false,
            "duration": 9,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "286787d4-6a5f-45a9-87ee-d7c8841ee50f",
            "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 geojson tile for the data source",
            "fullTitle": "geojson geojson source tests should pull the 0/0/0 geojson tile for the data source",
            "timedOut": false,
            "duration": 5,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "2d15370a-87f0-4011-8d31-916f1555488d",
            "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "geojson geojson source tests should get all features of the source",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"feature count\"</span>, features);<br>  features.length.should.be.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "7b6fe700-53d6-4886-a780-e083cf31d705",
            "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": true,
        "totalTests": 4,
        "totalPasses": 4,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 25
      },
      "ctx": {
        "_runnable": {
          "title": "\"after all\" hook",
          "async": 1,
          "sync": false,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "type": "hook",
          "parent": {
            "title": "geojson source tests",
            "suites": [
              {
                "title": "geojson cache tests",
                "suites": [],
                "tests": [
                  {
                    "title": "should pull the 0/0/0 tile for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
                    "timedOut": false,
                    "duration": 13,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                    "isRoot": false,
                    "uuid": "d8950717-d280-4703-a8d2-ae5535e82e79",
                    "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                    "skipped": false
                  },
                  {
                    "title": "should pull the 0/0/0 geojson tile for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
                    "isRoot": false,
                    "uuid": "46497a33-02df-41ed-8ab6-04bc9feddf59",
                    "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                    "skipped": false
                  },
                  {
                    "title": "should generate the cache",
                    "fullTitle": "geojson source tests geojson cache tests should generate the cache",
                    "timedOut": false,
                    "duration": 19,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "85cde8d4-538e-4fc1-9c1c-c4959ae59dda",
                    "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                    "skipped": false
                  },
                  {
                    "title": "should pull features for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "e5410562-34d1-466f-8459-cddc7f04f55d",
                    "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/format/geojson_test.js",
                "uuid": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "fullFile": "/data/git/mapcache-server/test/format/geojson_test.js",
                "passes": [
                  {
                    "title": "should pull the 0/0/0 tile for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
                    "timedOut": false,
                    "duration": 13,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                    "isRoot": false,
                    "uuid": "d8950717-d280-4703-a8d2-ae5535e82e79",
                    "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                    "skipped": false
                  },
                  {
                    "title": "should pull the 0/0/0 geojson tile for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
                    "isRoot": false,
                    "uuid": "46497a33-02df-41ed-8ab6-04bc9feddf59",
                    "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                    "skipped": false
                  },
                  {
                    "title": "should generate the cache",
                    "fullTitle": "geojson source tests geojson cache tests should generate the cache",
                    "timedOut": false,
                    "duration": 19,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "85cde8d4-538e-4fc1-9c1c-c4959ae59dda",
                    "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                    "skipped": false
                  },
                  {
                    "title": "should pull features for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "e5410562-34d1-466f-8459-cddc7f04f55d",
                    "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 38
              }
            ],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "geojson geojson source tests should process the source",
                "timedOut": false,
                "duration": 10,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  FeatureModel.getAllSourceFeatures(geojson.source.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'features'</span>, features);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "167e5350-b812-4017-9b7a-dfbb2f392225",
                "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "geojson geojson source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "286787d4-6a5f-45a9-87ee-d7c8841ee50f",
                "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the data source",
                "fullTitle": "geojson geojson source tests should pull the 0/0/0 geojson tile for the data source",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "2d15370a-87f0-4011-8d31-916f1555488d",
                "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "geojson geojson source tests should get all features of the source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"feature count\"</span>, features);<br>  features.length.should.be.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "7b6fe700-53d6-4886-a780-e083cf31d705",
                "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/geojson_test.js",
            "uuid": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
            "fullFile": "/data/git/mapcache-server/test/format/geojson_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "geojson geojson source tests should process the source",
                "timedOut": false,
                "duration": 10,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  FeatureModel.getAllSourceFeatures(geojson.source.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'features'</span>, features);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "167e5350-b812-4017-9b7a-dfbb2f392225",
                "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "geojson geojson source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "286787d4-6a5f-45a9-87ee-d7c8841ee50f",
                "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the data source",
                "fullTitle": "geojson geojson source tests should pull the 0/0/0 geojson tile for the data source",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "2d15370a-87f0-4011-8d31-916f1555488d",
                "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "geojson geojson source tests should get all features of the source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"feature count\"</span>, features);<br>  features.length.should.be.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "7b6fe700-53d6-4886-a780-e083cf31d705",
                "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": true,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 25
          },
          "ctx": "[Circular ~.allHooks.4.ctx]",
          "_events": {},
          "duration": 1,
          "_error": null
        },
        "test": {
          "title": "\"after all\" hook",
          "async": 1,
          "sync": false,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "type": "hook",
          "parent": {
            "title": "geojson source tests",
            "suites": [
              {
                "title": "geojson cache tests",
                "suites": [],
                "tests": [
                  {
                    "title": "should pull the 0/0/0 tile for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
                    "timedOut": false,
                    "duration": 13,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                    "isRoot": false,
                    "uuid": "d8950717-d280-4703-a8d2-ae5535e82e79",
                    "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                    "skipped": false
                  },
                  {
                    "title": "should pull the 0/0/0 geojson tile for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
                    "isRoot": false,
                    "uuid": "46497a33-02df-41ed-8ab6-04bc9feddf59",
                    "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                    "skipped": false
                  },
                  {
                    "title": "should generate the cache",
                    "fullTitle": "geojson source tests geojson cache tests should generate the cache",
                    "timedOut": false,
                    "duration": 19,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "85cde8d4-538e-4fc1-9c1c-c4959ae59dda",
                    "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                    "skipped": false
                  },
                  {
                    "title": "should pull features for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "e5410562-34d1-466f-8459-cddc7f04f55d",
                    "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/format/geojson_test.js",
                "uuid": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "fullFile": "/data/git/mapcache-server/test/format/geojson_test.js",
                "passes": [
                  {
                    "title": "should pull the 0/0/0 tile for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
                    "timedOut": false,
                    "duration": 13,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                    "isRoot": false,
                    "uuid": "d8950717-d280-4703-a8d2-ae5535e82e79",
                    "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                    "skipped": false
                  },
                  {
                    "title": "should pull the 0/0/0 geojson tile for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
                    "isRoot": false,
                    "uuid": "46497a33-02df-41ed-8ab6-04bc9feddf59",
                    "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                    "skipped": false
                  },
                  {
                    "title": "should generate the cache",
                    "fullTitle": "geojson source tests geojson cache tests should generate the cache",
                    "timedOut": false,
                    "duration": 19,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "85cde8d4-538e-4fc1-9c1c-c4959ae59dda",
                    "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                    "skipped": false
                  },
                  {
                    "title": "should pull features for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "e5410562-34d1-466f-8459-cddc7f04f55d",
                    "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 38
              }
            ],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "geojson geojson source tests should process the source",
                "timedOut": false,
                "duration": 10,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  FeatureModel.getAllSourceFeatures(geojson.source.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'features'</span>, features);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "167e5350-b812-4017-9b7a-dfbb2f392225",
                "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "geojson geojson source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "286787d4-6a5f-45a9-87ee-d7c8841ee50f",
                "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the data source",
                "fullTitle": "geojson geojson source tests should pull the 0/0/0 geojson tile for the data source",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "2d15370a-87f0-4011-8d31-916f1555488d",
                "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "geojson geojson source tests should get all features of the source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"feature count\"</span>, features);<br>  features.length.should.be.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "7b6fe700-53d6-4886-a780-e083cf31d705",
                "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/geojson_test.js",
            "uuid": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
            "fullFile": "/data/git/mapcache-server/test/format/geojson_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "geojson geojson source tests should process the source",
                "timedOut": false,
                "duration": 10,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  FeatureModel.getAllSourceFeatures(geojson.source.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'features'</span>, features);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "167e5350-b812-4017-9b7a-dfbb2f392225",
                "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "geojson geojson source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "286787d4-6a5f-45a9-87ee-d7c8841ee50f",
                "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the data source",
                "fullTitle": "geojson geojson source tests should pull the 0/0/0 geojson tile for the data source",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "2d15370a-87f0-4011-8d31-916f1555488d",
                "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "geojson geojson source tests should get all features of the source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"feature count\"</span>, features);<br>  features.length.should.be.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "7b6fe700-53d6-4886-a780-e083cf31d705",
                "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": true,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 25
          },
          "ctx": "[Circular ~.allHooks.4.ctx]",
          "_events": {},
          "duration": 1,
          "_error": null
        }
      },
      "_events": {},
      "duration": 1,
      "_error": null
    },
    {
      "title": "\"before all\" hook",
      "async": 1,
      "sync": false,
      "_timeout": 2000,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "geojson cache tests",
        "suites": [],
        "tests": [
          {
            "title": "should pull the 0/0/0 tile for the cache",
            "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "d8950717-d280-4703-a8d2-ae5535e82e79",
            "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 geojson tile for the cache",
            "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "46497a33-02df-41ed-8ab6-04bc9feddf59",
            "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
            "skipped": false
          },
          {
            "title": "should generate the cache",
            "fullTitle": "geojson source tests geojson cache tests should generate the cache",
            "timedOut": false,
            "duration": 19,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
            "isRoot": false,
            "uuid": "85cde8d4-538e-4fc1-9c1c-c4959ae59dda",
            "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
            "skipped": false
          },
          {
            "title": "should pull features for the cache",
            "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "e5410562-34d1-466f-8459-cddc7f04f55d",
            "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/geojson_test.js",
        "uuid": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
        "fullFile": "/data/git/mapcache-server/test/format/geojson_test.js",
        "passes": [
          {
            "title": "should pull the 0/0/0 tile for the cache",
            "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "d8950717-d280-4703-a8d2-ae5535e82e79",
            "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 geojson tile for the cache",
            "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "46497a33-02df-41ed-8ab6-04bc9feddf59",
            "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
            "skipped": false
          },
          {
            "title": "should generate the cache",
            "fullTitle": "geojson source tests geojson cache tests should generate the cache",
            "timedOut": false,
            "duration": 19,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
            "isRoot": false,
            "uuid": "85cde8d4-538e-4fc1-9c1c-c4959ae59dda",
            "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
            "skipped": false
          },
          {
            "title": "should pull features for the cache",
            "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "e5410562-34d1-466f-8459-cddc7f04f55d",
            "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 4,
        "totalPasses": 4,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 38
      },
      "ctx": {
        "_runnable": {
          "title": "\"after all\" hook",
          "async": 1,
          "sync": false,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "type": "hook",
          "parent": {
            "title": "geojson cache tests",
            "suites": [],
            "tests": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "d8950717-d280-4703-a8d2-ae5535e82e79",
                "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "46497a33-02df-41ed-8ab6-04bc9feddf59",
                "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "skipped": false
              },
              {
                "title": "should generate the cache",
                "fullTitle": "geojson source tests geojson cache tests should generate the cache",
                "timedOut": false,
                "duration": 19,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                "isRoot": false,
                "uuid": "85cde8d4-538e-4fc1-9c1c-c4959ae59dda",
                "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "skipped": false
              },
              {
                "title": "should pull features for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "e5410562-34d1-466f-8459-cddc7f04f55d",
                "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/geojson_test.js",
            "uuid": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
            "fullFile": "/data/git/mapcache-server/test/format/geojson_test.js",
            "passes": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "d8950717-d280-4703-a8d2-ae5535e82e79",
                "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "46497a33-02df-41ed-8ab6-04bc9feddf59",
                "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "skipped": false
              },
              {
                "title": "should generate the cache",
                "fullTitle": "geojson source tests geojson cache tests should generate the cache",
                "timedOut": false,
                "duration": 19,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                "isRoot": false,
                "uuid": "85cde8d4-538e-4fc1-9c1c-c4959ae59dda",
                "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "skipped": false
              },
              {
                "title": "should pull features for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "e5410562-34d1-466f-8459-cddc7f04f55d",
                "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 38
          },
          "ctx": "[Circular ~.allHooks.5.ctx]",
          "_events": {},
          "duration": 6,
          "_error": null
        },
        "test": {
          "title": "\"after all\" hook",
          "async": 1,
          "sync": false,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "type": "hook",
          "parent": {
            "title": "geojson cache tests",
            "suites": [],
            "tests": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "d8950717-d280-4703-a8d2-ae5535e82e79",
                "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "46497a33-02df-41ed-8ab6-04bc9feddf59",
                "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "skipped": false
              },
              {
                "title": "should generate the cache",
                "fullTitle": "geojson source tests geojson cache tests should generate the cache",
                "timedOut": false,
                "duration": 19,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                "isRoot": false,
                "uuid": "85cde8d4-538e-4fc1-9c1c-c4959ae59dda",
                "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "skipped": false
              },
              {
                "title": "should pull features for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "e5410562-34d1-466f-8459-cddc7f04f55d",
                "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/geojson_test.js",
            "uuid": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
            "fullFile": "/data/git/mapcache-server/test/format/geojson_test.js",
            "passes": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "d8950717-d280-4703-a8d2-ae5535e82e79",
                "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "46497a33-02df-41ed-8ab6-04bc9feddf59",
                "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "skipped": false
              },
              {
                "title": "should generate the cache",
                "fullTitle": "geojson source tests geojson cache tests should generate the cache",
                "timedOut": false,
                "duration": 19,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                "isRoot": false,
                "uuid": "85cde8d4-538e-4fc1-9c1c-c4959ae59dda",
                "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "skipped": false
              },
              {
                "title": "should pull features for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "e5410562-34d1-466f-8459-cddc7f04f55d",
                "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 38
          },
          "ctx": "[Circular ~.allHooks.5.ctx]",
          "_events": {},
          "duration": 6,
          "_error": null
        }
      },
      "_events": {},
      "duration": 0,
      "_error": null
    },
    {
      "title": "\"after all\" hook",
      "async": 1,
      "sync": false,
      "_timeout": 2000,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "geojson cache tests",
        "suites": [],
        "tests": [
          {
            "title": "should pull the 0/0/0 tile for the cache",
            "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "d8950717-d280-4703-a8d2-ae5535e82e79",
            "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 geojson tile for the cache",
            "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "46497a33-02df-41ed-8ab6-04bc9feddf59",
            "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
            "skipped": false
          },
          {
            "title": "should generate the cache",
            "fullTitle": "geojson source tests geojson cache tests should generate the cache",
            "timedOut": false,
            "duration": 19,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
            "isRoot": false,
            "uuid": "85cde8d4-538e-4fc1-9c1c-c4959ae59dda",
            "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
            "skipped": false
          },
          {
            "title": "should pull features for the cache",
            "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "e5410562-34d1-466f-8459-cddc7f04f55d",
            "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/geojson_test.js",
        "uuid": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
        "fullFile": "/data/git/mapcache-server/test/format/geojson_test.js",
        "passes": [
          {
            "title": "should pull the 0/0/0 tile for the cache",
            "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "d8950717-d280-4703-a8d2-ae5535e82e79",
            "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 geojson tile for the cache",
            "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "46497a33-02df-41ed-8ab6-04bc9feddf59",
            "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
            "skipped": false
          },
          {
            "title": "should generate the cache",
            "fullTitle": "geojson source tests geojson cache tests should generate the cache",
            "timedOut": false,
            "duration": 19,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
            "isRoot": false,
            "uuid": "85cde8d4-538e-4fc1-9c1c-c4959ae59dda",
            "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
            "skipped": false
          },
          {
            "title": "should pull features for the cache",
            "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "e5410562-34d1-466f-8459-cddc7f04f55d",
            "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 4,
        "totalPasses": 4,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 38
      },
      "ctx": {
        "_runnable": "[Circular ~.allHooks.6]",
        "test": "[Circular ~.allHooks.6]"
      },
      "_events": {},
      "duration": 6,
      "_error": null
    },
    {
      "title": "\"after all\" hook",
      "async": 1,
      "sync": false,
      "_timeout": 2000,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "geojson source tests",
        "suites": [
          {
            "title": "geojson cache tests",
            "suites": [],
            "tests": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "d8950717-d280-4703-a8d2-ae5535e82e79",
                "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "46497a33-02df-41ed-8ab6-04bc9feddf59",
                "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "skipped": false
              },
              {
                "title": "should generate the cache",
                "fullTitle": "geojson source tests geojson cache tests should generate the cache",
                "timedOut": false,
                "duration": 19,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                "isRoot": false,
                "uuid": "85cde8d4-538e-4fc1-9c1c-c4959ae59dda",
                "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "skipped": false
              },
              {
                "title": "should pull features for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "e5410562-34d1-466f-8459-cddc7f04f55d",
                "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/geojson_test.js",
            "uuid": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
            "fullFile": "/data/git/mapcache-server/test/format/geojson_test.js",
            "passes": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "d8950717-d280-4703-a8d2-ae5535e82e79",
                "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "46497a33-02df-41ed-8ab6-04bc9feddf59",
                "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "skipped": false
              },
              {
                "title": "should generate the cache",
                "fullTitle": "geojson source tests geojson cache tests should generate the cache",
                "timedOut": false,
                "duration": 19,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                "isRoot": false,
                "uuid": "85cde8d4-538e-4fc1-9c1c-c4959ae59dda",
                "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "skipped": false
              },
              {
                "title": "should pull features for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "e5410562-34d1-466f-8459-cddc7f04f55d",
                "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 38
          }
        ],
        "tests": [
          {
            "title": "should process the source",
            "fullTitle": "geojson geojson source tests should process the source",
            "timedOut": false,
            "duration": 10,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  FeatureModel.getAllSourceFeatures(geojson.source.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'features'</span>, features);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "167e5350-b812-4017-9b7a-dfbb2f392225",
            "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 tile for the data source",
            "fullTitle": "geojson geojson source tests should pull the 0/0/0 tile for the data source",
            "timedOut": false,
            "duration": 9,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "286787d4-6a5f-45a9-87ee-d7c8841ee50f",
            "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 geojson tile for the data source",
            "fullTitle": "geojson geojson source tests should pull the 0/0/0 geojson tile for the data source",
            "timedOut": false,
            "duration": 5,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "2d15370a-87f0-4011-8d31-916f1555488d",
            "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "geojson geojson source tests should get all features of the source",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"feature count\"</span>, features);<br>  features.length.should.be.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "7b6fe700-53d6-4886-a780-e083cf31d705",
            "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/geojson_test.js",
        "uuid": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
        "fullFile": "/data/git/mapcache-server/test/format/geojson_test.js",
        "passes": [
          {
            "title": "should process the source",
            "fullTitle": "geojson geojson source tests should process the source",
            "timedOut": false,
            "duration": 10,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  FeatureModel.getAllSourceFeatures(geojson.source.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'features'</span>, features);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "167e5350-b812-4017-9b7a-dfbb2f392225",
            "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 tile for the data source",
            "fullTitle": "geojson geojson source tests should pull the 0/0/0 tile for the data source",
            "timedOut": false,
            "duration": 9,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "286787d4-6a5f-45a9-87ee-d7c8841ee50f",
            "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 geojson tile for the data source",
            "fullTitle": "geojson geojson source tests should pull the 0/0/0 geojson tile for the data source",
            "timedOut": false,
            "duration": 5,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "2d15370a-87f0-4011-8d31-916f1555488d",
            "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "geojson geojson source tests should get all features of the source",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"feature count\"</span>, features);<br>  features.length.should.be.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "7b6fe700-53d6-4886-a780-e083cf31d705",
            "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": true,
        "totalTests": 4,
        "totalPasses": 4,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 25
      },
      "ctx": {
        "_runnable": "[Circular ~.allHooks.7]",
        "test": "[Circular ~.allHooks.7]"
      },
      "_events": {},
      "duration": 1,
      "_error": null
    },
    {
      "title": "\"before all\" hook",
      "async": 0,
      "sync": true,
      "_timeout": 2000,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "geotiff source tests",
        "suites": [],
        "tests": [
          {
            "title": "should process the source",
            "fullTitle": "geotiff geotiff source tests should process the source",
            "timedOut": false,
            "duration": 18,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "geotiff.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>],<br>        [-<span class=\"hljs-number\">104.82331093941556</span>,<span class=\"hljs-number\">39.67084478892132</span>],<br>        [-<span class=\"hljs-number\">104.82337800954186</span>,<span class=\"hljs-number\">39.64449869141027</span>],<br>        [-<span class=\"hljs-number\">104.85255015490993</span>,<span class=\"hljs-number\">39.64453938508538</span>],<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'26913'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "30c6c60d-9d72-477a-8a66-b5942cc230de",
            "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
            "skipped": false
          },
          {
            "title": "should pull the 13/1710/3111 tile for the data source",
            "fullTitle": "geotiff geotiff source tests should pull the 13/1710/3111 tile for the data source",
            "timedOut": false,
            "duration": 119,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/geotifftile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
            "isRoot": false,
            "uuid": "ee56d1c7-5937-4b53-b236-e66e275c87cd",
            "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "geotiff geotiff source tests should get all features of the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "4dc203ec-ed4f-478b-a637-0c3e02dbe27a",
            "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/geotiff_test.js",
        "uuid": "9c91327e-9071-4edb-afb6-a559a1162cf8",
        "fullFile": "/data/git/mapcache-server/test/format/geotiff_test.js",
        "passes": [
          {
            "title": "should process the source",
            "fullTitle": "geotiff geotiff source tests should process the source",
            "timedOut": false,
            "duration": 18,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "geotiff.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>],<br>        [-<span class=\"hljs-number\">104.82331093941556</span>,<span class=\"hljs-number\">39.67084478892132</span>],<br>        [-<span class=\"hljs-number\">104.82337800954186</span>,<span class=\"hljs-number\">39.64449869141027</span>],<br>        [-<span class=\"hljs-number\">104.85255015490993</span>,<span class=\"hljs-number\">39.64453938508538</span>],<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'26913'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "30c6c60d-9d72-477a-8a66-b5942cc230de",
            "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
            "skipped": false
          },
          {
            "title": "should pull the 13/1710/3111 tile for the data source",
            "fullTitle": "geotiff geotiff source tests should pull the 13/1710/3111 tile for the data source",
            "timedOut": false,
            "duration": 119,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/geotifftile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
            "isRoot": false,
            "uuid": "ee56d1c7-5937-4b53-b236-e66e275c87cd",
            "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "geotiff geotiff source tests should get all features of the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "4dc203ec-ed4f-478b-a637-0c3e02dbe27a",
            "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 137
      },
      "ctx": {
        "_runnable": {
          "title": "\"after all\" hook",
          "async": 0,
          "sync": true,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "type": "hook",
          "parent": {
            "title": "geotiff source tests",
            "suites": [],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "geotiff geotiff source tests should process the source",
                "timedOut": false,
                "duration": 18,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geotiff.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>],<br>        [-<span class=\"hljs-number\">104.82331093941556</span>,<span class=\"hljs-number\">39.67084478892132</span>],<br>        [-<span class=\"hljs-number\">104.82337800954186</span>,<span class=\"hljs-number\">39.64449869141027</span>],<br>        [-<span class=\"hljs-number\">104.85255015490993</span>,<span class=\"hljs-number\">39.64453938508538</span>],<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'26913'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "30c6c60d-9d72-477a-8a66-b5942cc230de",
                "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
                "skipped": false
              },
              {
                "title": "should pull the 13/1710/3111 tile for the data source",
                "fullTitle": "geotiff geotiff source tests should pull the 13/1710/3111 tile for the data source",
                "timedOut": false,
                "duration": 119,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/geotifftile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
                "isRoot": false,
                "uuid": "ee56d1c7-5937-4b53-b236-e66e275c87cd",
                "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "geotiff geotiff source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "4dc203ec-ed4f-478b-a637-0c3e02dbe27a",
                "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/geotiff_test.js",
            "uuid": "9c91327e-9071-4edb-afb6-a559a1162cf8",
            "fullFile": "/data/git/mapcache-server/test/format/geotiff_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "geotiff geotiff source tests should process the source",
                "timedOut": false,
                "duration": 18,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geotiff.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>],<br>        [-<span class=\"hljs-number\">104.82331093941556</span>,<span class=\"hljs-number\">39.67084478892132</span>],<br>        [-<span class=\"hljs-number\">104.82337800954186</span>,<span class=\"hljs-number\">39.64449869141027</span>],<br>        [-<span class=\"hljs-number\">104.85255015490993</span>,<span class=\"hljs-number\">39.64453938508538</span>],<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'26913'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "30c6c60d-9d72-477a-8a66-b5942cc230de",
                "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
                "skipped": false
              },
              {
                "title": "should pull the 13/1710/3111 tile for the data source",
                "fullTitle": "geotiff geotiff source tests should pull the 13/1710/3111 tile for the data source",
                "timedOut": false,
                "duration": 119,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/geotifftile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
                "isRoot": false,
                "uuid": "ee56d1c7-5937-4b53-b236-e66e275c87cd",
                "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "geotiff geotiff source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "4dc203ec-ed4f-478b-a637-0c3e02dbe27a",
                "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 137
          },
          "ctx": "[Circular ~.allHooks.8.ctx]",
          "_events": {},
          "duration": 0,
          "_error": null
        },
        "test": {
          "title": "\"after all\" hook",
          "async": 0,
          "sync": true,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "type": "hook",
          "parent": {
            "title": "geotiff source tests",
            "suites": [],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "geotiff geotiff source tests should process the source",
                "timedOut": false,
                "duration": 18,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geotiff.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>],<br>        [-<span class=\"hljs-number\">104.82331093941556</span>,<span class=\"hljs-number\">39.67084478892132</span>],<br>        [-<span class=\"hljs-number\">104.82337800954186</span>,<span class=\"hljs-number\">39.64449869141027</span>],<br>        [-<span class=\"hljs-number\">104.85255015490993</span>,<span class=\"hljs-number\">39.64453938508538</span>],<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'26913'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "30c6c60d-9d72-477a-8a66-b5942cc230de",
                "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
                "skipped": false
              },
              {
                "title": "should pull the 13/1710/3111 tile for the data source",
                "fullTitle": "geotiff geotiff source tests should pull the 13/1710/3111 tile for the data source",
                "timedOut": false,
                "duration": 119,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/geotifftile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
                "isRoot": false,
                "uuid": "ee56d1c7-5937-4b53-b236-e66e275c87cd",
                "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "geotiff geotiff source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "4dc203ec-ed4f-478b-a637-0c3e02dbe27a",
                "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/geotiff_test.js",
            "uuid": "9c91327e-9071-4edb-afb6-a559a1162cf8",
            "fullFile": "/data/git/mapcache-server/test/format/geotiff_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "geotiff geotiff source tests should process the source",
                "timedOut": false,
                "duration": 18,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geotiff.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>],<br>        [-<span class=\"hljs-number\">104.82331093941556</span>,<span class=\"hljs-number\">39.67084478892132</span>],<br>        [-<span class=\"hljs-number\">104.82337800954186</span>,<span class=\"hljs-number\">39.64449869141027</span>],<br>        [-<span class=\"hljs-number\">104.85255015490993</span>,<span class=\"hljs-number\">39.64453938508538</span>],<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'26913'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "30c6c60d-9d72-477a-8a66-b5942cc230de",
                "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
                "skipped": false
              },
              {
                "title": "should pull the 13/1710/3111 tile for the data source",
                "fullTitle": "geotiff geotiff source tests should pull the 13/1710/3111 tile for the data source",
                "timedOut": false,
                "duration": 119,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/geotifftile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
                "isRoot": false,
                "uuid": "ee56d1c7-5937-4b53-b236-e66e275c87cd",
                "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "geotiff geotiff source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "4dc203ec-ed4f-478b-a637-0c3e02dbe27a",
                "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 137
          },
          "ctx": "[Circular ~.allHooks.8.ctx]",
          "_events": {},
          "duration": 0,
          "_error": null
        }
      },
      "_events": {},
      "duration": 0,
      "_error": null
    },
    {
      "title": "\"after all\" hook",
      "async": 0,
      "sync": true,
      "_timeout": 2000,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "geotiff source tests",
        "suites": [],
        "tests": [
          {
            "title": "should process the source",
            "fullTitle": "geotiff geotiff source tests should process the source",
            "timedOut": false,
            "duration": 18,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "geotiff.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>],<br>        [-<span class=\"hljs-number\">104.82331093941556</span>,<span class=\"hljs-number\">39.67084478892132</span>],<br>        [-<span class=\"hljs-number\">104.82337800954186</span>,<span class=\"hljs-number\">39.64449869141027</span>],<br>        [-<span class=\"hljs-number\">104.85255015490993</span>,<span class=\"hljs-number\">39.64453938508538</span>],<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'26913'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "30c6c60d-9d72-477a-8a66-b5942cc230de",
            "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
            "skipped": false
          },
          {
            "title": "should pull the 13/1710/3111 tile for the data source",
            "fullTitle": "geotiff geotiff source tests should pull the 13/1710/3111 tile for the data source",
            "timedOut": false,
            "duration": 119,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/geotifftile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
            "isRoot": false,
            "uuid": "ee56d1c7-5937-4b53-b236-e66e275c87cd",
            "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "geotiff geotiff source tests should get all features of the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "4dc203ec-ed4f-478b-a637-0c3e02dbe27a",
            "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/geotiff_test.js",
        "uuid": "9c91327e-9071-4edb-afb6-a559a1162cf8",
        "fullFile": "/data/git/mapcache-server/test/format/geotiff_test.js",
        "passes": [
          {
            "title": "should process the source",
            "fullTitle": "geotiff geotiff source tests should process the source",
            "timedOut": false,
            "duration": 18,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "geotiff.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>],<br>        [-<span class=\"hljs-number\">104.82331093941556</span>,<span class=\"hljs-number\">39.67084478892132</span>],<br>        [-<span class=\"hljs-number\">104.82337800954186</span>,<span class=\"hljs-number\">39.64449869141027</span>],<br>        [-<span class=\"hljs-number\">104.85255015490993</span>,<span class=\"hljs-number\">39.64453938508538</span>],<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'26913'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "30c6c60d-9d72-477a-8a66-b5942cc230de",
            "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
            "skipped": false
          },
          {
            "title": "should pull the 13/1710/3111 tile for the data source",
            "fullTitle": "geotiff geotiff source tests should pull the 13/1710/3111 tile for the data source",
            "timedOut": false,
            "duration": 119,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/geotifftile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
            "isRoot": false,
            "uuid": "ee56d1c7-5937-4b53-b236-e66e275c87cd",
            "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "geotiff geotiff source tests should get all features of the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "4dc203ec-ed4f-478b-a637-0c3e02dbe27a",
            "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 137
      },
      "ctx": {
        "_runnable": "[Circular ~.allHooks.9]",
        "test": "[Circular ~.allHooks.9]"
      },
      "_events": {},
      "duration": 0,
      "_error": null
    },
    {
      "title": "\"before all\" hook",
      "async": 0,
      "sync": true,
      "_timeout": 2000,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "MrSID source tests",
        "suites": [],
        "tests": [
          {
            "title": "should process the source",
            "fullTitle": "MrSID MrSID source tests should process the source",
            "timedOut": false,
            "duration": 16,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "mrsid.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'newSource'</span>, newSource);<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'4326'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "c492a8a0-a85d-4b39-aa38-6eb9cb681610",
            "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
            "skipped": false
          },
          {
            "title": "should not pull the 13/1710/3111 tile for the data source because no data exists there",
            "fullTitle": "MrSID MrSID source tests should not pull the 13/1710/3111 tile for the data source because no data exists there",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(stream);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "06d98f42-9889-44bb-8363-c6c5399eea12",
            "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
            "skipped": false
          },
          {
            "title": "should pull the 11/572/747 tile for the data source",
            "fullTitle": "MrSID MrSID source tests should pull the 11/572/747 tile for the data source",
            "timedOut": false,
            "duration": 97,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">572</span>, <span class=\"hljs-number\">747</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/mrsidtile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
            "isRoot": false,
            "uuid": "e84830c1-91b2-4692-8523-40edeba544f8",
            "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "MrSID MrSID source tests should get all features of the source",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "mrsid.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "0a0e81ce-2c20-4094-be04-bdab58279573",
            "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
            "skipped": false
          },
          {
            "title": "should fail to process this source",
            "fullTitle": "MrSID MrSID source tests should fail to process this source",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> fail = <span class=\"hljs-keyword\">new</span> MrSID({<br>  source: failDataSource<br>});<br>fail.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.failure.should.be.true();<br>  done();<br>});",
            "isRoot": false,
            "uuid": "2b81dbf7-1a5b-456e-aec7-690f896a8369",
            "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/mrsid_test.js",
        "uuid": "bddda678-433a-40b1-83b5-34bf26f17cb1",
        "fullFile": "/data/git/mapcache-server/test/format/mrsid_test.js",
        "passes": [
          {
            "title": "should process the source",
            "fullTitle": "MrSID MrSID source tests should process the source",
            "timedOut": false,
            "duration": 16,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "mrsid.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'newSource'</span>, newSource);<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'4326'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "c492a8a0-a85d-4b39-aa38-6eb9cb681610",
            "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
            "skipped": false
          },
          {
            "title": "should not pull the 13/1710/3111 tile for the data source because no data exists there",
            "fullTitle": "MrSID MrSID source tests should not pull the 13/1710/3111 tile for the data source because no data exists there",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(stream);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "06d98f42-9889-44bb-8363-c6c5399eea12",
            "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
            "skipped": false
          },
          {
            "title": "should pull the 11/572/747 tile for the data source",
            "fullTitle": "MrSID MrSID source tests should pull the 11/572/747 tile for the data source",
            "timedOut": false,
            "duration": 97,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">572</span>, <span class=\"hljs-number\">747</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/mrsidtile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
            "isRoot": false,
            "uuid": "e84830c1-91b2-4692-8523-40edeba544f8",
            "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "MrSID MrSID source tests should get all features of the source",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "mrsid.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "0a0e81ce-2c20-4094-be04-bdab58279573",
            "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
            "skipped": false
          },
          {
            "title": "should fail to process this source",
            "fullTitle": "MrSID MrSID source tests should fail to process this source",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> fail = <span class=\"hljs-keyword\">new</span> MrSID({<br>  source: failDataSource<br>});<br>fail.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.failure.should.be.true();<br>  done();<br>});",
            "isRoot": false,
            "uuid": "2b81dbf7-1a5b-456e-aec7-690f896a8369",
            "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 5,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 118
      },
      "ctx": {
        "_runnable": {
          "title": "\"after all\" hook",
          "async": 0,
          "sync": true,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "type": "hook",
          "parent": {
            "title": "MrSID source tests",
            "suites": [],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "MrSID MrSID source tests should process the source",
                "timedOut": false,
                "duration": 16,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "mrsid.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'newSource'</span>, newSource);<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'4326'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "c492a8a0-a85d-4b39-aa38-6eb9cb681610",
                "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
                "skipped": false
              },
              {
                "title": "should not pull the 13/1710/3111 tile for the data source because no data exists there",
                "fullTitle": "MrSID MrSID source tests should not pull the 13/1710/3111 tile for the data source because no data exists there",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(stream);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "06d98f42-9889-44bb-8363-c6c5399eea12",
                "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
                "skipped": false
              },
              {
                "title": "should pull the 11/572/747 tile for the data source",
                "fullTitle": "MrSID MrSID source tests should pull the 11/572/747 tile for the data source",
                "timedOut": false,
                "duration": 97,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">572</span>, <span class=\"hljs-number\">747</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/mrsidtile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
                "isRoot": false,
                "uuid": "e84830c1-91b2-4692-8523-40edeba544f8",
                "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "MrSID MrSID source tests should get all features of the source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "mrsid.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "0a0e81ce-2c20-4094-be04-bdab58279573",
                "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
                "skipped": false
              },
              {
                "title": "should fail to process this source",
                "fullTitle": "MrSID MrSID source tests should fail to process this source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> fail = <span class=\"hljs-keyword\">new</span> MrSID({<br>  source: failDataSource<br>});<br>fail.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.failure.should.be.true();<br>  done();<br>});",
                "isRoot": false,
                "uuid": "2b81dbf7-1a5b-456e-aec7-690f896a8369",
                "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/mrsid_test.js",
            "uuid": "bddda678-433a-40b1-83b5-34bf26f17cb1",
            "fullFile": "/data/git/mapcache-server/test/format/mrsid_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "MrSID MrSID source tests should process the source",
                "timedOut": false,
                "duration": 16,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "mrsid.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'newSource'</span>, newSource);<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'4326'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "c492a8a0-a85d-4b39-aa38-6eb9cb681610",
                "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
                "skipped": false
              },
              {
                "title": "should not pull the 13/1710/3111 tile for the data source because no data exists there",
                "fullTitle": "MrSID MrSID source tests should not pull the 13/1710/3111 tile for the data source because no data exists there",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(stream);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "06d98f42-9889-44bb-8363-c6c5399eea12",
                "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
                "skipped": false
              },
              {
                "title": "should pull the 11/572/747 tile for the data source",
                "fullTitle": "MrSID MrSID source tests should pull the 11/572/747 tile for the data source",
                "timedOut": false,
                "duration": 97,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">572</span>, <span class=\"hljs-number\">747</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/mrsidtile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
                "isRoot": false,
                "uuid": "e84830c1-91b2-4692-8523-40edeba544f8",
                "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "MrSID MrSID source tests should get all features of the source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "mrsid.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "0a0e81ce-2c20-4094-be04-bdab58279573",
                "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
                "skipped": false
              },
              {
                "title": "should fail to process this source",
                "fullTitle": "MrSID MrSID source tests should fail to process this source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> fail = <span class=\"hljs-keyword\">new</span> MrSID({<br>  source: failDataSource<br>});<br>fail.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.failure.should.be.true();<br>  done();<br>});",
                "isRoot": false,
                "uuid": "2b81dbf7-1a5b-456e-aec7-690f896a8369",
                "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 118
          },
          "ctx": "[Circular ~.allHooks.10.ctx]",
          "_events": {},
          "duration": 0,
          "_error": null
        },
        "test": {
          "title": "\"after all\" hook",
          "async": 0,
          "sync": true,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "type": "hook",
          "parent": {
            "title": "MrSID source tests",
            "suites": [],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "MrSID MrSID source tests should process the source",
                "timedOut": false,
                "duration": 16,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "mrsid.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'newSource'</span>, newSource);<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'4326'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "c492a8a0-a85d-4b39-aa38-6eb9cb681610",
                "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
                "skipped": false
              },
              {
                "title": "should not pull the 13/1710/3111 tile for the data source because no data exists there",
                "fullTitle": "MrSID MrSID source tests should not pull the 13/1710/3111 tile for the data source because no data exists there",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(stream);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "06d98f42-9889-44bb-8363-c6c5399eea12",
                "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
                "skipped": false
              },
              {
                "title": "should pull the 11/572/747 tile for the data source",
                "fullTitle": "MrSID MrSID source tests should pull the 11/572/747 tile for the data source",
                "timedOut": false,
                "duration": 97,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">572</span>, <span class=\"hljs-number\">747</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/mrsidtile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
                "isRoot": false,
                "uuid": "e84830c1-91b2-4692-8523-40edeba544f8",
                "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "MrSID MrSID source tests should get all features of the source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "mrsid.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "0a0e81ce-2c20-4094-be04-bdab58279573",
                "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
                "skipped": false
              },
              {
                "title": "should fail to process this source",
                "fullTitle": "MrSID MrSID source tests should fail to process this source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> fail = <span class=\"hljs-keyword\">new</span> MrSID({<br>  source: failDataSource<br>});<br>fail.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.failure.should.be.true();<br>  done();<br>});",
                "isRoot": false,
                "uuid": "2b81dbf7-1a5b-456e-aec7-690f896a8369",
                "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/mrsid_test.js",
            "uuid": "bddda678-433a-40b1-83b5-34bf26f17cb1",
            "fullFile": "/data/git/mapcache-server/test/format/mrsid_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "MrSID MrSID source tests should process the source",
                "timedOut": false,
                "duration": 16,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "mrsid.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'newSource'</span>, newSource);<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'4326'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "c492a8a0-a85d-4b39-aa38-6eb9cb681610",
                "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
                "skipped": false
              },
              {
                "title": "should not pull the 13/1710/3111 tile for the data source because no data exists there",
                "fullTitle": "MrSID MrSID source tests should not pull the 13/1710/3111 tile for the data source because no data exists there",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(stream);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "06d98f42-9889-44bb-8363-c6c5399eea12",
                "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
                "skipped": false
              },
              {
                "title": "should pull the 11/572/747 tile for the data source",
                "fullTitle": "MrSID MrSID source tests should pull the 11/572/747 tile for the data source",
                "timedOut": false,
                "duration": 97,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">572</span>, <span class=\"hljs-number\">747</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/mrsidtile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
                "isRoot": false,
                "uuid": "e84830c1-91b2-4692-8523-40edeba544f8",
                "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "MrSID MrSID source tests should get all features of the source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "mrsid.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "0a0e81ce-2c20-4094-be04-bdab58279573",
                "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
                "skipped": false
              },
              {
                "title": "should fail to process this source",
                "fullTitle": "MrSID MrSID source tests should fail to process this source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> fail = <span class=\"hljs-keyword\">new</span> MrSID({<br>  source: failDataSource<br>});<br>fail.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.failure.should.be.true();<br>  done();<br>});",
                "isRoot": false,
                "uuid": "2b81dbf7-1a5b-456e-aec7-690f896a8369",
                "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 118
          },
          "ctx": "[Circular ~.allHooks.10.ctx]",
          "_events": {},
          "duration": 0,
          "_error": null
        }
      },
      "_events": {},
      "duration": 0,
      "_error": null
    },
    {
      "title": "\"after all\" hook",
      "async": 0,
      "sync": true,
      "_timeout": 2000,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "MrSID source tests",
        "suites": [],
        "tests": [
          {
            "title": "should process the source",
            "fullTitle": "MrSID MrSID source tests should process the source",
            "timedOut": false,
            "duration": 16,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "mrsid.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'newSource'</span>, newSource);<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'4326'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "c492a8a0-a85d-4b39-aa38-6eb9cb681610",
            "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
            "skipped": false
          },
          {
            "title": "should not pull the 13/1710/3111 tile for the data source because no data exists there",
            "fullTitle": "MrSID MrSID source tests should not pull the 13/1710/3111 tile for the data source because no data exists there",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(stream);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "06d98f42-9889-44bb-8363-c6c5399eea12",
            "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
            "skipped": false
          },
          {
            "title": "should pull the 11/572/747 tile for the data source",
            "fullTitle": "MrSID MrSID source tests should pull the 11/572/747 tile for the data source",
            "timedOut": false,
            "duration": 97,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">572</span>, <span class=\"hljs-number\">747</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/mrsidtile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
            "isRoot": false,
            "uuid": "e84830c1-91b2-4692-8523-40edeba544f8",
            "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "MrSID MrSID source tests should get all features of the source",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "mrsid.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "0a0e81ce-2c20-4094-be04-bdab58279573",
            "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
            "skipped": false
          },
          {
            "title": "should fail to process this source",
            "fullTitle": "MrSID MrSID source tests should fail to process this source",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> fail = <span class=\"hljs-keyword\">new</span> MrSID({<br>  source: failDataSource<br>});<br>fail.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.failure.should.be.true();<br>  done();<br>});",
            "isRoot": false,
            "uuid": "2b81dbf7-1a5b-456e-aec7-690f896a8369",
            "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/mrsid_test.js",
        "uuid": "bddda678-433a-40b1-83b5-34bf26f17cb1",
        "fullFile": "/data/git/mapcache-server/test/format/mrsid_test.js",
        "passes": [
          {
            "title": "should process the source",
            "fullTitle": "MrSID MrSID source tests should process the source",
            "timedOut": false,
            "duration": 16,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "mrsid.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'newSource'</span>, newSource);<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'4326'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "c492a8a0-a85d-4b39-aa38-6eb9cb681610",
            "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
            "skipped": false
          },
          {
            "title": "should not pull the 13/1710/3111 tile for the data source because no data exists there",
            "fullTitle": "MrSID MrSID source tests should not pull the 13/1710/3111 tile for the data source because no data exists there",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(stream);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "06d98f42-9889-44bb-8363-c6c5399eea12",
            "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
            "skipped": false
          },
          {
            "title": "should pull the 11/572/747 tile for the data source",
            "fullTitle": "MrSID MrSID source tests should pull the 11/572/747 tile for the data source",
            "timedOut": false,
            "duration": 97,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">572</span>, <span class=\"hljs-number\">747</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/mrsidtile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
            "isRoot": false,
            "uuid": "e84830c1-91b2-4692-8523-40edeba544f8",
            "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "MrSID MrSID source tests should get all features of the source",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "mrsid.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "0a0e81ce-2c20-4094-be04-bdab58279573",
            "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
            "skipped": false
          },
          {
            "title": "should fail to process this source",
            "fullTitle": "MrSID MrSID source tests should fail to process this source",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> fail = <span class=\"hljs-keyword\">new</span> MrSID({<br>  source: failDataSource<br>});<br>fail.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.failure.should.be.true();<br>  done();<br>});",
            "isRoot": false,
            "uuid": "2b81dbf7-1a5b-456e-aec7-690f896a8369",
            "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 5,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 118
      },
      "ctx": {
        "_runnable": "[Circular ~.allHooks.11]",
        "test": "[Circular ~.allHooks.11]"
      },
      "_events": {},
      "duration": 0,
      "_error": null
    },
    {
      "title": "\"before all\" hook",
      "async": 0,
      "sync": true,
      "_timeout": 2000,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "source tests",
        "suites": [],
        "tests": [
          {
            "title": "should process the source",
            "fullTitle": "xyz source tests should process the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "xyz.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "94f37ef2-60ac-46d3-acbf-0b86880f4146",
            "parentUUID": "627045d6-4c41-44c8-95c8-9c3fb32e17b4",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 tile for the data source",
            "fullTitle": "xyz source tests should pull the 0/0/0 tile for the data source",
            "timedOut": false,
            "duration": 353,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, tileRequest</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  tileRequest.on(<span class=\"hljs-string\">'response'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">response</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>      response.statusCode.should.equal(<span class=\"hljs-number\">200</span>);<br>      <span class=\"hljs-keyword\">var</span> size = response.headers[<span class=\"hljs-string\">'content-length'</span>];<br>      size.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>      response.headers[<span class=\"hljs-string\">'content-type'</span>].should.equal(<span class=\"hljs-string\">'image/png'</span>);<br>      done();<br>    } <span class=\"hljs-keyword\">catch</span> (e) {<br>      done(e);<br>    }<br>  })<br>  .on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile request error'</span>, err);<br>    done(err);<br>  });<br>});",
            "isRoot": false,
            "uuid": "93707689-1e29-490c-8aec-69c13ea8247d",
            "parentUUID": "627045d6-4c41-44c8-95c8-9c3fb32e17b4",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/xyz_test.js",
        "uuid": "627045d6-4c41-44c8-95c8-9c3fb32e17b4",
        "fullFile": "/data/git/mapcache-server/test/format/xyz_test.js",
        "passes": [
          {
            "title": "should process the source",
            "fullTitle": "xyz source tests should process the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "xyz.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "94f37ef2-60ac-46d3-acbf-0b86880f4146",
            "parentUUID": "627045d6-4c41-44c8-95c8-9c3fb32e17b4",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 tile for the data source",
            "fullTitle": "xyz source tests should pull the 0/0/0 tile for the data source",
            "timedOut": false,
            "duration": 353,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, tileRequest</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  tileRequest.on(<span class=\"hljs-string\">'response'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">response</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>      response.statusCode.should.equal(<span class=\"hljs-number\">200</span>);<br>      <span class=\"hljs-keyword\">var</span> size = response.headers[<span class=\"hljs-string\">'content-length'</span>];<br>      size.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>      response.headers[<span class=\"hljs-string\">'content-type'</span>].should.equal(<span class=\"hljs-string\">'image/png'</span>);<br>      done();<br>    } <span class=\"hljs-keyword\">catch</span> (e) {<br>      done(e);<br>    }<br>  })<br>  .on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile request error'</span>, err);<br>    done(err);<br>  });<br>});",
            "isRoot": false,
            "uuid": "93707689-1e29-490c-8aec-69c13ea8247d",
            "parentUUID": "627045d6-4c41-44c8-95c8-9c3fb32e17b4",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 2,
        "totalPasses": 2,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 353
      },
      "ctx": {
        "_runnable": {
          "title": "should pull the 0/0/0 tile for the data source",
          "async": 1,
          "sync": false,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "pending": false,
          "type": "test",
          "file": "/data/git/mapcache-server/test/format/xyz_test.js",
          "parent": {
            "title": "source tests",
            "suites": [],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "xyz source tests should process the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "94f37ef2-60ac-46d3-acbf-0b86880f4146",
                "parentUUID": "627045d6-4c41-44c8-95c8-9c3fb32e17b4",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "xyz source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 353,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, tileRequest</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  tileRequest.on(<span class=\"hljs-string\">'response'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">response</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>      response.statusCode.should.equal(<span class=\"hljs-number\">200</span>);<br>      <span class=\"hljs-keyword\">var</span> size = response.headers[<span class=\"hljs-string\">'content-length'</span>];<br>      size.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>      response.headers[<span class=\"hljs-string\">'content-type'</span>].should.equal(<span class=\"hljs-string\">'image/png'</span>);<br>      done();<br>    } <span class=\"hljs-keyword\">catch</span> (e) {<br>      done(e);<br>    }<br>  })<br>  .on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile request error'</span>, err);<br>    done(err);<br>  });<br>});",
                "isRoot": false,
                "uuid": "93707689-1e29-490c-8aec-69c13ea8247d",
                "parentUUID": "627045d6-4c41-44c8-95c8-9c3fb32e17b4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/xyz_test.js",
            "uuid": "627045d6-4c41-44c8-95c8-9c3fb32e17b4",
            "fullFile": "/data/git/mapcache-server/test/format/xyz_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "xyz source tests should process the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "94f37ef2-60ac-46d3-acbf-0b86880f4146",
                "parentUUID": "627045d6-4c41-44c8-95c8-9c3fb32e17b4",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "xyz source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 353,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, tileRequest</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  tileRequest.on(<span class=\"hljs-string\">'response'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">response</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>      response.statusCode.should.equal(<span class=\"hljs-number\">200</span>);<br>      <span class=\"hljs-keyword\">var</span> size = response.headers[<span class=\"hljs-string\">'content-length'</span>];<br>      size.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>      response.headers[<span class=\"hljs-string\">'content-type'</span>].should.equal(<span class=\"hljs-string\">'image/png'</span>);<br>      done();<br>    } <span class=\"hljs-keyword\">catch</span> (e) {<br>      done(e);<br>    }<br>  })<br>  .on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile request error'</span>, err);<br>    done(err);<br>  });<br>});",
                "isRoot": false,
                "uuid": "93707689-1e29-490c-8aec-69c13ea8247d",
                "parentUUID": "627045d6-4c41-44c8-95c8-9c3fb32e17b4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 353
          },
          "ctx": "[Circular ~.allHooks.12.ctx]",
          "_events": {},
          "duration": 353,
          "state": "passed",
          "speed": "fast"
        },
        "test": {
          "title": "should pull the 0/0/0 tile for the data source",
          "async": 1,
          "sync": false,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "pending": false,
          "type": "test",
          "file": "/data/git/mapcache-server/test/format/xyz_test.js",
          "parent": {
            "title": "source tests",
            "suites": [],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "xyz source tests should process the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "94f37ef2-60ac-46d3-acbf-0b86880f4146",
                "parentUUID": "627045d6-4c41-44c8-95c8-9c3fb32e17b4",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "xyz source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 353,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, tileRequest</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  tileRequest.on(<span class=\"hljs-string\">'response'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">response</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>      response.statusCode.should.equal(<span class=\"hljs-number\">200</span>);<br>      <span class=\"hljs-keyword\">var</span> size = response.headers[<span class=\"hljs-string\">'content-length'</span>];<br>      size.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>      response.headers[<span class=\"hljs-string\">'content-type'</span>].should.equal(<span class=\"hljs-string\">'image/png'</span>);<br>      done();<br>    } <span class=\"hljs-keyword\">catch</span> (e) {<br>      done(e);<br>    }<br>  })<br>  .on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile request error'</span>, err);<br>    done(err);<br>  });<br>});",
                "isRoot": false,
                "uuid": "93707689-1e29-490c-8aec-69c13ea8247d",
                "parentUUID": "627045d6-4c41-44c8-95c8-9c3fb32e17b4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/xyz_test.js",
            "uuid": "627045d6-4c41-44c8-95c8-9c3fb32e17b4",
            "fullFile": "/data/git/mapcache-server/test/format/xyz_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "xyz source tests should process the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "94f37ef2-60ac-46d3-acbf-0b86880f4146",
                "parentUUID": "627045d6-4c41-44c8-95c8-9c3fb32e17b4",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "xyz source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 353,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, tileRequest</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  tileRequest.on(<span class=\"hljs-string\">'response'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">response</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>      response.statusCode.should.equal(<span class=\"hljs-number\">200</span>);<br>      <span class=\"hljs-keyword\">var</span> size = response.headers[<span class=\"hljs-string\">'content-length'</span>];<br>      size.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>      response.headers[<span class=\"hljs-string\">'content-type'</span>].should.equal(<span class=\"hljs-string\">'image/png'</span>);<br>      done();<br>    } <span class=\"hljs-keyword\">catch</span> (e) {<br>      done(e);<br>    }<br>  })<br>  .on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile request error'</span>, err);<br>    done(err);<br>  });<br>});",
                "isRoot": false,
                "uuid": "93707689-1e29-490c-8aec-69c13ea8247d",
                "parentUUID": "627045d6-4c41-44c8-95c8-9c3fb32e17b4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 353
          },
          "ctx": "[Circular ~.allHooks.12.ctx]",
          "_events": {},
          "duration": 353,
          "state": "passed",
          "speed": "fast"
        }
      },
      "_events": {},
      "duration": 0,
      "_error": null
    },
    {
      "title": "\"before all\" hook",
      "async": 0,
      "sync": true,
      "_timeout": 2000,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "cache tests",
        "suites": [],
        "tests": [
          {
            "title": "should pull the 0/0/0 tile for the cache",
            "fullTitle": "xyz cache tests should pull the 0/0/0 tile for the cache",
            "timedOut": false,
            "duration": 510,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "102e787d-5989-431a-9cf2-da6a12c853e4",
            "parentUUID": "7c6eea2f-f790-4a63-8c37-2d00b324ff23",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/xyz_test.js",
        "uuid": "7c6eea2f-f790-4a63-8c37-2d00b324ff23",
        "fullFile": "/data/git/mapcache-server/test/format/xyz_test.js",
        "passes": [
          {
            "title": "should pull the 0/0/0 tile for the cache",
            "fullTitle": "xyz cache tests should pull the 0/0/0 tile for the cache",
            "timedOut": false,
            "duration": 510,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "102e787d-5989-431a-9cf2-da6a12c853e4",
            "parentUUID": "7c6eea2f-f790-4a63-8c37-2d00b324ff23",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 510
      },
      "ctx": {
        "_runnable": {
          "title": "should pull the 0/0/0 tile for the cache",
          "async": 1,
          "sync": false,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "pending": false,
          "type": "test",
          "file": "/data/git/mapcache-server/test/format/xyz_test.js",
          "parent": {
            "title": "cache tests",
            "suites": [],
            "tests": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "xyz cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 510,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "102e787d-5989-431a-9cf2-da6a12c853e4",
                "parentUUID": "7c6eea2f-f790-4a63-8c37-2d00b324ff23",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/xyz_test.js",
            "uuid": "7c6eea2f-f790-4a63-8c37-2d00b324ff23",
            "fullFile": "/data/git/mapcache-server/test/format/xyz_test.js",
            "passes": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "xyz cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 510,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "102e787d-5989-431a-9cf2-da6a12c853e4",
                "parentUUID": "7c6eea2f-f790-4a63-8c37-2d00b324ff23",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 510
          },
          "ctx": "[Circular ~.allHooks.13.ctx]",
          "_events": {},
          "duration": 510,
          "state": "passed",
          "speed": "fast"
        },
        "test": {
          "title": "should pull the 0/0/0 tile for the cache",
          "async": 1,
          "sync": false,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "pending": false,
          "type": "test",
          "file": "/data/git/mapcache-server/test/format/xyz_test.js",
          "parent": {
            "title": "cache tests",
            "suites": [],
            "tests": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "xyz cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 510,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "102e787d-5989-431a-9cf2-da6a12c853e4",
                "parentUUID": "7c6eea2f-f790-4a63-8c37-2d00b324ff23",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/xyz_test.js",
            "uuid": "7c6eea2f-f790-4a63-8c37-2d00b324ff23",
            "fullFile": "/data/git/mapcache-server/test/format/xyz_test.js",
            "passes": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "xyz cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 510,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "102e787d-5989-431a-9cf2-da6a12c853e4",
                "parentUUID": "7c6eea2f-f790-4a63-8c37-2d00b324ff23",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 510
          },
          "ctx": "[Circular ~.allHooks.13.ctx]",
          "_events": {},
          "duration": 510,
          "state": "passed",
          "speed": "fast"
        }
      },
      "_events": {},
      "duration": 0,
      "_error": null
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should construct an generic with a source",
      "fullTitle": "#constructor should construct an generic with a source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> generic = <span class=\"hljs-keyword\">new</span> Generic({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>generic.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
      "isRoot": false,
      "uuid": "c0c184af-682a-4afd-b332-4095c8ddaf01",
      "parentUUID": "4afd830f-54a8-4554-b45d-ca414f762a44",
      "skipped": false
    },
    {
      "title": "should construct an generic with a cache",
      "fullTitle": "#constructor should construct an generic with a cache",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> generic = <span class=\"hljs-keyword\">new</span> Generic({cache: {id: <span class=\"hljs-string\">'6'</span>}});<br>generic.cache.id.should.equal(<span class=\"hljs-string\">'6'</span>);",
      "isRoot": false,
      "uuid": "5e2be9d2-db09-4494-a10f-6aea5980f157",
      "parentUUID": "4afd830f-54a8-4554-b45d-ca414f762a44",
      "skipped": false
    },
    {
      "title": "should process the source",
      "fullTitle": "generic source tests should process the source",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
      "isRoot": false,
      "uuid": "b05d697e-962c-462e-99d1-23760ec45503",
      "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 tile for the data source",
      "fullTitle": "generic source tests should pull the 0/0/0 tile for the data source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
      "isRoot": false,
      "uuid": "f011eee0-874b-4725-ab9a-d474734c146d",
      "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 geojson tile for the data source",
      "fullTitle": "generic source tests should pull the 0/0/0 geojson tile for the data source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
      "isRoot": false,
      "uuid": "2a801189-01dc-4253-8d6b-1aa0d32eda30",
      "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
      "skipped": false
    },
    {
      "title": "should get all features of the source",
      "fullTitle": "generic source tests should get all features of the source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
      "isRoot": false,
      "uuid": "179ac0a1-6300-42f8-954a-81f7594dfd66",
      "parentUUID": "c88526bc-fd18-4084-aed4-4b48090e1e96",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 tile for the cache",
      "fullTitle": "generic cache tests should pull the 0/0/0 tile for the cache",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
      "isRoot": false,
      "uuid": "fe7b1df0-22c3-40b7-a989-e32bdec384e9",
      "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 generic tile for the cache",
      "fullTitle": "generic cache tests should pull the 0/0/0 generic tile for the cache",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
      "isRoot": false,
      "uuid": "c32b522a-92af-409e-ac2f-96e312984336",
      "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
      "skipped": false
    },
    {
      "title": "should generate the cache",
      "fullTitle": "generic cache tests should generate the cache",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
      "isRoot": false,
      "uuid": "bdee92b6-9399-47cb-8f68-9af6606e77d9",
      "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
      "skipped": false
    },
    {
      "title": "should pull features for the cache",
      "fullTitle": "generic cache tests should pull features for the cache",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
      "isRoot": false,
      "uuid": "42f9d005-4de6-448e-9277-abdb8c65ed92",
      "parentUUID": "5f4f2f86-98ea-4b51-9103-4d18620a146f",
      "skipped": false
    },
    {
      "title": "should construct an geojson with a source",
      "fullTitle": "#constructor should construct an geojson with a source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> geojson = <span class=\"hljs-keyword\">new</span> GeoJSON({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>geojson.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
      "isRoot": false,
      "uuid": "b46d401e-f402-43d5-a53b-26ceb8eabfa4",
      "parentUUID": "1c60cb1d-a935-47e1-a09f-7e3373202b54",
      "skipped": false
    },
    {
      "title": "should construct an geojson with a cache",
      "fullTitle": "#constructor should construct an geojson with a cache",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> geojson = <span class=\"hljs-keyword\">new</span> GeoJSON({cache: {id: <span class=\"hljs-string\">'6'</span>}});<br>geojson.cache.id.should.equal(<span class=\"hljs-string\">'6'</span>);",
      "isRoot": false,
      "uuid": "5bb49fe5-d3b1-4259-aec3-8404c789f3a4",
      "parentUUID": "1c60cb1d-a935-47e1-a09f-7e3373202b54",
      "skipped": false
    },
    {
      "title": "should process the source",
      "fullTitle": "geojson source tests should process the source",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  FeatureModel.getAllSourceFeatures(geojson.source.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'features'</span>, features);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
      "isRoot": false,
      "uuid": "80bccce6-9a06-4218-9bfd-654680265b1b",
      "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 tile for the data source",
      "fullTitle": "geojson source tests should pull the 0/0/0 tile for the data source",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
      "isRoot": false,
      "uuid": "0b09a9b6-ca72-4283-9810-3e34f6c5d23d",
      "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 geojson tile for the data source",
      "fullTitle": "geojson source tests should pull the 0/0/0 geojson tile for the data source",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
      "isRoot": false,
      "uuid": "9a92e071-1162-4e3d-8e41-57aca9c4716c",
      "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
      "skipped": false
    },
    {
      "title": "should get all features of the source",
      "fullTitle": "geojson source tests should get all features of the source",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"feature count\"</span>, features);<br>  features.length.should.be.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
      "isRoot": false,
      "uuid": "98064f0e-2eeb-4d33-98ca-8220b2b9071e",
      "parentUUID": "8eec858b-15d7-48d9-8067-2b2f22a7bb99",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 tile for the cache",
      "fullTitle": "geojson cache tests should pull the 0/0/0 tile for the cache",
      "timedOut": false,
      "duration": 13,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
      "isRoot": false,
      "uuid": "54000c5b-9a56-4b8b-926d-f4665346819f",
      "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 geojson tile for the cache",
      "fullTitle": "geojson cache tests should pull the 0/0/0 geojson tile for the cache",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
      "isRoot": false,
      "uuid": "d1998e18-ee11-4655-9296-b83ce0b46c68",
      "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
      "skipped": false
    },
    {
      "title": "should generate the cache",
      "fullTitle": "geojson cache tests should generate the cache",
      "timedOut": false,
      "duration": 19,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
      "isRoot": false,
      "uuid": "fce435e5-049b-4ce0-8e93-1a62ddcb0989",
      "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
      "skipped": false
    },
    {
      "title": "should pull features for the cache",
      "fullTitle": "geojson cache tests should pull features for the cache",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
      "isRoot": false,
      "uuid": "86a77167-3dae-4654-9e0b-698c5f2036d9",
      "parentUUID": "599c1078-a62c-4643-9822-bc3b91c5c6cd",
      "skipped": false
    },
    {
      "title": "should construct an geotiff with a source",
      "fullTitle": "#constructor should construct an geotiff with a source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> geotiff = <span class=\"hljs-keyword\">new</span> GeoTIFF({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>geotiff.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
      "isRoot": false,
      "uuid": "4331eb73-21f1-4de7-b83b-11138b41efaa",
      "parentUUID": "9fd6257c-bc04-4ee4-919a-ce7a9e401226",
      "skipped": false
    },
    {
      "title": "should throw an error since geotiff caches are not supported",
      "fullTitle": "#constructor should throw an error since geotiff caches are not supported",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">try</span> {<br>  <span class=\"hljs-keyword\">new</span> GeoTIFF({cache: {id: <span class=\"hljs-string\">'6'</span>}}).should.throw(<span class=\"hljs-built_in\">Error</span>);<br>} <span class=\"hljs-keyword\">catch</span> (e) {<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'threw error'</span>, e);<br>}",
      "isRoot": false,
      "uuid": "c5d9719c-3d1d-4525-978f-bbd42c76edac",
      "parentUUID": "9fd6257c-bc04-4ee4-919a-ce7a9e401226",
      "skipped": false
    },
    {
      "title": "should process the source",
      "fullTitle": "geotiff source tests should process the source",
      "timedOut": false,
      "duration": 18,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "geotiff.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>],<br>        [-<span class=\"hljs-number\">104.82331093941556</span>,<span class=\"hljs-number\">39.67084478892132</span>],<br>        [-<span class=\"hljs-number\">104.82337800954186</span>,<span class=\"hljs-number\">39.64449869141027</span>],<br>        [-<span class=\"hljs-number\">104.85255015490993</span>,<span class=\"hljs-number\">39.64453938508538</span>],<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'26913'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
      "isRoot": false,
      "uuid": "9f2019e2-7b54-4637-ab7f-beeb18fa93fb",
      "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
      "skipped": false
    },
    {
      "title": "should pull the 13/1710/3111 tile for the data source",
      "fullTitle": "geotiff source tests should pull the 13/1710/3111 tile for the data source",
      "timedOut": false,
      "duration": 119,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/geotifftile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
      "isRoot": false,
      "uuid": "e4693227-803b-478f-83c8-749acb32fb0f",
      "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
      "skipped": false
    },
    {
      "title": "should get all features of the source",
      "fullTitle": "geotiff source tests should get all features of the source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
      "isRoot": false,
      "uuid": "92504c54-e0d2-46b4-9fc4-e442a6eb56ec",
      "parentUUID": "9c91327e-9071-4edb-afb6-a559a1162cf8",
      "skipped": false
    },
    {
      "title": "should construct an MrSID with a source",
      "fullTitle": "#constructor should construct an MrSID with a source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> mrsid = <span class=\"hljs-keyword\">new</span> MrSID({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>mrsid.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
      "isRoot": false,
      "uuid": "baf0de82-c402-429a-a82c-9b4a60e636e6",
      "parentUUID": "f6a9515e-a7d0-40df-a638-331dd8a66711",
      "skipped": false
    },
    {
      "title": "should throw an error since MrSID caches are not supported",
      "fullTitle": "#constructor should throw an error since MrSID caches are not supported",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">try</span> {<br>  <span class=\"hljs-keyword\">new</span> MrSID({cache: {id: <span class=\"hljs-string\">'6'</span>}}).should.throw(<span class=\"hljs-built_in\">Error</span>);<br>} <span class=\"hljs-keyword\">catch</span> (e) {<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'threw error'</span>, e);<br>}",
      "isRoot": false,
      "uuid": "3d4ecd00-59db-4b83-a18e-2df21403b90b",
      "parentUUID": "f6a9515e-a7d0-40df-a638-331dd8a66711",
      "skipped": false
    },
    {
      "title": "should process the source",
      "fullTitle": "MrSID source tests should process the source",
      "timedOut": false,
      "duration": 16,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "mrsid.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'newSource'</span>, newSource);<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'4326'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
      "isRoot": false,
      "uuid": "0aab11c5-73b1-4e3d-bf99-e14c619d2f93",
      "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
      "skipped": false
    },
    {
      "title": "should not pull the 13/1710/3111 tile for the data source because no data exists there",
      "fullTitle": "MrSID source tests should not pull the 13/1710/3111 tile for the data source because no data exists there",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(stream);<br>  done();<br>});",
      "isRoot": false,
      "uuid": "115bcba2-b1f2-42a7-a2be-58b1555069a6",
      "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
      "skipped": false
    },
    {
      "title": "should pull the 11/572/747 tile for the data source",
      "fullTitle": "MrSID source tests should pull the 11/572/747 tile for the data source",
      "timedOut": false,
      "duration": 97,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">572</span>, <span class=\"hljs-number\">747</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/mrsidtile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
      "isRoot": false,
      "uuid": "a47aa261-999e-476e-900c-8d0daacefe0b",
      "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
      "skipped": false
    },
    {
      "title": "should get all features of the source",
      "fullTitle": "MrSID source tests should get all features of the source",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "mrsid.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
      "isRoot": false,
      "uuid": "5ca8a9c2-4261-4568-a5b5-6ae86bb3f2e8",
      "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
      "skipped": false
    },
    {
      "title": "should fail to process this source",
      "fullTitle": "MrSID source tests should fail to process this source",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> fail = <span class=\"hljs-keyword\">new</span> MrSID({<br>  source: failDataSource<br>});<br>fail.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.failure.should.be.true();<br>  done();<br>});",
      "isRoot": false,
      "uuid": "ab237c39-0a49-444f-a948-f593435d63b7",
      "parentUUID": "bddda678-433a-40b1-83b5-34bf26f17cb1",
      "skipped": false
    },
    {
      "title": "should construct an Xyz with a source",
      "fullTitle": "#constructor should construct an Xyz with a source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> xyz = <span class=\"hljs-keyword\">new</span> XYZ({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>xyz.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
      "isRoot": false,
      "uuid": "ed083aec-af6e-46f0-8b11-a37cc093ea0f",
      "parentUUID": "5b53220c-c1ff-43e3-88f4-761374de4820",
      "skipped": false
    },
    {
      "title": "should construct an Xyz with a cache",
      "fullTitle": "#constructor should construct an Xyz with a cache",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> xyz = <span class=\"hljs-keyword\">new</span> XYZ({cache: {id: <span class=\"hljs-string\">'6'</span>}});<br>xyz.cache.id.should.equal(<span class=\"hljs-string\">'6'</span>);",
      "isRoot": false,
      "uuid": "cbef4ded-9ca0-4dc4-a91b-6ed508ba4d4a",
      "parentUUID": "5b53220c-c1ff-43e3-88f4-761374de4820",
      "skipped": false
    },
    {
      "title": "should process the source",
      "fullTitle": "source tests should process the source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "xyz.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  done();<br>});",
      "isRoot": false,
      "uuid": "5db72b00-5b48-41a7-ad1d-f70ce654c42b",
      "parentUUID": "627045d6-4c41-44c8-95c8-9c3fb32e17b4",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 tile for the data source",
      "fullTitle": "source tests should pull the 0/0/0 tile for the data source",
      "timedOut": false,
      "duration": 353,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, tileRequest</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  tileRequest.on(<span class=\"hljs-string\">'response'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">response</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>      response.statusCode.should.equal(<span class=\"hljs-number\">200</span>);<br>      <span class=\"hljs-keyword\">var</span> size = response.headers[<span class=\"hljs-string\">'content-length'</span>];<br>      size.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>      response.headers[<span class=\"hljs-string\">'content-type'</span>].should.equal(<span class=\"hljs-string\">'image/png'</span>);<br>      done();<br>    } <span class=\"hljs-keyword\">catch</span> (e) {<br>      done(e);<br>    }<br>  })<br>  .on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile request error'</span>, err);<br>    done(err);<br>  });<br>});",
      "isRoot": false,
      "uuid": "11f78c8b-f411-4586-b131-9f30e67b9533",
      "parentUUID": "627045d6-4c41-44c8-95c8-9c3fb32e17b4",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 tile for the cache",
      "fullTitle": "cache tests should pull the 0/0/0 tile for the cache",
      "timedOut": false,
      "duration": 510,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
      "isRoot": false,
      "uuid": "a7c0626c-210e-49a0-8e8b-235426069247",
      "parentUUID": "7c6eea2f-f790-4a63-8c37-2d00b324ff23",
      "skipped": false
    }
  ],
  "allFailures": []
}