{
  "reportTitle": "mapcache-server",
  "stats": {
    "suites": 25,
    "tests": 48,
    "passes": 48,
    "pending": 0,
    "failures": 0,
    "start": "2015-11-18T18:40:42.692Z",
    "end": "2015-11-18T18:40:44.466Z",
    "duration": 1774,
    "testsRegistered": 48,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "generic",
        "suites": [
          {
            "title": "#constructor",
            "suites": [],
            "tests": [
              {
                "title": "should construct an generic with a source",
                "fullTitle": "generic #constructor should construct an generic with a source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> generic = <span class=\"hljs-keyword\">new</span> Generic({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>generic.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
                "isRoot": false,
                "uuid": "fe7b6fb2-fa21-4958-ae9f-f819c35c4177",
                "parentUUID": "ab96b6b1-17dc-4694-96ff-65dd72a3f651",
                "skipped": false
              },
              {
                "title": "should construct an generic with a cache",
                "fullTitle": "generic #constructor should construct an generic with a cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> generic = <span class=\"hljs-keyword\">new</span> Generic({cache: {id: <span class=\"hljs-string\">'6'</span>}});<br>generic.cache.id.should.equal(<span class=\"hljs-string\">'6'</span>);",
                "isRoot": false,
                "uuid": "b183d769-b40b-484c-aad0-2b6095cfb2b4",
                "parentUUID": "ab96b6b1-17dc-4694-96ff-65dd72a3f651",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/generic_test.js",
            "uuid": "ab96b6b1-17dc-4694-96ff-65dd72a3f651",
            "fullFile": "/data/git/mapcache-server/test/format/generic_test.js",
            "passes": [
              {
                "title": "should construct an generic with a source",
                "fullTitle": "generic #constructor should construct an generic with a source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> generic = <span class=\"hljs-keyword\">new</span> Generic({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>generic.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
                "isRoot": false,
                "uuid": "fe7b6fb2-fa21-4958-ae9f-f819c35c4177",
                "parentUUID": "ab96b6b1-17dc-4694-96ff-65dd72a3f651",
                "skipped": false
              },
              {
                "title": "should construct an generic with a cache",
                "fullTitle": "generic #constructor should construct an generic with a cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> generic = <span class=\"hljs-keyword\">new</span> Generic({cache: {id: <span class=\"hljs-string\">'6'</span>}});<br>generic.cache.id.should.equal(<span class=\"hljs-string\">'6'</span>);",
                "isRoot": false,
                "uuid": "b183d769-b40b-484c-aad0-2b6095cfb2b4",
                "parentUUID": "ab96b6b1-17dc-4694-96ff-65dd72a3f651",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "generic source tests",
            "suites": [
              {
                "title": "generic cache tests",
                "suites": [],
                "tests": [
                  {
                    "title": "should pull the 0/0/0 tile for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "0af5ff54-f458-41f0-9a3c-be65304abe56",
                    "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                    "skipped": false
                  },
                  {
                    "title": "should pull the 0/0/0 generic tile for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "c25b6429-dc36-434a-85fc-0c41d82bfa7e",
                    "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                    "skipped": false
                  },
                  {
                    "title": "should generate the cache",
                    "fullTitle": "generic source tests generic cache tests should generate the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "0ddbb2e6-0a0c-49f6-8642-4a165e1eab4e",
                    "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                    "skipped": false
                  },
                  {
                    "title": "should pull features for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull features for the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "34426102-f9e7-43c8-826b-00cff2da6762",
                    "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/format/generic_test.js",
                "uuid": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "fullFile": "/data/git/mapcache-server/test/format/generic_test.js",
                "passes": [
                  {
                    "title": "should pull the 0/0/0 tile for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "0af5ff54-f458-41f0-9a3c-be65304abe56",
                    "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                    "skipped": false
                  },
                  {
                    "title": "should pull the 0/0/0 generic tile for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "c25b6429-dc36-434a-85fc-0c41d82bfa7e",
                    "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                    "skipped": false
                  },
                  {
                    "title": "should generate the cache",
                    "fullTitle": "generic source tests generic cache tests should generate the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "0ddbb2e6-0a0c-49f6-8642-4a165e1eab4e",
                    "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                    "skipped": false
                  },
                  {
                    "title": "should pull features for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull features for the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "34426102-f9e7-43c8-826b-00cff2da6762",
                    "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0
              }
            ],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "generic generic source tests should process the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "793a5808-5ae3-4c5e-96dd-c07b2e0541be",
                "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "generic generic source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "0586e3ef-37b7-496d-901c-9878f6b1c240",
                "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the data source",
                "fullTitle": "generic generic source tests should pull the 0/0/0 geojson tile for the data source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "edc77682-b387-405d-be6c-b1715db370f1",
                "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "generic generic source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "ee797650-51c3-4c59-9569-d64eec50391b",
                "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/generic_test.js",
            "uuid": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
            "fullFile": "/data/git/mapcache-server/test/format/generic_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "generic generic source tests should process the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "793a5808-5ae3-4c5e-96dd-c07b2e0541be",
                "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "generic generic source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "0586e3ef-37b7-496d-901c-9878f6b1c240",
                "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the data source",
                "fullTitle": "generic generic source tests should pull the 0/0/0 geojson tile for the data source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "edc77682-b387-405d-be6c-b1715db370f1",
                "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "generic generic source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "ee797650-51c3-4c59-9569-d64eec50391b",
                "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": true,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/generic_test.js",
        "uuid": "f0ea9b79-41e1-467b-9db3-19fc242d9228",
        "fullFile": "/data/git/mapcache-server/test/format/generic_test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "geojson",
        "suites": [
          {
            "title": "#constructor",
            "suites": [],
            "tests": [
              {
                "title": "should construct an geojson with a source",
                "fullTitle": "geojson #constructor should construct an geojson with a source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> geojson = <span class=\"hljs-keyword\">new</span> GeoJSON({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>geojson.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
                "isRoot": false,
                "uuid": "0b9f7d1f-9341-42e2-a9f6-0fd2d1c01026",
                "parentUUID": "20722038-c433-4559-ad0c-28cf1b305d32",
                "skipped": false
              },
              {
                "title": "should construct an geojson with a cache",
                "fullTitle": "geojson #constructor should construct an geojson with a cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> geojson = <span class=\"hljs-keyword\">new</span> GeoJSON({cache: {id: <span class=\"hljs-string\">'6'</span>}});<br>geojson.cache.id.should.equal(<span class=\"hljs-string\">'6'</span>);",
                "isRoot": false,
                "uuid": "2cd69320-2a38-485e-acf8-9911ec13f010",
                "parentUUID": "20722038-c433-4559-ad0c-28cf1b305d32",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/geojson_test.js",
            "uuid": "20722038-c433-4559-ad0c-28cf1b305d32",
            "fullFile": "/data/git/mapcache-server/test/format/geojson_test.js",
            "passes": [
              {
                "title": "should construct an geojson with a source",
                "fullTitle": "geojson #constructor should construct an geojson with a source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> geojson = <span class=\"hljs-keyword\">new</span> GeoJSON({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>geojson.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
                "isRoot": false,
                "uuid": "0b9f7d1f-9341-42e2-a9f6-0fd2d1c01026",
                "parentUUID": "20722038-c433-4559-ad0c-28cf1b305d32",
                "skipped": false
              },
              {
                "title": "should construct an geojson with a cache",
                "fullTitle": "geojson #constructor should construct an geojson with a cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> geojson = <span class=\"hljs-keyword\">new</span> GeoJSON({cache: {id: <span class=\"hljs-string\">'6'</span>}});<br>geojson.cache.id.should.equal(<span class=\"hljs-string\">'6'</span>);",
                "isRoot": false,
                "uuid": "2cd69320-2a38-485e-acf8-9911ec13f010",
                "parentUUID": "20722038-c433-4559-ad0c-28cf1b305d32",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "geojson source tests",
            "suites": [
              {
                "title": "geojson cache tests",
                "suites": [],
                "tests": [
                  {
                    "title": "should pull the 0/0/0 tile for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
                    "timedOut": false,
                    "duration": 14,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                    "isRoot": false,
                    "uuid": "98e7008a-6a9d-41fc-b911-22b3555a4585",
                    "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                    "skipped": false
                  },
                  {
                    "title": "should pull the 0/0/0 geojson tile for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
                    "timedOut": false,
                    "duration": 4,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
                    "isRoot": false,
                    "uuid": "fc51a915-38dd-412b-8f29-ea2fbee2f860",
                    "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                    "skipped": false
                  },
                  {
                    "title": "should generate the cache",
                    "fullTitle": "geojson source tests geojson cache tests should generate the cache",
                    "timedOut": false,
                    "duration": 12,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "5dd8db9c-5fc9-4746-9835-cc22506f5e8f",
                    "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                    "skipped": false
                  },
                  {
                    "title": "should pull features for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "9307423b-1f1b-480f-8fe7-552e78934d47",
                    "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/format/geojson_test.js",
                "uuid": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "fullFile": "/data/git/mapcache-server/test/format/geojson_test.js",
                "passes": [
                  {
                    "title": "should pull the 0/0/0 tile for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
                    "timedOut": false,
                    "duration": 14,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                    "isRoot": false,
                    "uuid": "98e7008a-6a9d-41fc-b911-22b3555a4585",
                    "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                    "skipped": false
                  },
                  {
                    "title": "should pull the 0/0/0 geojson tile for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
                    "timedOut": false,
                    "duration": 4,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
                    "isRoot": false,
                    "uuid": "fc51a915-38dd-412b-8f29-ea2fbee2f860",
                    "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                    "skipped": false
                  },
                  {
                    "title": "should generate the cache",
                    "fullTitle": "geojson source tests geojson cache tests should generate the cache",
                    "timedOut": false,
                    "duration": 12,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "5dd8db9c-5fc9-4746-9835-cc22506f5e8f",
                    "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                    "skipped": false
                  },
                  {
                    "title": "should pull features for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "9307423b-1f1b-480f-8fe7-552e78934d47",
                    "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 31
              }
            ],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "geojson geojson source tests should process the source",
                "timedOut": false,
                "duration": 12,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  FeatureModel.getAllSourceFeatures(geojson.source.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'features'</span>, features);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "f60c7327-dd8d-40a5-a88b-d7c1c14f8b20",
                "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "geojson geojson source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "c6e53708-96b1-4d78-95cb-036e457030ca",
                "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the data source",
                "fullTitle": "geojson geojson source tests should pull the 0/0/0 geojson tile for the data source",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "140a3401-5528-43d1-9d90-6deaa2944d57",
                "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "geojson geojson source tests should get all features of the source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"feature count\"</span>, features);<br>  features.length.should.be.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "3be7417d-8359-4957-a965-b654aea50a58",
                "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/geojson_test.js",
            "uuid": "b031367e-b9ec-487b-a069-5c90e11f10fa",
            "fullFile": "/data/git/mapcache-server/test/format/geojson_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "geojson geojson source tests should process the source",
                "timedOut": false,
                "duration": 12,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  FeatureModel.getAllSourceFeatures(geojson.source.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'features'</span>, features);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "f60c7327-dd8d-40a5-a88b-d7c1c14f8b20",
                "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "geojson geojson source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "c6e53708-96b1-4d78-95cb-036e457030ca",
                "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the data source",
                "fullTitle": "geojson geojson source tests should pull the 0/0/0 geojson tile for the data source",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "140a3401-5528-43d1-9d90-6deaa2944d57",
                "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "geojson geojson source tests should get all features of the source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"feature count\"</span>, features);<br>  features.length.should.be.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "3be7417d-8359-4957-a965-b654aea50a58",
                "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": true,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 24
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/geojson_test.js",
        "uuid": "6b8ef956-5281-4a25-9358-d1f313c876cd",
        "fullFile": "/data/git/mapcache-server/test/format/geojson_test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "geotiff",
        "suites": [
          {
            "title": "#constructor",
            "suites": [],
            "tests": [
              {
                "title": "should construct an geotiff with a source",
                "fullTitle": "geotiff #constructor should construct an geotiff with a source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> geotiff = <span class=\"hljs-keyword\">new</span> GeoTIFF({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>geotiff.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
                "isRoot": false,
                "uuid": "2fe28909-7a64-49c0-88e1-d781c1cf6780",
                "parentUUID": "bd32730a-02ea-4ef2-aa11-268038b09715",
                "skipped": false
              },
              {
                "title": "should throw an error since geotiff caches are not supported",
                "fullTitle": "geotiff #constructor should throw an error since geotiff caches are not supported",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">try</span> {<br>  <span class=\"hljs-keyword\">new</span> GeoTIFF({cache: {id: <span class=\"hljs-string\">'6'</span>}}).should.throw(<span class=\"hljs-built_in\">Error</span>);<br>} <span class=\"hljs-keyword\">catch</span> (e) {<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'threw error'</span>, e);<br>}",
                "isRoot": false,
                "uuid": "beed9366-6457-4134-b025-03a41b1850ed",
                "parentUUID": "bd32730a-02ea-4ef2-aa11-268038b09715",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/geotiff_test.js",
            "uuid": "bd32730a-02ea-4ef2-aa11-268038b09715",
            "fullFile": "/data/git/mapcache-server/test/format/geotiff_test.js",
            "passes": [
              {
                "title": "should construct an geotiff with a source",
                "fullTitle": "geotiff #constructor should construct an geotiff with a source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> geotiff = <span class=\"hljs-keyword\">new</span> GeoTIFF({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>geotiff.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
                "isRoot": false,
                "uuid": "2fe28909-7a64-49c0-88e1-d781c1cf6780",
                "parentUUID": "bd32730a-02ea-4ef2-aa11-268038b09715",
                "skipped": false
              },
              {
                "title": "should throw an error since geotiff caches are not supported",
                "fullTitle": "geotiff #constructor should throw an error since geotiff caches are not supported",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">try</span> {<br>  <span class=\"hljs-keyword\">new</span> GeoTIFF({cache: {id: <span class=\"hljs-string\">'6'</span>}}).should.throw(<span class=\"hljs-built_in\">Error</span>);<br>} <span class=\"hljs-keyword\">catch</span> (e) {<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'threw error'</span>, e);<br>}",
                "isRoot": false,
                "uuid": "beed9366-6457-4134-b025-03a41b1850ed",
                "parentUUID": "bd32730a-02ea-4ef2-aa11-268038b09715",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "geotiff source tests",
            "suites": [],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "geotiff geotiff source tests should process the source",
                "timedOut": false,
                "duration": 19,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geotiff.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>],<br>        [-<span class=\"hljs-number\">104.82331093941556</span>,<span class=\"hljs-number\">39.67084478892132</span>],<br>        [-<span class=\"hljs-number\">104.82337800954186</span>,<span class=\"hljs-number\">39.64449869141027</span>],<br>        [-<span class=\"hljs-number\">104.85255015490993</span>,<span class=\"hljs-number\">39.64453938508538</span>],<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'26913'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "41c72ead-acf9-433b-a051-b14afd309c5b",
                "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
                "skipped": false
              },
              {
                "title": "should pull the 13/1710/3111 tile for the data source",
                "fullTitle": "geotiff geotiff source tests should pull the 13/1710/3111 tile for the data source",
                "timedOut": false,
                "duration": 118,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/geotifftile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
                "isRoot": false,
                "uuid": "d2fcb58b-f86b-437a-a9d9-c041f9333119",
                "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "geotiff geotiff source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "a487b06c-3257-4c85-a07c-2edb85e210f5",
                "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/geotiff_test.js",
            "uuid": "519a0472-75e8-4afc-aa24-26d8af5175ba",
            "fullFile": "/data/git/mapcache-server/test/format/geotiff_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "geotiff geotiff source tests should process the source",
                "timedOut": false,
                "duration": 19,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geotiff.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>],<br>        [-<span class=\"hljs-number\">104.82331093941556</span>,<span class=\"hljs-number\">39.67084478892132</span>],<br>        [-<span class=\"hljs-number\">104.82337800954186</span>,<span class=\"hljs-number\">39.64449869141027</span>],<br>        [-<span class=\"hljs-number\">104.85255015490993</span>,<span class=\"hljs-number\">39.64453938508538</span>],<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'26913'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "41c72ead-acf9-433b-a051-b14afd309c5b",
                "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
                "skipped": false
              },
              {
                "title": "should pull the 13/1710/3111 tile for the data source",
                "fullTitle": "geotiff geotiff source tests should pull the 13/1710/3111 tile for the data source",
                "timedOut": false,
                "duration": 118,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/geotifftile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
                "isRoot": false,
                "uuid": "d2fcb58b-f86b-437a-a9d9-c041f9333119",
                "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "geotiff geotiff source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "a487b06c-3257-4c85-a07c-2edb85e210f5",
                "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 137
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/geotiff_test.js",
        "uuid": "76a600cb-b307-44cd-a87c-7f83e0e4b3c8",
        "fullFile": "/data/git/mapcache-server/test/format/geotiff_test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "MrSID",
        "suites": [
          {
            "title": "#constructor",
            "suites": [],
            "tests": [
              {
                "title": "should construct an MrSID with a source",
                "fullTitle": "MrSID #constructor should construct an MrSID with a source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> mrsid = <span class=\"hljs-keyword\">new</span> MrSID({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>mrsid.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
                "isRoot": false,
                "uuid": "4f66358b-4df5-42eb-92c6-fac8bfa75ce8",
                "parentUUID": "659d67b6-81ff-4b5c-a24f-520bbeb2039d",
                "skipped": false
              },
              {
                "title": "should throw an error since MrSID caches are not supported",
                "fullTitle": "MrSID #constructor should throw an error since MrSID caches are not supported",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">try</span> {<br>  <span class=\"hljs-keyword\">new</span> MrSID({cache: {id: <span class=\"hljs-string\">'6'</span>}}).should.throw(<span class=\"hljs-built_in\">Error</span>);<br>} <span class=\"hljs-keyword\">catch</span> (e) {<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'threw error'</span>, e);<br>}",
                "isRoot": false,
                "uuid": "fa8301fb-cd0f-4d72-9121-0344384c5c5d",
                "parentUUID": "659d67b6-81ff-4b5c-a24f-520bbeb2039d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/mrsid_test.js",
            "uuid": "659d67b6-81ff-4b5c-a24f-520bbeb2039d",
            "fullFile": "/data/git/mapcache-server/test/format/mrsid_test.js",
            "passes": [
              {
                "title": "should construct an MrSID with a source",
                "fullTitle": "MrSID #constructor should construct an MrSID with a source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> mrsid = <span class=\"hljs-keyword\">new</span> MrSID({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>mrsid.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
                "isRoot": false,
                "uuid": "4f66358b-4df5-42eb-92c6-fac8bfa75ce8",
                "parentUUID": "659d67b6-81ff-4b5c-a24f-520bbeb2039d",
                "skipped": false
              },
              {
                "title": "should throw an error since MrSID caches are not supported",
                "fullTitle": "MrSID #constructor should throw an error since MrSID caches are not supported",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">try</span> {<br>  <span class=\"hljs-keyword\">new</span> MrSID({cache: {id: <span class=\"hljs-string\">'6'</span>}}).should.throw(<span class=\"hljs-built_in\">Error</span>);<br>} <span class=\"hljs-keyword\">catch</span> (e) {<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'threw error'</span>, e);<br>}",
                "isRoot": false,
                "uuid": "fa8301fb-cd0f-4d72-9121-0344384c5c5d",
                "parentUUID": "659d67b6-81ff-4b5c-a24f-520bbeb2039d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "MrSID source tests",
            "suites": [],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "MrSID MrSID source tests should process the source",
                "timedOut": false,
                "duration": 16,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "mrsid.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'newSource'</span>, newSource);<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'4326'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "654069c7-62d3-4e99-b0d0-3075633f5d24",
                "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
                "skipped": false
              },
              {
                "title": "should not pull the 13/1710/3111 tile for the data source because no data exists there",
                "fullTitle": "MrSID MrSID source tests should not pull the 13/1710/3111 tile for the data source because no data exists there",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(stream);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "50cd07c5-4c26-494b-9d37-c40495a9b623",
                "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
                "skipped": false
              },
              {
                "title": "should pull the 11/572/747 tile for the data source",
                "fullTitle": "MrSID MrSID source tests should pull the 11/572/747 tile for the data source",
                "timedOut": false,
                "duration": 98,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">572</span>, <span class=\"hljs-number\">747</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/mrsidtile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
                "isRoot": false,
                "uuid": "043df52e-b091-4319-a832-e83ccc77a13f",
                "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "MrSID MrSID source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "mrsid.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "cb81614c-7425-49b1-b95d-a5a1418f8387",
                "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
                "skipped": false
              },
              {
                "title": "should fail to process this source",
                "fullTitle": "MrSID MrSID source tests should fail to process this source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> fail = <span class=\"hljs-keyword\">new</span> MrSID({<br>  source: failDataSource<br>});<br>fail.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.failure.should.be.true();<br>  done();<br>});",
                "isRoot": false,
                "uuid": "aaef1db5-acc3-4fd2-b312-2d65f30e250c",
                "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/mrsid_test.js",
            "uuid": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
            "fullFile": "/data/git/mapcache-server/test/format/mrsid_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "MrSID MrSID source tests should process the source",
                "timedOut": false,
                "duration": 16,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "mrsid.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'newSource'</span>, newSource);<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'4326'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "654069c7-62d3-4e99-b0d0-3075633f5d24",
                "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
                "skipped": false
              },
              {
                "title": "should not pull the 13/1710/3111 tile for the data source because no data exists there",
                "fullTitle": "MrSID MrSID source tests should not pull the 13/1710/3111 tile for the data source because no data exists there",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(stream);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "50cd07c5-4c26-494b-9d37-c40495a9b623",
                "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
                "skipped": false
              },
              {
                "title": "should pull the 11/572/747 tile for the data source",
                "fullTitle": "MrSID MrSID source tests should pull the 11/572/747 tile for the data source",
                "timedOut": false,
                "duration": 98,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">572</span>, <span class=\"hljs-number\">747</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/mrsidtile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
                "isRoot": false,
                "uuid": "043df52e-b091-4319-a832-e83ccc77a13f",
                "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "MrSID MrSID source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "mrsid.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "cb81614c-7425-49b1-b95d-a5a1418f8387",
                "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
                "skipped": false
              },
              {
                "title": "should fail to process this source",
                "fullTitle": "MrSID MrSID source tests should fail to process this source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> fail = <span class=\"hljs-keyword\">new</span> MrSID({<br>  source: failDataSource<br>});<br>fail.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.failure.should.be.true();<br>  done();<br>});",
                "isRoot": false,
                "uuid": "aaef1db5-acc3-4fd2-b312-2d65f30e250c",
                "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 116
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/mrsid_test.js",
        "uuid": "503d6619-97e6-4d4f-bd68-e9c6f73e4cf4",
        "fullFile": "/data/git/mapcache-server/test/format/mrsid_test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "tms",
        "suites": [
          {
            "title": "#constructor",
            "suites": [],
            "tests": [
              {
                "title": "should construct an Tms with a source",
                "fullTitle": "tms #constructor should construct an Tms with a source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> tms = <span class=\"hljs-keyword\">new</span> TMS({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>tms.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
                "isRoot": false,
                "uuid": "e31d17bd-1b11-4c1c-95a1-5745334b8d71",
                "parentUUID": "5eabfa4c-704b-4934-adc9-c64d7e56e727",
                "skipped": false
              },
              {
                "title": "should construct an Tms with a cache",
                "fullTitle": "tms #constructor should construct an Tms with a cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> tms = <span class=\"hljs-keyword\">new</span> TMS({cache: {id: <span class=\"hljs-string\">'6'</span>}});<br>tms.cache.id.should.equal(<span class=\"hljs-string\">'6'</span>);",
                "isRoot": false,
                "uuid": "8890f3bc-402a-4182-ae1d-246b12edeb8c",
                "parentUUID": "5eabfa4c-704b-4934-adc9-c64d7e56e727",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/tms_test.js",
            "uuid": "5eabfa4c-704b-4934-adc9-c64d7e56e727",
            "fullFile": "/data/git/mapcache-server/test/format/tms_test.js",
            "passes": [
              {
                "title": "should construct an Tms with a source",
                "fullTitle": "tms #constructor should construct an Tms with a source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> tms = <span class=\"hljs-keyword\">new</span> TMS({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>tms.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
                "isRoot": false,
                "uuid": "e31d17bd-1b11-4c1c-95a1-5745334b8d71",
                "parentUUID": "5eabfa4c-704b-4934-adc9-c64d7e56e727",
                "skipped": false
              },
              {
                "title": "should construct an Tms with a cache",
                "fullTitle": "tms #constructor should construct an Tms with a cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> tms = <span class=\"hljs-keyword\">new</span> TMS({cache: {id: <span class=\"hljs-string\">'6'</span>}});<br>tms.cache.id.should.equal(<span class=\"hljs-string\">'6'</span>);",
                "isRoot": false,
                "uuid": "8890f3bc-402a-4182-ae1d-246b12edeb8c",
                "parentUUID": "5eabfa4c-704b-4934-adc9-c64d7e56e727",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "source tests",
            "suites": [],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "tms source tests should process the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "tms.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "1018f75d-cc2b-426d-bdbd-a71f07e6250a",
                "parentUUID": "2f56658e-517d-49a5-bdea-2aacc18cd5da",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "tms source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 105,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "tms.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, tileRequest</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  tileRequest.on(<span class=\"hljs-string\">'response'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">response</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>      response.statusCode.should.equal(<span class=\"hljs-number\">200</span>);<br>      <span class=\"hljs-keyword\">var</span> size = response.headers[<span class=\"hljs-string\">'content-length'</span>];<br>      size.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>      response.headers[<span class=\"hljs-string\">'content-type'</span>].should.equal(<span class=\"hljs-string\">'image/png'</span>);<br>      done();<br>    } <span class=\"hljs-keyword\">catch</span> (e) {<br>      done(e);<br>    }<br>  })<br>  .on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile request error'</span>, err);<br>    done(err);<br>  });<br>});",
                "isRoot": false,
                "uuid": "b0f5e114-e642-410c-88ff-0b42fc897d96",
                "parentUUID": "2f56658e-517d-49a5-bdea-2aacc18cd5da",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/tms_test.js",
            "uuid": "2f56658e-517d-49a5-bdea-2aacc18cd5da",
            "fullFile": "/data/git/mapcache-server/test/format/tms_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "tms source tests should process the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "tms.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "1018f75d-cc2b-426d-bdbd-a71f07e6250a",
                "parentUUID": "2f56658e-517d-49a5-bdea-2aacc18cd5da",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "tms source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 105,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "tms.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, tileRequest</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  tileRequest.on(<span class=\"hljs-string\">'response'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">response</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>      response.statusCode.should.equal(<span class=\"hljs-number\">200</span>);<br>      <span class=\"hljs-keyword\">var</span> size = response.headers[<span class=\"hljs-string\">'content-length'</span>];<br>      size.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>      response.headers[<span class=\"hljs-string\">'content-type'</span>].should.equal(<span class=\"hljs-string\">'image/png'</span>);<br>      done();<br>    } <span class=\"hljs-keyword\">catch</span> (e) {<br>      done(e);<br>    }<br>  })<br>  .on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile request error'</span>, err);<br>    done(err);<br>  });<br>});",
                "isRoot": false,
                "uuid": "b0f5e114-e642-410c-88ff-0b42fc897d96",
                "parentUUID": "2f56658e-517d-49a5-bdea-2aacc18cd5da",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 105
          },
          {
            "title": "cache tests",
            "suites": [],
            "tests": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "tms cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 232,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "tms.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "b0b624b1-300c-4e4d-ba30-bbf8f4ab2694",
                "parentUUID": "3dc88bca-3ece-43c7-8a3e-73b829c156e6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/tms_test.js",
            "uuid": "3dc88bca-3ece-43c7-8a3e-73b829c156e6",
            "fullFile": "/data/git/mapcache-server/test/format/tms_test.js",
            "passes": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "tms cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 232,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "tms.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "b0b624b1-300c-4e4d-ba30-bbf8f4ab2694",
                "parentUUID": "3dc88bca-3ece-43c7-8a3e-73b829c156e6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 232
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/tms_test.js",
        "uuid": "0a83ec8c-df05-4e3d-8604-c46d4c2e9277",
        "fullFile": "/data/git/mapcache-server/test/format/tms_test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "WMS",
        "suites": [
          {
            "title": "#constructor",
            "suites": [],
            "tests": [
              {
                "title": "should construct an WMS with a source",
                "fullTitle": "WMS #constructor should construct an WMS with a source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> wms = <span class=\"hljs-keyword\">new</span> WMS({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>wms.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
                "isRoot": false,
                "uuid": "6a7d9a09-67d4-4a58-a6be-6842f54d67bb",
                "parentUUID": "ff73c858-5b3b-4acd-878b-b9aab92f2cec",
                "skipped": false
              },
              {
                "title": "should construct throw and exception since we cannot make a WMS cache",
                "fullTitle": "WMS #constructor should construct throw and exception since we cannot make a WMS cache",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">try</span> {<br>  <span class=\"hljs-keyword\">new</span> WMS({cache: {id: <span class=\"hljs-string\">'6'</span>}}).should.throw(<span class=\"hljs-built_in\">Error</span>);<br>} <span class=\"hljs-keyword\">catch</span> (e) {<br>  <span class=\"hljs-built_in\">console</span>.log(e);<br>}",
                "isRoot": false,
                "uuid": "5302c8e8-a813-4dac-8313-7b2f9e517998",
                "parentUUID": "ff73c858-5b3b-4acd-878b-b9aab92f2cec",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/wms_test.js",
            "uuid": "ff73c858-5b3b-4acd-878b-b9aab92f2cec",
            "fullFile": "/data/git/mapcache-server/test/format/wms_test.js",
            "passes": [
              {
                "title": "should construct an WMS with a source",
                "fullTitle": "WMS #constructor should construct an WMS with a source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> wms = <span class=\"hljs-keyword\">new</span> WMS({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>wms.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
                "isRoot": false,
                "uuid": "6a7d9a09-67d4-4a58-a6be-6842f54d67bb",
                "parentUUID": "ff73c858-5b3b-4acd-878b-b9aab92f2cec",
                "skipped": false
              },
              {
                "title": "should construct throw and exception since we cannot make a WMS cache",
                "fullTitle": "WMS #constructor should construct throw and exception since we cannot make a WMS cache",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">try</span> {<br>  <span class=\"hljs-keyword\">new</span> WMS({cache: {id: <span class=\"hljs-string\">'6'</span>}}).should.throw(<span class=\"hljs-built_in\">Error</span>);<br>} <span class=\"hljs-keyword\">catch</span> (e) {<br>  <span class=\"hljs-built_in\">console</span>.log(e);<br>}",
                "isRoot": false,
                "uuid": "5302c8e8-a813-4dac-8313-7b2f9e517998",
                "parentUUID": "ff73c858-5b3b-4acd-878b-b9aab92f2cec",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "wms source tests",
            "suites": [],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "WMS wms source tests should process the source",
                "timedOut": false,
                "duration": 549,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "wms.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-comment\">// console.log('after the source has been processed', JSON.stringify(newSource, null, 2));</span><br>  should.exist(newSource.wmsGetCapabilities);<br>  <span class=\"hljs-comment\">// console.log('layer', JSON.stringify(newSource.wmsGetCapabilities.Capability.Layer, null, 2));</span><br>  wms.setSourceLayer(newSource.wmsGetCapabilities.Capability.Layer.Layer[<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, source</span>) </span>{<br>    map.dataSources.push(source);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "7db58231-2554-4926-8753-f6330ae84de6",
                "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "WMS wms source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 199,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "wms.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    done();<br>    <span class=\"hljs-comment\">// var imageDiff = require('image-diff');</span><br>    <span class=\"hljs-comment\">// imageDiff({</span><br>    <span class=\"hljs-comment\">//   actualImage: tmpImage,</span><br>    <span class=\"hljs-comment\">//   expectedImage: __dirname + '/geotifftile.png',</span><br>    <span class=\"hljs-comment\">//   diffImage: '/tmp/difference.png',</span><br>    <span class=\"hljs-comment\">// }, function (err, imagesAreSame) {</span><br>    <span class=\"hljs-comment\">//   should.not.exist(err);</span><br>    <span class=\"hljs-comment\">//   imagesAreSame.should.be.true();</span><br>    <span class=\"hljs-comment\">//   done();</span><br>    <span class=\"hljs-comment\">// });</span><br>  });<br>});",
                "isRoot": false,
                "uuid": "4e90eec7-02a3-4e4b-b255-49046bdac8f0",
                "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the data source",
                "fullTitle": "WMS wms source tests should pull the 0/0/0 geojson tile for the data source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>wms.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "d047dbfb-883c-4889-b7b8-b46b5dfc42c2",
                "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "WMS wms source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>wms.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "fbe685e5-e6da-4d5e-9cb5-a032d5c30b2e",
                "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/wms_test.js",
            "uuid": "ee8a901d-36b2-4d82-9d78-e61918c30693",
            "fullFile": "/data/git/mapcache-server/test/format/wms_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "WMS wms source tests should process the source",
                "timedOut": false,
                "duration": 549,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "wms.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-comment\">// console.log('after the source has been processed', JSON.stringify(newSource, null, 2));</span><br>  should.exist(newSource.wmsGetCapabilities);<br>  <span class=\"hljs-comment\">// console.log('layer', JSON.stringify(newSource.wmsGetCapabilities.Capability.Layer, null, 2));</span><br>  wms.setSourceLayer(newSource.wmsGetCapabilities.Capability.Layer.Layer[<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, source</span>) </span>{<br>    map.dataSources.push(source);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "7db58231-2554-4926-8753-f6330ae84de6",
                "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "WMS wms source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 199,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "wms.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    done();<br>    <span class=\"hljs-comment\">// var imageDiff = require('image-diff');</span><br>    <span class=\"hljs-comment\">// imageDiff({</span><br>    <span class=\"hljs-comment\">//   actualImage: tmpImage,</span><br>    <span class=\"hljs-comment\">//   expectedImage: __dirname + '/geotifftile.png',</span><br>    <span class=\"hljs-comment\">//   diffImage: '/tmp/difference.png',</span><br>    <span class=\"hljs-comment\">// }, function (err, imagesAreSame) {</span><br>    <span class=\"hljs-comment\">//   should.not.exist(err);</span><br>    <span class=\"hljs-comment\">//   imagesAreSame.should.be.true();</span><br>    <span class=\"hljs-comment\">//   done();</span><br>    <span class=\"hljs-comment\">// });</span><br>  });<br>});",
                "isRoot": false,
                "uuid": "4e90eec7-02a3-4e4b-b255-49046bdac8f0",
                "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the data source",
                "fullTitle": "WMS wms source tests should pull the 0/0/0 geojson tile for the data source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>wms.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "d047dbfb-883c-4889-b7b8-b46b5dfc42c2",
                "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "WMS wms source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>wms.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "fbe685e5-e6da-4d5e-9cb5-a032d5c30b2e",
                "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 749
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/wms_test.js",
        "uuid": "db0e755f-1349-40cd-98fa-efa5d7a9919e",
        "fullFile": "/data/git/mapcache-server/test/format/wms_test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "xyz",
        "suites": [
          {
            "title": "#constructor",
            "suites": [],
            "tests": [
              {
                "title": "should construct an Xyz with a source",
                "fullTitle": "xyz #constructor should construct an Xyz with a source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> xyz = <span class=\"hljs-keyword\">new</span> XYZ({source: {id: <span class=\"hljs-string\">'5'</span>}, outputDirectory:<span class=\"hljs-string\">'/tmp'</span>});<br>xyz.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
                "isRoot": false,
                "uuid": "e15bef64-f939-49c8-8bb6-a251879a24cb",
                "parentUUID": "c6ad9854-ae51-44c3-9da9-42bed660eb71",
                "skipped": false
              },
              {
                "title": "should construct an Xyz with a cache",
                "fullTitle": "xyz #constructor should construct an Xyz with a cache",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> xyz = <span class=\"hljs-keyword\">new</span> XYZ({cache: {id: <span class=\"hljs-string\">'6'</span>}, outputDirectory:<span class=\"hljs-string\">'/tmp'</span>});<br>xyz.cache.id.should.equal(<span class=\"hljs-string\">'6'</span>);",
                "isRoot": false,
                "uuid": "12a6c089-c99d-4e88-84ab-6be2a908f2e5",
                "parentUUID": "c6ad9854-ae51-44c3-9da9-42bed660eb71",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/xyz_test.js",
            "uuid": "c6ad9854-ae51-44c3-9da9-42bed660eb71",
            "fullFile": "/data/git/mapcache-server/test/format/xyz_test.js",
            "passes": [
              {
                "title": "should construct an Xyz with a source",
                "fullTitle": "xyz #constructor should construct an Xyz with a source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> xyz = <span class=\"hljs-keyword\">new</span> XYZ({source: {id: <span class=\"hljs-string\">'5'</span>}, outputDirectory:<span class=\"hljs-string\">'/tmp'</span>});<br>xyz.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
                "isRoot": false,
                "uuid": "e15bef64-f939-49c8-8bb6-a251879a24cb",
                "parentUUID": "c6ad9854-ae51-44c3-9da9-42bed660eb71",
                "skipped": false
              },
              {
                "title": "should construct an Xyz with a cache",
                "fullTitle": "xyz #constructor should construct an Xyz with a cache",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> xyz = <span class=\"hljs-keyword\">new</span> XYZ({cache: {id: <span class=\"hljs-string\">'6'</span>}, outputDirectory:<span class=\"hljs-string\">'/tmp'</span>});<br>xyz.cache.id.should.equal(<span class=\"hljs-string\">'6'</span>);",
                "isRoot": false,
                "uuid": "12a6c089-c99d-4e88-84ab-6be2a908f2e5",
                "parentUUID": "c6ad9854-ae51-44c3-9da9-42bed660eb71",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "source tests",
            "suites": [],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "xyz source tests should process the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "ab504760-5b5f-457a-bcee-957519980332",
                "parentUUID": "66cb5a5e-ea2e-453f-ad0d-5cc44f3a6d2c",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "xyz source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 103,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, tileRequest</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  tileRequest.on(<span class=\"hljs-string\">'response'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">response</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>      response.statusCode.should.equal(<span class=\"hljs-number\">200</span>);<br>      <span class=\"hljs-keyword\">var</span> size = response.headers[<span class=\"hljs-string\">'content-length'</span>];<br>      size.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>      response.headers[<span class=\"hljs-string\">'content-type'</span>].should.equal(<span class=\"hljs-string\">'image/png'</span>);<br>      done();<br>    } <span class=\"hljs-keyword\">catch</span> (e) {<br>      done(e);<br>    }<br>  })<br>  .on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile request error'</span>, err);<br>    done(err);<br>  });<br>});",
                "isRoot": false,
                "uuid": "e4b11415-3ed6-4384-83c8-e0441112033f",
                "parentUUID": "66cb5a5e-ea2e-453f-ad0d-5cc44f3a6d2c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/xyz_test.js",
            "uuid": "66cb5a5e-ea2e-453f-ad0d-5cc44f3a6d2c",
            "fullFile": "/data/git/mapcache-server/test/format/xyz_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "xyz source tests should process the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "ab504760-5b5f-457a-bcee-957519980332",
                "parentUUID": "66cb5a5e-ea2e-453f-ad0d-5cc44f3a6d2c",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "xyz source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 103,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, tileRequest</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  tileRequest.on(<span class=\"hljs-string\">'response'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">response</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>      response.statusCode.should.equal(<span class=\"hljs-number\">200</span>);<br>      <span class=\"hljs-keyword\">var</span> size = response.headers[<span class=\"hljs-string\">'content-length'</span>];<br>      size.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>      response.headers[<span class=\"hljs-string\">'content-type'</span>].should.equal(<span class=\"hljs-string\">'image/png'</span>);<br>      done();<br>    } <span class=\"hljs-keyword\">catch</span> (e) {<br>      done(e);<br>    }<br>  })<br>  .on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile request error'</span>, err);<br>    done(err);<br>  });<br>});",
                "isRoot": false,
                "uuid": "e4b11415-3ed6-4384-83c8-e0441112033f",
                "parentUUID": "66cb5a5e-ea2e-453f-ad0d-5cc44f3a6d2c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 103
          },
          {
            "title": "cache tests",
            "suites": [],
            "tests": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "xyz cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 241,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "82823631-74f6-47e2-93d3-ec81afdab172",
                "parentUUID": "361407dd-8d20-4a60-9d60-be3f513630f7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/xyz_test.js",
            "uuid": "361407dd-8d20-4a60-9d60-be3f513630f7",
            "fullFile": "/data/git/mapcache-server/test/format/xyz_test.js",
            "passes": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "xyz cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 241,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "82823631-74f6-47e2-93d3-ec81afdab172",
                "parentUUID": "361407dd-8d20-4a60-9d60-be3f513630f7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 241
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/xyz_test.js",
        "uuid": "fbb04402-f554-4e4d-bb6b-cb12b89e752e",
        "fullFile": "/data/git/mapcache-server/test/format/xyz_test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "840f8a13-c0e9-4e42-ae5b-9ca7a087fe8f",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should construct an generic with a source",
      "fullTitle": "#constructor should construct an generic with a source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> generic = <span class=\"hljs-keyword\">new</span> Generic({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>generic.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
      "isRoot": false,
      "uuid": "526cc33a-fd14-4a0b-bd79-462e4939d39b",
      "parentUUID": "ab96b6b1-17dc-4694-96ff-65dd72a3f651",
      "skipped": false
    },
    {
      "title": "should construct an generic with a cache",
      "fullTitle": "#constructor should construct an generic with a cache",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> generic = <span class=\"hljs-keyword\">new</span> Generic({cache: {id: <span class=\"hljs-string\">'6'</span>}});<br>generic.cache.id.should.equal(<span class=\"hljs-string\">'6'</span>);",
      "isRoot": false,
      "uuid": "cb11299f-d81a-45d1-bd7b-d1d06664243d",
      "parentUUID": "ab96b6b1-17dc-4694-96ff-65dd72a3f651",
      "skipped": false
    },
    {
      "title": "should process the source",
      "fullTitle": "generic source tests should process the source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
      "isRoot": false,
      "uuid": "73f8e61d-6ac8-49e4-9784-b98a5ace74c6",
      "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 tile for the data source",
      "fullTitle": "generic source tests should pull the 0/0/0 tile for the data source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
      "isRoot": false,
      "uuid": "70251769-b633-4dfc-9e3f-0d8a4662f142",
      "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 geojson tile for the data source",
      "fullTitle": "generic source tests should pull the 0/0/0 geojson tile for the data source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
      "isRoot": false,
      "uuid": "15b02bca-c631-4fa4-b8f9-1311e0585138",
      "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
      "skipped": false
    },
    {
      "title": "should get all features of the source",
      "fullTitle": "generic source tests should get all features of the source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
      "isRoot": false,
      "uuid": "2a9987c4-4771-44f1-96a8-6108c4347751",
      "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 tile for the cache",
      "fullTitle": "generic cache tests should pull the 0/0/0 tile for the cache",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
      "isRoot": false,
      "uuid": "24773def-2641-4253-88b0-0bc7d764dcf8",
      "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 generic tile for the cache",
      "fullTitle": "generic cache tests should pull the 0/0/0 generic tile for the cache",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
      "isRoot": false,
      "uuid": "41b71a01-21a4-4231-ac7f-aab09f5a211f",
      "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
      "skipped": false
    },
    {
      "title": "should generate the cache",
      "fullTitle": "generic cache tests should generate the cache",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
      "isRoot": false,
      "uuid": "95cd7ae2-d6f7-4e43-bda9-77b2b645d86b",
      "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
      "skipped": false
    },
    {
      "title": "should pull features for the cache",
      "fullTitle": "generic cache tests should pull features for the cache",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
      "isRoot": false,
      "uuid": "e2ff02f5-7cdb-4eb2-adb9-d83b98c769b5",
      "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
      "skipped": false
    },
    {
      "title": "should construct an geojson with a source",
      "fullTitle": "#constructor should construct an geojson with a source",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> geojson = <span class=\"hljs-keyword\">new</span> GeoJSON({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>geojson.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
      "isRoot": false,
      "uuid": "92c8770b-07fb-4cb2-b80f-059fe6ce0a25",
      "parentUUID": "20722038-c433-4559-ad0c-28cf1b305d32",
      "skipped": false
    },
    {
      "title": "should construct an geojson with a cache",
      "fullTitle": "#constructor should construct an geojson with a cache",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> geojson = <span class=\"hljs-keyword\">new</span> GeoJSON({cache: {id: <span class=\"hljs-string\">'6'</span>}});<br>geojson.cache.id.should.equal(<span class=\"hljs-string\">'6'</span>);",
      "isRoot": false,
      "uuid": "f5c9cbb0-085f-4d92-b203-e975f075b89b",
      "parentUUID": "20722038-c433-4559-ad0c-28cf1b305d32",
      "skipped": false
    },
    {
      "title": "should process the source",
      "fullTitle": "geojson source tests should process the source",
      "timedOut": false,
      "duration": 12,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  FeatureModel.getAllSourceFeatures(geojson.source.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'features'</span>, features);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
      "isRoot": false,
      "uuid": "6485a4a0-6464-450c-a8ab-9ee97201eef8",
      "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 tile for the data source",
      "fullTitle": "geojson source tests should pull the 0/0/0 tile for the data source",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
      "isRoot": false,
      "uuid": "8b17bc44-b869-4a6f-90bb-f84305e8631b",
      "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 geojson tile for the data source",
      "fullTitle": "geojson source tests should pull the 0/0/0 geojson tile for the data source",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
      "isRoot": false,
      "uuid": "eed3db0b-c92a-4673-99f5-fed1d6797236",
      "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
      "skipped": false
    },
    {
      "title": "should get all features of the source",
      "fullTitle": "geojson source tests should get all features of the source",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"feature count\"</span>, features);<br>  features.length.should.be.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
      "isRoot": false,
      "uuid": "5392eab1-5dac-4169-86cf-695200f3a81b",
      "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 tile for the cache",
      "fullTitle": "geojson cache tests should pull the 0/0/0 tile for the cache",
      "timedOut": false,
      "duration": 14,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
      "isRoot": false,
      "uuid": "0ea1c547-d27d-497f-bf84-a3696c7c89df",
      "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 geojson tile for the cache",
      "fullTitle": "geojson cache tests should pull the 0/0/0 geojson tile for the cache",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
      "isRoot": false,
      "uuid": "7ddd5f1a-ef1f-4276-a0a9-e5007f13a3ad",
      "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
      "skipped": false
    },
    {
      "title": "should generate the cache",
      "fullTitle": "geojson cache tests should generate the cache",
      "timedOut": false,
      "duration": 12,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
      "isRoot": false,
      "uuid": "938c8979-6245-44ef-87c3-cff5bbbc821d",
      "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
      "skipped": false
    },
    {
      "title": "should pull features for the cache",
      "fullTitle": "geojson cache tests should pull features for the cache",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
      "isRoot": false,
      "uuid": "7db31d01-6121-476c-b7ea-d7f1402ff261",
      "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
      "skipped": false
    },
    {
      "title": "should construct an geotiff with a source",
      "fullTitle": "#constructor should construct an geotiff with a source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> geotiff = <span class=\"hljs-keyword\">new</span> GeoTIFF({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>geotiff.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
      "isRoot": false,
      "uuid": "d76a51a2-8aca-457d-81df-70bc499bece3",
      "parentUUID": "bd32730a-02ea-4ef2-aa11-268038b09715",
      "skipped": false
    },
    {
      "title": "should throw an error since geotiff caches are not supported",
      "fullTitle": "#constructor should throw an error since geotiff caches are not supported",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">try</span> {<br>  <span class=\"hljs-keyword\">new</span> GeoTIFF({cache: {id: <span class=\"hljs-string\">'6'</span>}}).should.throw(<span class=\"hljs-built_in\">Error</span>);<br>} <span class=\"hljs-keyword\">catch</span> (e) {<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'threw error'</span>, e);<br>}",
      "isRoot": false,
      "uuid": "26f1c322-8cb6-4677-a1d9-cf069b94acb3",
      "parentUUID": "bd32730a-02ea-4ef2-aa11-268038b09715",
      "skipped": false
    },
    {
      "title": "should process the source",
      "fullTitle": "geotiff source tests should process the source",
      "timedOut": false,
      "duration": 19,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "geotiff.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>],<br>        [-<span class=\"hljs-number\">104.82331093941556</span>,<span class=\"hljs-number\">39.67084478892132</span>],<br>        [-<span class=\"hljs-number\">104.82337800954186</span>,<span class=\"hljs-number\">39.64449869141027</span>],<br>        [-<span class=\"hljs-number\">104.85255015490993</span>,<span class=\"hljs-number\">39.64453938508538</span>],<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'26913'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
      "isRoot": false,
      "uuid": "2187ad8f-597d-4db2-912c-2a43e537621a",
      "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
      "skipped": false
    },
    {
      "title": "should pull the 13/1710/3111 tile for the data source",
      "fullTitle": "geotiff source tests should pull the 13/1710/3111 tile for the data source",
      "timedOut": false,
      "duration": 118,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/geotifftile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
      "isRoot": false,
      "uuid": "b683e6c5-efd6-4534-a30f-db042484e531",
      "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
      "skipped": false
    },
    {
      "title": "should get all features of the source",
      "fullTitle": "geotiff source tests should get all features of the source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
      "isRoot": false,
      "uuid": "3f9d2f6e-bb4f-42cb-8132-0382d1684e1b",
      "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
      "skipped": false
    },
    {
      "title": "should construct an MrSID with a source",
      "fullTitle": "#constructor should construct an MrSID with a source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> mrsid = <span class=\"hljs-keyword\">new</span> MrSID({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>mrsid.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
      "isRoot": false,
      "uuid": "03d829bb-ef10-4097-ba59-f663349bff85",
      "parentUUID": "659d67b6-81ff-4b5c-a24f-520bbeb2039d",
      "skipped": false
    },
    {
      "title": "should throw an error since MrSID caches are not supported",
      "fullTitle": "#constructor should throw an error since MrSID caches are not supported",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">try</span> {<br>  <span class=\"hljs-keyword\">new</span> MrSID({cache: {id: <span class=\"hljs-string\">'6'</span>}}).should.throw(<span class=\"hljs-built_in\">Error</span>);<br>} <span class=\"hljs-keyword\">catch</span> (e) {<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'threw error'</span>, e);<br>}",
      "isRoot": false,
      "uuid": "de03e3f1-e2b6-49e3-bc01-617c235d2981",
      "parentUUID": "659d67b6-81ff-4b5c-a24f-520bbeb2039d",
      "skipped": false
    },
    {
      "title": "should process the source",
      "fullTitle": "MrSID source tests should process the source",
      "timedOut": false,
      "duration": 16,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "mrsid.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'newSource'</span>, newSource);<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'4326'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
      "isRoot": false,
      "uuid": "4300f46b-072c-43b1-8a93-da93bd3f1bd2",
      "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
      "skipped": false
    },
    {
      "title": "should not pull the 13/1710/3111 tile for the data source because no data exists there",
      "fullTitle": "MrSID source tests should not pull the 13/1710/3111 tile for the data source because no data exists there",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(stream);<br>  done();<br>});",
      "isRoot": false,
      "uuid": "8d3bab49-ebe1-49a4-bfb9-aeb237f419ad",
      "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
      "skipped": false
    },
    {
      "title": "should pull the 11/572/747 tile for the data source",
      "fullTitle": "MrSID source tests should pull the 11/572/747 tile for the data source",
      "timedOut": false,
      "duration": 98,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">572</span>, <span class=\"hljs-number\">747</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/mrsidtile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
      "isRoot": false,
      "uuid": "c5abe158-ac0d-4f32-b6f9-4ea6d557f10c",
      "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
      "skipped": false
    },
    {
      "title": "should get all features of the source",
      "fullTitle": "MrSID source tests should get all features of the source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "mrsid.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
      "isRoot": false,
      "uuid": "9d9d4f72-1c3c-46c8-bc20-f9891294ac17",
      "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
      "skipped": false
    },
    {
      "title": "should fail to process this source",
      "fullTitle": "MrSID source tests should fail to process this source",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> fail = <span class=\"hljs-keyword\">new</span> MrSID({<br>  source: failDataSource<br>});<br>fail.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.failure.should.be.true();<br>  done();<br>});",
      "isRoot": false,
      "uuid": "544e56fc-65c4-431c-a84c-f4ef04c2f250",
      "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
      "skipped": false
    },
    {
      "title": "should construct an Tms with a source",
      "fullTitle": "#constructor should construct an Tms with a source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> tms = <span class=\"hljs-keyword\">new</span> TMS({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>tms.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
      "isRoot": false,
      "uuid": "1ea73df4-a493-466c-a8db-1d1c79711ad3",
      "parentUUID": "5eabfa4c-704b-4934-adc9-c64d7e56e727",
      "skipped": false
    },
    {
      "title": "should construct an Tms with a cache",
      "fullTitle": "#constructor should construct an Tms with a cache",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> tms = <span class=\"hljs-keyword\">new</span> TMS({cache: {id: <span class=\"hljs-string\">'6'</span>}});<br>tms.cache.id.should.equal(<span class=\"hljs-string\">'6'</span>);",
      "isRoot": false,
      "uuid": "48b52d03-9bc0-472a-af14-b87b607423e8",
      "parentUUID": "5eabfa4c-704b-4934-adc9-c64d7e56e727",
      "skipped": false
    },
    {
      "title": "should process the source",
      "fullTitle": "source tests should process the source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "tms.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  done();<br>});",
      "isRoot": false,
      "uuid": "52ac5310-2833-42c4-98fb-e0800f197563",
      "parentUUID": "2f56658e-517d-49a5-bdea-2aacc18cd5da",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 tile for the data source",
      "fullTitle": "source tests should pull the 0/0/0 tile for the data source",
      "timedOut": false,
      "duration": 105,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "tms.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, tileRequest</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  tileRequest.on(<span class=\"hljs-string\">'response'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">response</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>      response.statusCode.should.equal(<span class=\"hljs-number\">200</span>);<br>      <span class=\"hljs-keyword\">var</span> size = response.headers[<span class=\"hljs-string\">'content-length'</span>];<br>      size.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>      response.headers[<span class=\"hljs-string\">'content-type'</span>].should.equal(<span class=\"hljs-string\">'image/png'</span>);<br>      done();<br>    } <span class=\"hljs-keyword\">catch</span> (e) {<br>      done(e);<br>    }<br>  })<br>  .on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile request error'</span>, err);<br>    done(err);<br>  });<br>});",
      "isRoot": false,
      "uuid": "59a96872-8391-4a7c-930d-fee8a165fcc3",
      "parentUUID": "2f56658e-517d-49a5-bdea-2aacc18cd5da",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 tile for the cache",
      "fullTitle": "cache tests should pull the 0/0/0 tile for the cache",
      "timedOut": false,
      "duration": 232,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "tms.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
      "isRoot": false,
      "uuid": "334fa0fd-0c85-4530-8a8d-52c6c48cc701",
      "parentUUID": "3dc88bca-3ece-43c7-8a3e-73b829c156e6",
      "skipped": false
    },
    {
      "title": "should construct an WMS with a source",
      "fullTitle": "#constructor should construct an WMS with a source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> wms = <span class=\"hljs-keyword\">new</span> WMS({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>wms.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
      "isRoot": false,
      "uuid": "4eff2122-37ac-44c7-a74c-8a0c46137068",
      "parentUUID": "ff73c858-5b3b-4acd-878b-b9aab92f2cec",
      "skipped": false
    },
    {
      "title": "should construct throw and exception since we cannot make a WMS cache",
      "fullTitle": "#constructor should construct throw and exception since we cannot make a WMS cache",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">try</span> {<br>  <span class=\"hljs-keyword\">new</span> WMS({cache: {id: <span class=\"hljs-string\">'6'</span>}}).should.throw(<span class=\"hljs-built_in\">Error</span>);<br>} <span class=\"hljs-keyword\">catch</span> (e) {<br>  <span class=\"hljs-built_in\">console</span>.log(e);<br>}",
      "isRoot": false,
      "uuid": "fa5b5465-b18b-4537-9a87-8ccca566d1e2",
      "parentUUID": "ff73c858-5b3b-4acd-878b-b9aab92f2cec",
      "skipped": false
    },
    {
      "title": "should process the source",
      "fullTitle": "wms source tests should process the source",
      "timedOut": false,
      "duration": 549,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "wms.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-comment\">// console.log('after the source has been processed', JSON.stringify(newSource, null, 2));</span><br>  should.exist(newSource.wmsGetCapabilities);<br>  <span class=\"hljs-comment\">// console.log('layer', JSON.stringify(newSource.wmsGetCapabilities.Capability.Layer, null, 2));</span><br>  wms.setSourceLayer(newSource.wmsGetCapabilities.Capability.Layer.Layer[<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, source</span>) </span>{<br>    map.dataSources.push(source);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
      "isRoot": false,
      "uuid": "5cef3a47-0481-483b-ad9e-50a9896305d7",
      "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 tile for the data source",
      "fullTitle": "wms source tests should pull the 0/0/0 tile for the data source",
      "timedOut": false,
      "duration": 199,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "wms.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    done();<br>    <span class=\"hljs-comment\">// var imageDiff = require('image-diff');</span><br>    <span class=\"hljs-comment\">// imageDiff({</span><br>    <span class=\"hljs-comment\">//   actualImage: tmpImage,</span><br>    <span class=\"hljs-comment\">//   expectedImage: __dirname + '/geotifftile.png',</span><br>    <span class=\"hljs-comment\">//   diffImage: '/tmp/difference.png',</span><br>    <span class=\"hljs-comment\">// }, function (err, imagesAreSame) {</span><br>    <span class=\"hljs-comment\">//   should.not.exist(err);</span><br>    <span class=\"hljs-comment\">//   imagesAreSame.should.be.true();</span><br>    <span class=\"hljs-comment\">//   done();</span><br>    <span class=\"hljs-comment\">// });</span><br>  });<br>});",
      "isRoot": false,
      "uuid": "89fe407e-30e3-4887-9de1-f276f47a125b",
      "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 geojson tile for the data source",
      "fullTitle": "wms source tests should pull the 0/0/0 geojson tile for the data source",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>wms.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
      "isRoot": false,
      "uuid": "9c7422e2-a518-42e2-89e5-ff8490a24d7d",
      "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
      "skipped": false
    },
    {
      "title": "should get all features of the source",
      "fullTitle": "wms source tests should get all features of the source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>wms.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
      "isRoot": false,
      "uuid": "3e3a5f02-b7a1-4ee9-aeec-feea8a508f4e",
      "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
      "skipped": false
    },
    {
      "title": "should construct an Xyz with a source",
      "fullTitle": "#constructor should construct an Xyz with a source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> xyz = <span class=\"hljs-keyword\">new</span> XYZ({source: {id: <span class=\"hljs-string\">'5'</span>}, outputDirectory:<span class=\"hljs-string\">'/tmp'</span>});<br>xyz.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
      "isRoot": false,
      "uuid": "ff509244-fb56-4bbe-bc31-21775c790568",
      "parentUUID": "c6ad9854-ae51-44c3-9da9-42bed660eb71",
      "skipped": false
    },
    {
      "title": "should construct an Xyz with a cache",
      "fullTitle": "#constructor should construct an Xyz with a cache",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> xyz = <span class=\"hljs-keyword\">new</span> XYZ({cache: {id: <span class=\"hljs-string\">'6'</span>}, outputDirectory:<span class=\"hljs-string\">'/tmp'</span>});<br>xyz.cache.id.should.equal(<span class=\"hljs-string\">'6'</span>);",
      "isRoot": false,
      "uuid": "8253b4ca-4bd8-4f8c-a71b-f094c504d11a",
      "parentUUID": "c6ad9854-ae51-44c3-9da9-42bed660eb71",
      "skipped": false
    },
    {
      "title": "should process the source",
      "fullTitle": "source tests should process the source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "xyz.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  done();<br>});",
      "isRoot": false,
      "uuid": "b870c615-a0b2-472a-ae20-24bdc52b6984",
      "parentUUID": "66cb5a5e-ea2e-453f-ad0d-5cc44f3a6d2c",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 tile for the data source",
      "fullTitle": "source tests should pull the 0/0/0 tile for the data source",
      "timedOut": false,
      "duration": 103,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, tileRequest</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  tileRequest.on(<span class=\"hljs-string\">'response'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">response</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>      response.statusCode.should.equal(<span class=\"hljs-number\">200</span>);<br>      <span class=\"hljs-keyword\">var</span> size = response.headers[<span class=\"hljs-string\">'content-length'</span>];<br>      size.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>      response.headers[<span class=\"hljs-string\">'content-type'</span>].should.equal(<span class=\"hljs-string\">'image/png'</span>);<br>      done();<br>    } <span class=\"hljs-keyword\">catch</span> (e) {<br>      done(e);<br>    }<br>  })<br>  .on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile request error'</span>, err);<br>    done(err);<br>  });<br>});",
      "isRoot": false,
      "uuid": "096894cf-103b-4c9a-a940-28b230c35cf4",
      "parentUUID": "66cb5a5e-ea2e-453f-ad0d-5cc44f3a6d2c",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 tile for the cache",
      "fullTitle": "cache tests should pull the 0/0/0 tile for the cache",
      "timedOut": false,
      "duration": 241,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
      "isRoot": false,
      "uuid": "f56a5a2c-4080-418d-b37b-e7440535b7d3",
      "parentUUID": "361407dd-8d20-4a60-9d60-be3f513630f7",
      "skipped": false
    }
  ],
  "allHooks": [
    {
      "title": "\"before all\" hook",
      "async": 0,
      "sync": true,
      "_timeout": 2000,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "generic source tests",
        "suites": [
          {
            "title": "generic cache tests",
            "suites": [],
            "tests": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "0af5ff54-f458-41f0-9a3c-be65304abe56",
                "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 generic tile for the cache",
                "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "c25b6429-dc36-434a-85fc-0c41d82bfa7e",
                "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "skipped": false
              },
              {
                "title": "should generate the cache",
                "fullTitle": "generic source tests generic cache tests should generate the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                "isRoot": false,
                "uuid": "0ddbb2e6-0a0c-49f6-8642-4a165e1eab4e",
                "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "skipped": false
              },
              {
                "title": "should pull features for the cache",
                "fullTitle": "generic source tests generic cache tests should pull features for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "34426102-f9e7-43c8-826b-00cff2da6762",
                "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/generic_test.js",
            "uuid": "b776c184-153b-43e5-b5f0-a78e1ccba443",
            "fullFile": "/data/git/mapcache-server/test/format/generic_test.js",
            "passes": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "0af5ff54-f458-41f0-9a3c-be65304abe56",
                "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 generic tile for the cache",
                "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "c25b6429-dc36-434a-85fc-0c41d82bfa7e",
                "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "skipped": false
              },
              {
                "title": "should generate the cache",
                "fullTitle": "generic source tests generic cache tests should generate the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                "isRoot": false,
                "uuid": "0ddbb2e6-0a0c-49f6-8642-4a165e1eab4e",
                "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "skipped": false
              },
              {
                "title": "should pull features for the cache",
                "fullTitle": "generic source tests generic cache tests should pull features for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "34426102-f9e7-43c8-826b-00cff2da6762",
                "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [
          {
            "title": "should process the source",
            "fullTitle": "generic generic source tests should process the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "793a5808-5ae3-4c5e-96dd-c07b2e0541be",
            "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 tile for the data source",
            "fullTitle": "generic generic source tests should pull the 0/0/0 tile for the data source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "0586e3ef-37b7-496d-901c-9878f6b1c240",
            "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 geojson tile for the data source",
            "fullTitle": "generic generic source tests should pull the 0/0/0 geojson tile for the data source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "edc77682-b387-405d-be6c-b1715db370f1",
            "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "generic generic source tests should get all features of the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "ee797650-51c3-4c59-9569-d64eec50391b",
            "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/generic_test.js",
        "uuid": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
        "fullFile": "/data/git/mapcache-server/test/format/generic_test.js",
        "passes": [
          {
            "title": "should process the source",
            "fullTitle": "generic generic source tests should process the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "793a5808-5ae3-4c5e-96dd-c07b2e0541be",
            "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 tile for the data source",
            "fullTitle": "generic generic source tests should pull the 0/0/0 tile for the data source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "0586e3ef-37b7-496d-901c-9878f6b1c240",
            "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 geojson tile for the data source",
            "fullTitle": "generic generic source tests should pull the 0/0/0 geojson tile for the data source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "edc77682-b387-405d-be6c-b1715db370f1",
            "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "generic generic source tests should get all features of the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "ee797650-51c3-4c59-9569-d64eec50391b",
            "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": true,
        "totalTests": 4,
        "totalPasses": 4,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      "ctx": {
        "_runnable": {
          "title": "\"after all\" hook",
          "async": 0,
          "sync": true,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "type": "hook",
          "parent": {
            "title": "generic source tests",
            "suites": [
              {
                "title": "generic cache tests",
                "suites": [],
                "tests": [
                  {
                    "title": "should pull the 0/0/0 tile for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "0af5ff54-f458-41f0-9a3c-be65304abe56",
                    "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                    "skipped": false
                  },
                  {
                    "title": "should pull the 0/0/0 generic tile for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "c25b6429-dc36-434a-85fc-0c41d82bfa7e",
                    "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                    "skipped": false
                  },
                  {
                    "title": "should generate the cache",
                    "fullTitle": "generic source tests generic cache tests should generate the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "0ddbb2e6-0a0c-49f6-8642-4a165e1eab4e",
                    "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                    "skipped": false
                  },
                  {
                    "title": "should pull features for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull features for the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "34426102-f9e7-43c8-826b-00cff2da6762",
                    "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/format/generic_test.js",
                "uuid": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "fullFile": "/data/git/mapcache-server/test/format/generic_test.js",
                "passes": [
                  {
                    "title": "should pull the 0/0/0 tile for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "0af5ff54-f458-41f0-9a3c-be65304abe56",
                    "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                    "skipped": false
                  },
                  {
                    "title": "should pull the 0/0/0 generic tile for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "c25b6429-dc36-434a-85fc-0c41d82bfa7e",
                    "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                    "skipped": false
                  },
                  {
                    "title": "should generate the cache",
                    "fullTitle": "generic source tests generic cache tests should generate the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "0ddbb2e6-0a0c-49f6-8642-4a165e1eab4e",
                    "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                    "skipped": false
                  },
                  {
                    "title": "should pull features for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull features for the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "34426102-f9e7-43c8-826b-00cff2da6762",
                    "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0
              }
            ],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "generic generic source tests should process the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "793a5808-5ae3-4c5e-96dd-c07b2e0541be",
                "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "generic generic source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "0586e3ef-37b7-496d-901c-9878f6b1c240",
                "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the data source",
                "fullTitle": "generic generic source tests should pull the 0/0/0 geojson tile for the data source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "edc77682-b387-405d-be6c-b1715db370f1",
                "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "generic generic source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "ee797650-51c3-4c59-9569-d64eec50391b",
                "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/generic_test.js",
            "uuid": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
            "fullFile": "/data/git/mapcache-server/test/format/generic_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "generic generic source tests should process the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "793a5808-5ae3-4c5e-96dd-c07b2e0541be",
                "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "generic generic source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "0586e3ef-37b7-496d-901c-9878f6b1c240",
                "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the data source",
                "fullTitle": "generic generic source tests should pull the 0/0/0 geojson tile for the data source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "edc77682-b387-405d-be6c-b1715db370f1",
                "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "generic generic source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "ee797650-51c3-4c59-9569-d64eec50391b",
                "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": true,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          "ctx": "[Circular ~.allHooks.0.ctx]",
          "_events": {},
          "duration": 0,
          "_error": null
        },
        "test": {
          "title": "\"after all\" hook",
          "async": 0,
          "sync": true,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "type": "hook",
          "parent": {
            "title": "generic source tests",
            "suites": [
              {
                "title": "generic cache tests",
                "suites": [],
                "tests": [
                  {
                    "title": "should pull the 0/0/0 tile for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "0af5ff54-f458-41f0-9a3c-be65304abe56",
                    "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                    "skipped": false
                  },
                  {
                    "title": "should pull the 0/0/0 generic tile for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "c25b6429-dc36-434a-85fc-0c41d82bfa7e",
                    "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                    "skipped": false
                  },
                  {
                    "title": "should generate the cache",
                    "fullTitle": "generic source tests generic cache tests should generate the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "0ddbb2e6-0a0c-49f6-8642-4a165e1eab4e",
                    "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                    "skipped": false
                  },
                  {
                    "title": "should pull features for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull features for the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "34426102-f9e7-43c8-826b-00cff2da6762",
                    "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/format/generic_test.js",
                "uuid": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "fullFile": "/data/git/mapcache-server/test/format/generic_test.js",
                "passes": [
                  {
                    "title": "should pull the 0/0/0 tile for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "0af5ff54-f458-41f0-9a3c-be65304abe56",
                    "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                    "skipped": false
                  },
                  {
                    "title": "should pull the 0/0/0 generic tile for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "c25b6429-dc36-434a-85fc-0c41d82bfa7e",
                    "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                    "skipped": false
                  },
                  {
                    "title": "should generate the cache",
                    "fullTitle": "generic source tests generic cache tests should generate the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "0ddbb2e6-0a0c-49f6-8642-4a165e1eab4e",
                    "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                    "skipped": false
                  },
                  {
                    "title": "should pull features for the cache",
                    "fullTitle": "generic source tests generic cache tests should pull features for the cache",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "34426102-f9e7-43c8-826b-00cff2da6762",
                    "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0
              }
            ],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "generic generic source tests should process the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "793a5808-5ae3-4c5e-96dd-c07b2e0541be",
                "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "generic generic source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "0586e3ef-37b7-496d-901c-9878f6b1c240",
                "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the data source",
                "fullTitle": "generic generic source tests should pull the 0/0/0 geojson tile for the data source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "edc77682-b387-405d-be6c-b1715db370f1",
                "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "generic generic source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "ee797650-51c3-4c59-9569-d64eec50391b",
                "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/generic_test.js",
            "uuid": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
            "fullFile": "/data/git/mapcache-server/test/format/generic_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "generic generic source tests should process the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "793a5808-5ae3-4c5e-96dd-c07b2e0541be",
                "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "generic generic source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "0586e3ef-37b7-496d-901c-9878f6b1c240",
                "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the data source",
                "fullTitle": "generic generic source tests should pull the 0/0/0 geojson tile for the data source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "edc77682-b387-405d-be6c-b1715db370f1",
                "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "generic generic source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "ee797650-51c3-4c59-9569-d64eec50391b",
                "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": true,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          "ctx": "[Circular ~.allHooks.0.ctx]",
          "_events": {},
          "duration": 0,
          "_error": null
        }
      },
      "_events": {},
      "duration": 0,
      "_error": null
    },
    {
      "title": "\"before all\" hook",
      "async": 0,
      "sync": true,
      "_timeout": 2000,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "generic cache tests",
        "suites": [],
        "tests": [
          {
            "title": "should pull the 0/0/0 tile for the cache",
            "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "0af5ff54-f458-41f0-9a3c-be65304abe56",
            "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 generic tile for the cache",
            "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "c25b6429-dc36-434a-85fc-0c41d82bfa7e",
            "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
            "skipped": false
          },
          {
            "title": "should generate the cache",
            "fullTitle": "generic source tests generic cache tests should generate the cache",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
            "isRoot": false,
            "uuid": "0ddbb2e6-0a0c-49f6-8642-4a165e1eab4e",
            "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
            "skipped": false
          },
          {
            "title": "should pull features for the cache",
            "fullTitle": "generic source tests generic cache tests should pull features for the cache",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "34426102-f9e7-43c8-826b-00cff2da6762",
            "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/generic_test.js",
        "uuid": "b776c184-153b-43e5-b5f0-a78e1ccba443",
        "fullFile": "/data/git/mapcache-server/test/format/generic_test.js",
        "passes": [
          {
            "title": "should pull the 0/0/0 tile for the cache",
            "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "0af5ff54-f458-41f0-9a3c-be65304abe56",
            "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 generic tile for the cache",
            "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "c25b6429-dc36-434a-85fc-0c41d82bfa7e",
            "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
            "skipped": false
          },
          {
            "title": "should generate the cache",
            "fullTitle": "generic source tests generic cache tests should generate the cache",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
            "isRoot": false,
            "uuid": "0ddbb2e6-0a0c-49f6-8642-4a165e1eab4e",
            "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
            "skipped": false
          },
          {
            "title": "should pull features for the cache",
            "fullTitle": "generic source tests generic cache tests should pull features for the cache",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "34426102-f9e7-43c8-826b-00cff2da6762",
            "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 4,
        "totalPasses": 4,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      "ctx": {
        "_runnable": {
          "title": "\"after all\" hook",
          "async": 0,
          "sync": true,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "type": "hook",
          "parent": {
            "title": "generic cache tests",
            "suites": [],
            "tests": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "0af5ff54-f458-41f0-9a3c-be65304abe56",
                "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 generic tile for the cache",
                "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "c25b6429-dc36-434a-85fc-0c41d82bfa7e",
                "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "skipped": false
              },
              {
                "title": "should generate the cache",
                "fullTitle": "generic source tests generic cache tests should generate the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                "isRoot": false,
                "uuid": "0ddbb2e6-0a0c-49f6-8642-4a165e1eab4e",
                "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "skipped": false
              },
              {
                "title": "should pull features for the cache",
                "fullTitle": "generic source tests generic cache tests should pull features for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "34426102-f9e7-43c8-826b-00cff2da6762",
                "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/generic_test.js",
            "uuid": "b776c184-153b-43e5-b5f0-a78e1ccba443",
            "fullFile": "/data/git/mapcache-server/test/format/generic_test.js",
            "passes": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "0af5ff54-f458-41f0-9a3c-be65304abe56",
                "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 generic tile for the cache",
                "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "c25b6429-dc36-434a-85fc-0c41d82bfa7e",
                "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "skipped": false
              },
              {
                "title": "should generate the cache",
                "fullTitle": "generic source tests generic cache tests should generate the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                "isRoot": false,
                "uuid": "0ddbb2e6-0a0c-49f6-8642-4a165e1eab4e",
                "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "skipped": false
              },
              {
                "title": "should pull features for the cache",
                "fullTitle": "generic source tests generic cache tests should pull features for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "34426102-f9e7-43c8-826b-00cff2da6762",
                "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          "ctx": "[Circular ~.allHooks.1.ctx]",
          "_events": {},
          "duration": 0,
          "_error": null
        },
        "test": {
          "title": "\"after all\" hook",
          "async": 0,
          "sync": true,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "type": "hook",
          "parent": {
            "title": "generic cache tests",
            "suites": [],
            "tests": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "0af5ff54-f458-41f0-9a3c-be65304abe56",
                "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 generic tile for the cache",
                "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "c25b6429-dc36-434a-85fc-0c41d82bfa7e",
                "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "skipped": false
              },
              {
                "title": "should generate the cache",
                "fullTitle": "generic source tests generic cache tests should generate the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                "isRoot": false,
                "uuid": "0ddbb2e6-0a0c-49f6-8642-4a165e1eab4e",
                "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "skipped": false
              },
              {
                "title": "should pull features for the cache",
                "fullTitle": "generic source tests generic cache tests should pull features for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "34426102-f9e7-43c8-826b-00cff2da6762",
                "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/generic_test.js",
            "uuid": "b776c184-153b-43e5-b5f0-a78e1ccba443",
            "fullFile": "/data/git/mapcache-server/test/format/generic_test.js",
            "passes": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "0af5ff54-f458-41f0-9a3c-be65304abe56",
                "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 generic tile for the cache",
                "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "c25b6429-dc36-434a-85fc-0c41d82bfa7e",
                "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "skipped": false
              },
              {
                "title": "should generate the cache",
                "fullTitle": "generic source tests generic cache tests should generate the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                "isRoot": false,
                "uuid": "0ddbb2e6-0a0c-49f6-8642-4a165e1eab4e",
                "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "skipped": false
              },
              {
                "title": "should pull features for the cache",
                "fullTitle": "generic source tests generic cache tests should pull features for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "34426102-f9e7-43c8-826b-00cff2da6762",
                "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          "ctx": "[Circular ~.allHooks.1.ctx]",
          "_events": {},
          "duration": 0,
          "_error": null
        }
      },
      "_events": {},
      "duration": 0,
      "_error": null
    },
    {
      "title": "\"after all\" hook",
      "async": 0,
      "sync": true,
      "_timeout": 2000,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "generic cache tests",
        "suites": [],
        "tests": [
          {
            "title": "should pull the 0/0/0 tile for the cache",
            "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "0af5ff54-f458-41f0-9a3c-be65304abe56",
            "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 generic tile for the cache",
            "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "c25b6429-dc36-434a-85fc-0c41d82bfa7e",
            "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
            "skipped": false
          },
          {
            "title": "should generate the cache",
            "fullTitle": "generic source tests generic cache tests should generate the cache",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
            "isRoot": false,
            "uuid": "0ddbb2e6-0a0c-49f6-8642-4a165e1eab4e",
            "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
            "skipped": false
          },
          {
            "title": "should pull features for the cache",
            "fullTitle": "generic source tests generic cache tests should pull features for the cache",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "34426102-f9e7-43c8-826b-00cff2da6762",
            "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/generic_test.js",
        "uuid": "b776c184-153b-43e5-b5f0-a78e1ccba443",
        "fullFile": "/data/git/mapcache-server/test/format/generic_test.js",
        "passes": [
          {
            "title": "should pull the 0/0/0 tile for the cache",
            "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "0af5ff54-f458-41f0-9a3c-be65304abe56",
            "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 generic tile for the cache",
            "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "c25b6429-dc36-434a-85fc-0c41d82bfa7e",
            "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
            "skipped": false
          },
          {
            "title": "should generate the cache",
            "fullTitle": "generic source tests generic cache tests should generate the cache",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
            "isRoot": false,
            "uuid": "0ddbb2e6-0a0c-49f6-8642-4a165e1eab4e",
            "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
            "skipped": false
          },
          {
            "title": "should pull features for the cache",
            "fullTitle": "generic source tests generic cache tests should pull features for the cache",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "34426102-f9e7-43c8-826b-00cff2da6762",
            "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 4,
        "totalPasses": 4,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      "ctx": {
        "_runnable": "[Circular ~.allHooks.2]",
        "test": "[Circular ~.allHooks.2]"
      },
      "_events": {},
      "duration": 0,
      "_error": null
    },
    {
      "title": "\"after all\" hook",
      "async": 0,
      "sync": true,
      "_timeout": 2000,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "generic source tests",
        "suites": [
          {
            "title": "generic cache tests",
            "suites": [],
            "tests": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "0af5ff54-f458-41f0-9a3c-be65304abe56",
                "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 generic tile for the cache",
                "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "c25b6429-dc36-434a-85fc-0c41d82bfa7e",
                "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "skipped": false
              },
              {
                "title": "should generate the cache",
                "fullTitle": "generic source tests generic cache tests should generate the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                "isRoot": false,
                "uuid": "0ddbb2e6-0a0c-49f6-8642-4a165e1eab4e",
                "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "skipped": false
              },
              {
                "title": "should pull features for the cache",
                "fullTitle": "generic source tests generic cache tests should pull features for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "34426102-f9e7-43c8-826b-00cff2da6762",
                "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/generic_test.js",
            "uuid": "b776c184-153b-43e5-b5f0-a78e1ccba443",
            "fullFile": "/data/git/mapcache-server/test/format/generic_test.js",
            "passes": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "0af5ff54-f458-41f0-9a3c-be65304abe56",
                "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 generic tile for the cache",
                "fullTitle": "generic source tests generic cache tests should pull the 0/0/0 generic tile for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "c25b6429-dc36-434a-85fc-0c41d82bfa7e",
                "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "skipped": false
              },
              {
                "title": "should generate the cache",
                "fullTitle": "generic source tests generic cache tests should generate the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                "isRoot": false,
                "uuid": "0ddbb2e6-0a0c-49f6-8642-4a165e1eab4e",
                "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "skipped": false
              },
              {
                "title": "should pull features for the cache",
                "fullTitle": "generic source tests generic cache tests should pull features for the cache",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "34426102-f9e7-43c8-826b-00cff2da6762",
                "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [
          {
            "title": "should process the source",
            "fullTitle": "generic generic source tests should process the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "793a5808-5ae3-4c5e-96dd-c07b2e0541be",
            "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 tile for the data source",
            "fullTitle": "generic generic source tests should pull the 0/0/0 tile for the data source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "0586e3ef-37b7-496d-901c-9878f6b1c240",
            "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 geojson tile for the data source",
            "fullTitle": "generic generic source tests should pull the 0/0/0 geojson tile for the data source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "edc77682-b387-405d-be6c-b1715db370f1",
            "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "generic generic source tests should get all features of the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "ee797650-51c3-4c59-9569-d64eec50391b",
            "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/generic_test.js",
        "uuid": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
        "fullFile": "/data/git/mapcache-server/test/format/generic_test.js",
        "passes": [
          {
            "title": "should process the source",
            "fullTitle": "generic generic source tests should process the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "793a5808-5ae3-4c5e-96dd-c07b2e0541be",
            "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 tile for the data source",
            "fullTitle": "generic generic source tests should pull the 0/0/0 tile for the data source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "0586e3ef-37b7-496d-901c-9878f6b1c240",
            "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 geojson tile for the data source",
            "fullTitle": "generic generic source tests should pull the 0/0/0 geojson tile for the data source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "edc77682-b387-405d-be6c-b1715db370f1",
            "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "generic generic source tests should get all features of the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "ee797650-51c3-4c59-9569-d64eec50391b",
            "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": true,
        "totalTests": 4,
        "totalPasses": 4,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      "ctx": {
        "_runnable": "[Circular ~.allHooks.3]",
        "test": "[Circular ~.allHooks.3]"
      },
      "_events": {},
      "duration": 0,
      "_error": null
    },
    {
      "title": "\"before all\" hook",
      "async": 1,
      "sync": false,
      "_timeout": 2000,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "geojson source tests",
        "suites": [
          {
            "title": "geojson cache tests",
            "suites": [],
            "tests": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 14,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "98e7008a-6a9d-41fc-b911-22b3555a4585",
                "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "fc51a915-38dd-412b-8f29-ea2fbee2f860",
                "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "skipped": false
              },
              {
                "title": "should generate the cache",
                "fullTitle": "geojson source tests geojson cache tests should generate the cache",
                "timedOut": false,
                "duration": 12,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                "isRoot": false,
                "uuid": "5dd8db9c-5fc9-4746-9835-cc22506f5e8f",
                "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "skipped": false
              },
              {
                "title": "should pull features for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "9307423b-1f1b-480f-8fe7-552e78934d47",
                "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/geojson_test.js",
            "uuid": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
            "fullFile": "/data/git/mapcache-server/test/format/geojson_test.js",
            "passes": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 14,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "98e7008a-6a9d-41fc-b911-22b3555a4585",
                "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "fc51a915-38dd-412b-8f29-ea2fbee2f860",
                "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "skipped": false
              },
              {
                "title": "should generate the cache",
                "fullTitle": "geojson source tests geojson cache tests should generate the cache",
                "timedOut": false,
                "duration": 12,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                "isRoot": false,
                "uuid": "5dd8db9c-5fc9-4746-9835-cc22506f5e8f",
                "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "skipped": false
              },
              {
                "title": "should pull features for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "9307423b-1f1b-480f-8fe7-552e78934d47",
                "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 31
          }
        ],
        "tests": [
          {
            "title": "should process the source",
            "fullTitle": "geojson geojson source tests should process the source",
            "timedOut": false,
            "duration": 12,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  FeatureModel.getAllSourceFeatures(geojson.source.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'features'</span>, features);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "f60c7327-dd8d-40a5-a88b-d7c1c14f8b20",
            "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 tile for the data source",
            "fullTitle": "geojson geojson source tests should pull the 0/0/0 tile for the data source",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "c6e53708-96b1-4d78-95cb-036e457030ca",
            "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 geojson tile for the data source",
            "fullTitle": "geojson geojson source tests should pull the 0/0/0 geojson tile for the data source",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "140a3401-5528-43d1-9d90-6deaa2944d57",
            "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "geojson geojson source tests should get all features of the source",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"feature count\"</span>, features);<br>  features.length.should.be.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "3be7417d-8359-4957-a965-b654aea50a58",
            "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/geojson_test.js",
        "uuid": "b031367e-b9ec-487b-a069-5c90e11f10fa",
        "fullFile": "/data/git/mapcache-server/test/format/geojson_test.js",
        "passes": [
          {
            "title": "should process the source",
            "fullTitle": "geojson geojson source tests should process the source",
            "timedOut": false,
            "duration": 12,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  FeatureModel.getAllSourceFeatures(geojson.source.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'features'</span>, features);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "f60c7327-dd8d-40a5-a88b-d7c1c14f8b20",
            "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 tile for the data source",
            "fullTitle": "geojson geojson source tests should pull the 0/0/0 tile for the data source",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "c6e53708-96b1-4d78-95cb-036e457030ca",
            "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 geojson tile for the data source",
            "fullTitle": "geojson geojson source tests should pull the 0/0/0 geojson tile for the data source",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "140a3401-5528-43d1-9d90-6deaa2944d57",
            "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "geojson geojson source tests should get all features of the source",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"feature count\"</span>, features);<br>  features.length.should.be.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "3be7417d-8359-4957-a965-b654aea50a58",
            "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": true,
        "totalTests": 4,
        "totalPasses": 4,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 24
      },
      "ctx": {
        "_runnable": {
          "title": "\"after all\" hook",
          "async": 1,
          "sync": false,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "type": "hook",
          "parent": {
            "title": "geojson source tests",
            "suites": [
              {
                "title": "geojson cache tests",
                "suites": [],
                "tests": [
                  {
                    "title": "should pull the 0/0/0 tile for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
                    "timedOut": false,
                    "duration": 14,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                    "isRoot": false,
                    "uuid": "98e7008a-6a9d-41fc-b911-22b3555a4585",
                    "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                    "skipped": false
                  },
                  {
                    "title": "should pull the 0/0/0 geojson tile for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
                    "timedOut": false,
                    "duration": 4,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
                    "isRoot": false,
                    "uuid": "fc51a915-38dd-412b-8f29-ea2fbee2f860",
                    "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                    "skipped": false
                  },
                  {
                    "title": "should generate the cache",
                    "fullTitle": "geojson source tests geojson cache tests should generate the cache",
                    "timedOut": false,
                    "duration": 12,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "5dd8db9c-5fc9-4746-9835-cc22506f5e8f",
                    "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                    "skipped": false
                  },
                  {
                    "title": "should pull features for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "9307423b-1f1b-480f-8fe7-552e78934d47",
                    "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/format/geojson_test.js",
                "uuid": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "fullFile": "/data/git/mapcache-server/test/format/geojson_test.js",
                "passes": [
                  {
                    "title": "should pull the 0/0/0 tile for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
                    "timedOut": false,
                    "duration": 14,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                    "isRoot": false,
                    "uuid": "98e7008a-6a9d-41fc-b911-22b3555a4585",
                    "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                    "skipped": false
                  },
                  {
                    "title": "should pull the 0/0/0 geojson tile for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
                    "timedOut": false,
                    "duration": 4,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
                    "isRoot": false,
                    "uuid": "fc51a915-38dd-412b-8f29-ea2fbee2f860",
                    "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                    "skipped": false
                  },
                  {
                    "title": "should generate the cache",
                    "fullTitle": "geojson source tests geojson cache tests should generate the cache",
                    "timedOut": false,
                    "duration": 12,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "5dd8db9c-5fc9-4746-9835-cc22506f5e8f",
                    "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                    "skipped": false
                  },
                  {
                    "title": "should pull features for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "9307423b-1f1b-480f-8fe7-552e78934d47",
                    "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 31
              }
            ],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "geojson geojson source tests should process the source",
                "timedOut": false,
                "duration": 12,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  FeatureModel.getAllSourceFeatures(geojson.source.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'features'</span>, features);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "f60c7327-dd8d-40a5-a88b-d7c1c14f8b20",
                "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "geojson geojson source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "c6e53708-96b1-4d78-95cb-036e457030ca",
                "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the data source",
                "fullTitle": "geojson geojson source tests should pull the 0/0/0 geojson tile for the data source",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "140a3401-5528-43d1-9d90-6deaa2944d57",
                "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "geojson geojson source tests should get all features of the source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"feature count\"</span>, features);<br>  features.length.should.be.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "3be7417d-8359-4957-a965-b654aea50a58",
                "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/geojson_test.js",
            "uuid": "b031367e-b9ec-487b-a069-5c90e11f10fa",
            "fullFile": "/data/git/mapcache-server/test/format/geojson_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "geojson geojson source tests should process the source",
                "timedOut": false,
                "duration": 12,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  FeatureModel.getAllSourceFeatures(geojson.source.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'features'</span>, features);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "f60c7327-dd8d-40a5-a88b-d7c1c14f8b20",
                "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "geojson geojson source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "c6e53708-96b1-4d78-95cb-036e457030ca",
                "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the data source",
                "fullTitle": "geojson geojson source tests should pull the 0/0/0 geojson tile for the data source",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "140a3401-5528-43d1-9d90-6deaa2944d57",
                "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "geojson geojson source tests should get all features of the source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"feature count\"</span>, features);<br>  features.length.should.be.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "3be7417d-8359-4957-a965-b654aea50a58",
                "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": true,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 24
          },
          "ctx": "[Circular ~.allHooks.4.ctx]",
          "_events": {},
          "duration": 1,
          "_error": null
        },
        "test": {
          "title": "\"after all\" hook",
          "async": 1,
          "sync": false,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "type": "hook",
          "parent": {
            "title": "geojson source tests",
            "suites": [
              {
                "title": "geojson cache tests",
                "suites": [],
                "tests": [
                  {
                    "title": "should pull the 0/0/0 tile for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
                    "timedOut": false,
                    "duration": 14,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                    "isRoot": false,
                    "uuid": "98e7008a-6a9d-41fc-b911-22b3555a4585",
                    "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                    "skipped": false
                  },
                  {
                    "title": "should pull the 0/0/0 geojson tile for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
                    "timedOut": false,
                    "duration": 4,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
                    "isRoot": false,
                    "uuid": "fc51a915-38dd-412b-8f29-ea2fbee2f860",
                    "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                    "skipped": false
                  },
                  {
                    "title": "should generate the cache",
                    "fullTitle": "geojson source tests geojson cache tests should generate the cache",
                    "timedOut": false,
                    "duration": 12,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "5dd8db9c-5fc9-4746-9835-cc22506f5e8f",
                    "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                    "skipped": false
                  },
                  {
                    "title": "should pull features for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "9307423b-1f1b-480f-8fe7-552e78934d47",
                    "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/format/geojson_test.js",
                "uuid": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "fullFile": "/data/git/mapcache-server/test/format/geojson_test.js",
                "passes": [
                  {
                    "title": "should pull the 0/0/0 tile for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
                    "timedOut": false,
                    "duration": 14,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                    "isRoot": false,
                    "uuid": "98e7008a-6a9d-41fc-b911-22b3555a4585",
                    "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                    "skipped": false
                  },
                  {
                    "title": "should pull the 0/0/0 geojson tile for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
                    "timedOut": false,
                    "duration": 4,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
                    "isRoot": false,
                    "uuid": "fc51a915-38dd-412b-8f29-ea2fbee2f860",
                    "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                    "skipped": false
                  },
                  {
                    "title": "should generate the cache",
                    "fullTitle": "geojson source tests geojson cache tests should generate the cache",
                    "timedOut": false,
                    "duration": 12,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "5dd8db9c-5fc9-4746-9835-cc22506f5e8f",
                    "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                    "skipped": false
                  },
                  {
                    "title": "should pull features for the cache",
                    "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                    "isRoot": false,
                    "uuid": "9307423b-1f1b-480f-8fe7-552e78934d47",
                    "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 31
              }
            ],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "geojson geojson source tests should process the source",
                "timedOut": false,
                "duration": 12,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  FeatureModel.getAllSourceFeatures(geojson.source.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'features'</span>, features);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "f60c7327-dd8d-40a5-a88b-d7c1c14f8b20",
                "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "geojson geojson source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "c6e53708-96b1-4d78-95cb-036e457030ca",
                "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the data source",
                "fullTitle": "geojson geojson source tests should pull the 0/0/0 geojson tile for the data source",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "140a3401-5528-43d1-9d90-6deaa2944d57",
                "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "geojson geojson source tests should get all features of the source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"feature count\"</span>, features);<br>  features.length.should.be.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "3be7417d-8359-4957-a965-b654aea50a58",
                "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/geojson_test.js",
            "uuid": "b031367e-b9ec-487b-a069-5c90e11f10fa",
            "fullFile": "/data/git/mapcache-server/test/format/geojson_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "geojson geojson source tests should process the source",
                "timedOut": false,
                "duration": 12,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  FeatureModel.getAllSourceFeatures(geojson.source.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'features'</span>, features);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "f60c7327-dd8d-40a5-a88b-d7c1c14f8b20",
                "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "geojson geojson source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "c6e53708-96b1-4d78-95cb-036e457030ca",
                "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the data source",
                "fullTitle": "geojson geojson source tests should pull the 0/0/0 geojson tile for the data source",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "140a3401-5528-43d1-9d90-6deaa2944d57",
                "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "geojson geojson source tests should get all features of the source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"feature count\"</span>, features);<br>  features.length.should.be.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "3be7417d-8359-4957-a965-b654aea50a58",
                "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": true,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 24
          },
          "ctx": "[Circular ~.allHooks.4.ctx]",
          "_events": {},
          "duration": 1,
          "_error": null
        }
      },
      "_events": {},
      "duration": 1,
      "_error": null
    },
    {
      "title": "\"before all\" hook",
      "async": 1,
      "sync": false,
      "_timeout": 2000,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "geojson cache tests",
        "suites": [],
        "tests": [
          {
            "title": "should pull the 0/0/0 tile for the cache",
            "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
            "timedOut": false,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "98e7008a-6a9d-41fc-b911-22b3555a4585",
            "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 geojson tile for the cache",
            "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "fc51a915-38dd-412b-8f29-ea2fbee2f860",
            "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
            "skipped": false
          },
          {
            "title": "should generate the cache",
            "fullTitle": "geojson source tests geojson cache tests should generate the cache",
            "timedOut": false,
            "duration": 12,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
            "isRoot": false,
            "uuid": "5dd8db9c-5fc9-4746-9835-cc22506f5e8f",
            "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
            "skipped": false
          },
          {
            "title": "should pull features for the cache",
            "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "9307423b-1f1b-480f-8fe7-552e78934d47",
            "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/geojson_test.js",
        "uuid": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
        "fullFile": "/data/git/mapcache-server/test/format/geojson_test.js",
        "passes": [
          {
            "title": "should pull the 0/0/0 tile for the cache",
            "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
            "timedOut": false,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "98e7008a-6a9d-41fc-b911-22b3555a4585",
            "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 geojson tile for the cache",
            "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "fc51a915-38dd-412b-8f29-ea2fbee2f860",
            "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
            "skipped": false
          },
          {
            "title": "should generate the cache",
            "fullTitle": "geojson source tests geojson cache tests should generate the cache",
            "timedOut": false,
            "duration": 12,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
            "isRoot": false,
            "uuid": "5dd8db9c-5fc9-4746-9835-cc22506f5e8f",
            "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
            "skipped": false
          },
          {
            "title": "should pull features for the cache",
            "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "9307423b-1f1b-480f-8fe7-552e78934d47",
            "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 4,
        "totalPasses": 4,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 31
      },
      "ctx": {
        "_runnable": {
          "title": "\"after all\" hook",
          "async": 1,
          "sync": false,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "type": "hook",
          "parent": {
            "title": "geojson cache tests",
            "suites": [],
            "tests": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 14,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "98e7008a-6a9d-41fc-b911-22b3555a4585",
                "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "fc51a915-38dd-412b-8f29-ea2fbee2f860",
                "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "skipped": false
              },
              {
                "title": "should generate the cache",
                "fullTitle": "geojson source tests geojson cache tests should generate the cache",
                "timedOut": false,
                "duration": 12,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                "isRoot": false,
                "uuid": "5dd8db9c-5fc9-4746-9835-cc22506f5e8f",
                "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "skipped": false
              },
              {
                "title": "should pull features for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "9307423b-1f1b-480f-8fe7-552e78934d47",
                "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/geojson_test.js",
            "uuid": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
            "fullFile": "/data/git/mapcache-server/test/format/geojson_test.js",
            "passes": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 14,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "98e7008a-6a9d-41fc-b911-22b3555a4585",
                "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "fc51a915-38dd-412b-8f29-ea2fbee2f860",
                "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "skipped": false
              },
              {
                "title": "should generate the cache",
                "fullTitle": "geojson source tests geojson cache tests should generate the cache",
                "timedOut": false,
                "duration": 12,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                "isRoot": false,
                "uuid": "5dd8db9c-5fc9-4746-9835-cc22506f5e8f",
                "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "skipped": false
              },
              {
                "title": "should pull features for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "9307423b-1f1b-480f-8fe7-552e78934d47",
                "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 31
          },
          "ctx": "[Circular ~.allHooks.5.ctx]",
          "_events": {},
          "duration": 7,
          "_error": null
        },
        "test": {
          "title": "\"after all\" hook",
          "async": 1,
          "sync": false,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "type": "hook",
          "parent": {
            "title": "geojson cache tests",
            "suites": [],
            "tests": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 14,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "98e7008a-6a9d-41fc-b911-22b3555a4585",
                "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "fc51a915-38dd-412b-8f29-ea2fbee2f860",
                "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "skipped": false
              },
              {
                "title": "should generate the cache",
                "fullTitle": "geojson source tests geojson cache tests should generate the cache",
                "timedOut": false,
                "duration": 12,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                "isRoot": false,
                "uuid": "5dd8db9c-5fc9-4746-9835-cc22506f5e8f",
                "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "skipped": false
              },
              {
                "title": "should pull features for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "9307423b-1f1b-480f-8fe7-552e78934d47",
                "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/geojson_test.js",
            "uuid": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
            "fullFile": "/data/git/mapcache-server/test/format/geojson_test.js",
            "passes": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 14,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "98e7008a-6a9d-41fc-b911-22b3555a4585",
                "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "fc51a915-38dd-412b-8f29-ea2fbee2f860",
                "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "skipped": false
              },
              {
                "title": "should generate the cache",
                "fullTitle": "geojson source tests geojson cache tests should generate the cache",
                "timedOut": false,
                "duration": 12,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                "isRoot": false,
                "uuid": "5dd8db9c-5fc9-4746-9835-cc22506f5e8f",
                "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "skipped": false
              },
              {
                "title": "should pull features for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "9307423b-1f1b-480f-8fe7-552e78934d47",
                "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 31
          },
          "ctx": "[Circular ~.allHooks.5.ctx]",
          "_events": {},
          "duration": 7,
          "_error": null
        }
      },
      "_events": {},
      "duration": 1,
      "_error": null
    },
    {
      "title": "\"after all\" hook",
      "async": 1,
      "sync": false,
      "_timeout": 2000,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "geojson cache tests",
        "suites": [],
        "tests": [
          {
            "title": "should pull the 0/0/0 tile for the cache",
            "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
            "timedOut": false,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "98e7008a-6a9d-41fc-b911-22b3555a4585",
            "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 geojson tile for the cache",
            "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "fc51a915-38dd-412b-8f29-ea2fbee2f860",
            "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
            "skipped": false
          },
          {
            "title": "should generate the cache",
            "fullTitle": "geojson source tests geojson cache tests should generate the cache",
            "timedOut": false,
            "duration": 12,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
            "isRoot": false,
            "uuid": "5dd8db9c-5fc9-4746-9835-cc22506f5e8f",
            "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
            "skipped": false
          },
          {
            "title": "should pull features for the cache",
            "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "9307423b-1f1b-480f-8fe7-552e78934d47",
            "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/geojson_test.js",
        "uuid": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
        "fullFile": "/data/git/mapcache-server/test/format/geojson_test.js",
        "passes": [
          {
            "title": "should pull the 0/0/0 tile for the cache",
            "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
            "timedOut": false,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "98e7008a-6a9d-41fc-b911-22b3555a4585",
            "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 geojson tile for the cache",
            "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "fc51a915-38dd-412b-8f29-ea2fbee2f860",
            "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
            "skipped": false
          },
          {
            "title": "should generate the cache",
            "fullTitle": "geojson source tests geojson cache tests should generate the cache",
            "timedOut": false,
            "duration": 12,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
            "isRoot": false,
            "uuid": "5dd8db9c-5fc9-4746-9835-cc22506f5e8f",
            "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
            "skipped": false
          },
          {
            "title": "should pull features for the cache",
            "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "9307423b-1f1b-480f-8fe7-552e78934d47",
            "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 4,
        "totalPasses": 4,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 31
      },
      "ctx": {
        "_runnable": "[Circular ~.allHooks.6]",
        "test": "[Circular ~.allHooks.6]"
      },
      "_events": {},
      "duration": 7,
      "_error": null
    },
    {
      "title": "\"after all\" hook",
      "async": 1,
      "sync": false,
      "_timeout": 2000,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "geojson source tests",
        "suites": [
          {
            "title": "geojson cache tests",
            "suites": [],
            "tests": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 14,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "98e7008a-6a9d-41fc-b911-22b3555a4585",
                "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "fc51a915-38dd-412b-8f29-ea2fbee2f860",
                "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "skipped": false
              },
              {
                "title": "should generate the cache",
                "fullTitle": "geojson source tests geojson cache tests should generate the cache",
                "timedOut": false,
                "duration": 12,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                "isRoot": false,
                "uuid": "5dd8db9c-5fc9-4746-9835-cc22506f5e8f",
                "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "skipped": false
              },
              {
                "title": "should pull features for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "9307423b-1f1b-480f-8fe7-552e78934d47",
                "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/geojson_test.js",
            "uuid": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
            "fullFile": "/data/git/mapcache-server/test/format/geojson_test.js",
            "passes": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 14,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "98e7008a-6a9d-41fc-b911-22b3555a4585",
                "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull the 0/0/0 geojson tile for the cache",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "fc51a915-38dd-412b-8f29-ea2fbee2f860",
                "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "skipped": false
              },
              {
                "title": "should generate the cache",
                "fullTitle": "geojson source tests geojson cache tests should generate the cache",
                "timedOut": false,
                "duration": 12,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
                "isRoot": false,
                "uuid": "5dd8db9c-5fc9-4746-9835-cc22506f5e8f",
                "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "skipped": false
              },
              {
                "title": "should pull features for the cache",
                "fullTitle": "geojson source tests geojson cache tests should pull features for the cache",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "9307423b-1f1b-480f-8fe7-552e78934d47",
                "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 31
          }
        ],
        "tests": [
          {
            "title": "should process the source",
            "fullTitle": "geojson geojson source tests should process the source",
            "timedOut": false,
            "duration": 12,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  FeatureModel.getAllSourceFeatures(geojson.source.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'features'</span>, features);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "f60c7327-dd8d-40a5-a88b-d7c1c14f8b20",
            "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 tile for the data source",
            "fullTitle": "geojson geojson source tests should pull the 0/0/0 tile for the data source",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "c6e53708-96b1-4d78-95cb-036e457030ca",
            "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 geojson tile for the data source",
            "fullTitle": "geojson geojson source tests should pull the 0/0/0 geojson tile for the data source",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "140a3401-5528-43d1-9d90-6deaa2944d57",
            "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "geojson geojson source tests should get all features of the source",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"feature count\"</span>, features);<br>  features.length.should.be.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "3be7417d-8359-4957-a965-b654aea50a58",
            "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/geojson_test.js",
        "uuid": "b031367e-b9ec-487b-a069-5c90e11f10fa",
        "fullFile": "/data/git/mapcache-server/test/format/geojson_test.js",
        "passes": [
          {
            "title": "should process the source",
            "fullTitle": "geojson geojson source tests should process the source",
            "timedOut": false,
            "duration": 12,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  FeatureModel.getAllSourceFeatures(geojson.source.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'features'</span>, features);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "f60c7327-dd8d-40a5-a88b-d7c1c14f8b20",
            "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 tile for the data source",
            "fullTitle": "geojson geojson source tests should pull the 0/0/0 tile for the data source",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "c6e53708-96b1-4d78-95cb-036e457030ca",
            "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 geojson tile for the data source",
            "fullTitle": "geojson geojson source tests should pull the 0/0/0 geojson tile for the data source",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "140a3401-5528-43d1-9d90-6deaa2944d57",
            "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "geojson geojson source tests should get all features of the source",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"feature count\"</span>, features);<br>  features.length.should.be.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "3be7417d-8359-4957-a965-b654aea50a58",
            "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": true,
        "totalTests": 4,
        "totalPasses": 4,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 24
      },
      "ctx": {
        "_runnable": "[Circular ~.allHooks.7]",
        "test": "[Circular ~.allHooks.7]"
      },
      "_events": {},
      "duration": 1,
      "_error": null
    },
    {
      "title": "\"before all\" hook",
      "async": 0,
      "sync": true,
      "_timeout": 2000,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "geotiff source tests",
        "suites": [],
        "tests": [
          {
            "title": "should process the source",
            "fullTitle": "geotiff geotiff source tests should process the source",
            "timedOut": false,
            "duration": 19,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "geotiff.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>],<br>        [-<span class=\"hljs-number\">104.82331093941556</span>,<span class=\"hljs-number\">39.67084478892132</span>],<br>        [-<span class=\"hljs-number\">104.82337800954186</span>,<span class=\"hljs-number\">39.64449869141027</span>],<br>        [-<span class=\"hljs-number\">104.85255015490993</span>,<span class=\"hljs-number\">39.64453938508538</span>],<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'26913'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "41c72ead-acf9-433b-a051-b14afd309c5b",
            "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
            "skipped": false
          },
          {
            "title": "should pull the 13/1710/3111 tile for the data source",
            "fullTitle": "geotiff geotiff source tests should pull the 13/1710/3111 tile for the data source",
            "timedOut": false,
            "duration": 118,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/geotifftile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
            "isRoot": false,
            "uuid": "d2fcb58b-f86b-437a-a9d9-c041f9333119",
            "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "geotiff geotiff source tests should get all features of the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "a487b06c-3257-4c85-a07c-2edb85e210f5",
            "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/geotiff_test.js",
        "uuid": "519a0472-75e8-4afc-aa24-26d8af5175ba",
        "fullFile": "/data/git/mapcache-server/test/format/geotiff_test.js",
        "passes": [
          {
            "title": "should process the source",
            "fullTitle": "geotiff geotiff source tests should process the source",
            "timedOut": false,
            "duration": 19,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "geotiff.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>],<br>        [-<span class=\"hljs-number\">104.82331093941556</span>,<span class=\"hljs-number\">39.67084478892132</span>],<br>        [-<span class=\"hljs-number\">104.82337800954186</span>,<span class=\"hljs-number\">39.64449869141027</span>],<br>        [-<span class=\"hljs-number\">104.85255015490993</span>,<span class=\"hljs-number\">39.64453938508538</span>],<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'26913'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "41c72ead-acf9-433b-a051-b14afd309c5b",
            "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
            "skipped": false
          },
          {
            "title": "should pull the 13/1710/3111 tile for the data source",
            "fullTitle": "geotiff geotiff source tests should pull the 13/1710/3111 tile for the data source",
            "timedOut": false,
            "duration": 118,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/geotifftile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
            "isRoot": false,
            "uuid": "d2fcb58b-f86b-437a-a9d9-c041f9333119",
            "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "geotiff geotiff source tests should get all features of the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "a487b06c-3257-4c85-a07c-2edb85e210f5",
            "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 137
      },
      "ctx": {
        "_runnable": {
          "title": "\"after all\" hook",
          "async": 0,
          "sync": true,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "type": "hook",
          "parent": {
            "title": "geotiff source tests",
            "suites": [],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "geotiff geotiff source tests should process the source",
                "timedOut": false,
                "duration": 19,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geotiff.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>],<br>        [-<span class=\"hljs-number\">104.82331093941556</span>,<span class=\"hljs-number\">39.67084478892132</span>],<br>        [-<span class=\"hljs-number\">104.82337800954186</span>,<span class=\"hljs-number\">39.64449869141027</span>],<br>        [-<span class=\"hljs-number\">104.85255015490993</span>,<span class=\"hljs-number\">39.64453938508538</span>],<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'26913'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "41c72ead-acf9-433b-a051-b14afd309c5b",
                "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
                "skipped": false
              },
              {
                "title": "should pull the 13/1710/3111 tile for the data source",
                "fullTitle": "geotiff geotiff source tests should pull the 13/1710/3111 tile for the data source",
                "timedOut": false,
                "duration": 118,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/geotifftile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
                "isRoot": false,
                "uuid": "d2fcb58b-f86b-437a-a9d9-c041f9333119",
                "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "geotiff geotiff source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "a487b06c-3257-4c85-a07c-2edb85e210f5",
                "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/geotiff_test.js",
            "uuid": "519a0472-75e8-4afc-aa24-26d8af5175ba",
            "fullFile": "/data/git/mapcache-server/test/format/geotiff_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "geotiff geotiff source tests should process the source",
                "timedOut": false,
                "duration": 19,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geotiff.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>],<br>        [-<span class=\"hljs-number\">104.82331093941556</span>,<span class=\"hljs-number\">39.67084478892132</span>],<br>        [-<span class=\"hljs-number\">104.82337800954186</span>,<span class=\"hljs-number\">39.64449869141027</span>],<br>        [-<span class=\"hljs-number\">104.85255015490993</span>,<span class=\"hljs-number\">39.64453938508538</span>],<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'26913'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "41c72ead-acf9-433b-a051-b14afd309c5b",
                "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
                "skipped": false
              },
              {
                "title": "should pull the 13/1710/3111 tile for the data source",
                "fullTitle": "geotiff geotiff source tests should pull the 13/1710/3111 tile for the data source",
                "timedOut": false,
                "duration": 118,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/geotifftile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
                "isRoot": false,
                "uuid": "d2fcb58b-f86b-437a-a9d9-c041f9333119",
                "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "geotiff geotiff source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "a487b06c-3257-4c85-a07c-2edb85e210f5",
                "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 137
          },
          "ctx": "[Circular ~.allHooks.8.ctx]",
          "_events": {},
          "duration": 0,
          "_error": null
        },
        "test": {
          "title": "\"after all\" hook",
          "async": 0,
          "sync": true,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "type": "hook",
          "parent": {
            "title": "geotiff source tests",
            "suites": [],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "geotiff geotiff source tests should process the source",
                "timedOut": false,
                "duration": 19,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geotiff.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>],<br>        [-<span class=\"hljs-number\">104.82331093941556</span>,<span class=\"hljs-number\">39.67084478892132</span>],<br>        [-<span class=\"hljs-number\">104.82337800954186</span>,<span class=\"hljs-number\">39.64449869141027</span>],<br>        [-<span class=\"hljs-number\">104.85255015490993</span>,<span class=\"hljs-number\">39.64453938508538</span>],<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'26913'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "41c72ead-acf9-433b-a051-b14afd309c5b",
                "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
                "skipped": false
              },
              {
                "title": "should pull the 13/1710/3111 tile for the data source",
                "fullTitle": "geotiff geotiff source tests should pull the 13/1710/3111 tile for the data source",
                "timedOut": false,
                "duration": 118,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/geotifftile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
                "isRoot": false,
                "uuid": "d2fcb58b-f86b-437a-a9d9-c041f9333119",
                "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "geotiff geotiff source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "a487b06c-3257-4c85-a07c-2edb85e210f5",
                "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/geotiff_test.js",
            "uuid": "519a0472-75e8-4afc-aa24-26d8af5175ba",
            "fullFile": "/data/git/mapcache-server/test/format/geotiff_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "geotiff geotiff source tests should process the source",
                "timedOut": false,
                "duration": 19,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "geotiff.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>],<br>        [-<span class=\"hljs-number\">104.82331093941556</span>,<span class=\"hljs-number\">39.67084478892132</span>],<br>        [-<span class=\"hljs-number\">104.82337800954186</span>,<span class=\"hljs-number\">39.64449869141027</span>],<br>        [-<span class=\"hljs-number\">104.85255015490993</span>,<span class=\"hljs-number\">39.64453938508538</span>],<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'26913'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "41c72ead-acf9-433b-a051-b14afd309c5b",
                "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
                "skipped": false
              },
              {
                "title": "should pull the 13/1710/3111 tile for the data source",
                "fullTitle": "geotiff geotiff source tests should pull the 13/1710/3111 tile for the data source",
                "timedOut": false,
                "duration": 118,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/geotifftile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
                "isRoot": false,
                "uuid": "d2fcb58b-f86b-437a-a9d9-c041f9333119",
                "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "geotiff geotiff source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "a487b06c-3257-4c85-a07c-2edb85e210f5",
                "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 137
          },
          "ctx": "[Circular ~.allHooks.8.ctx]",
          "_events": {},
          "duration": 0,
          "_error": null
        }
      },
      "_events": {},
      "duration": 0,
      "_error": null
    },
    {
      "title": "\"after all\" hook",
      "async": 0,
      "sync": true,
      "_timeout": 2000,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "geotiff source tests",
        "suites": [],
        "tests": [
          {
            "title": "should process the source",
            "fullTitle": "geotiff geotiff source tests should process the source",
            "timedOut": false,
            "duration": 19,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "geotiff.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>],<br>        [-<span class=\"hljs-number\">104.82331093941556</span>,<span class=\"hljs-number\">39.67084478892132</span>],<br>        [-<span class=\"hljs-number\">104.82337800954186</span>,<span class=\"hljs-number\">39.64449869141027</span>],<br>        [-<span class=\"hljs-number\">104.85255015490993</span>,<span class=\"hljs-number\">39.64453938508538</span>],<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'26913'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "41c72ead-acf9-433b-a051-b14afd309c5b",
            "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
            "skipped": false
          },
          {
            "title": "should pull the 13/1710/3111 tile for the data source",
            "fullTitle": "geotiff geotiff source tests should pull the 13/1710/3111 tile for the data source",
            "timedOut": false,
            "duration": 118,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/geotifftile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
            "isRoot": false,
            "uuid": "d2fcb58b-f86b-437a-a9d9-c041f9333119",
            "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "geotiff geotiff source tests should get all features of the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "a487b06c-3257-4c85-a07c-2edb85e210f5",
            "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/geotiff_test.js",
        "uuid": "519a0472-75e8-4afc-aa24-26d8af5175ba",
        "fullFile": "/data/git/mapcache-server/test/format/geotiff_test.js",
        "passes": [
          {
            "title": "should process the source",
            "fullTitle": "geotiff geotiff source tests should process the source",
            "timedOut": false,
            "duration": 19,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "geotiff.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>],<br>        [-<span class=\"hljs-number\">104.82331093941556</span>,<span class=\"hljs-number\">39.67084478892132</span>],<br>        [-<span class=\"hljs-number\">104.82337800954186</span>,<span class=\"hljs-number\">39.64449869141027</span>],<br>        [-<span class=\"hljs-number\">104.85255015490993</span>,<span class=\"hljs-number\">39.64453938508538</span>],<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'26913'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "41c72ead-acf9-433b-a051-b14afd309c5b",
            "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
            "skipped": false
          },
          {
            "title": "should pull the 13/1710/3111 tile for the data source",
            "fullTitle": "geotiff geotiff source tests should pull the 13/1710/3111 tile for the data source",
            "timedOut": false,
            "duration": 118,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/geotifftile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
            "isRoot": false,
            "uuid": "d2fcb58b-f86b-437a-a9d9-c041f9333119",
            "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "geotiff geotiff source tests should get all features of the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "a487b06c-3257-4c85-a07c-2edb85e210f5",
            "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 137
      },
      "ctx": {
        "_runnable": "[Circular ~.allHooks.9]",
        "test": "[Circular ~.allHooks.9]"
      },
      "_events": {},
      "duration": 0,
      "_error": null
    },
    {
      "title": "\"before all\" hook",
      "async": 0,
      "sync": true,
      "_timeout": 2000,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "MrSID source tests",
        "suites": [],
        "tests": [
          {
            "title": "should process the source",
            "fullTitle": "MrSID MrSID source tests should process the source",
            "timedOut": false,
            "duration": 16,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "mrsid.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'newSource'</span>, newSource);<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'4326'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "654069c7-62d3-4e99-b0d0-3075633f5d24",
            "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
            "skipped": false
          },
          {
            "title": "should not pull the 13/1710/3111 tile for the data source because no data exists there",
            "fullTitle": "MrSID MrSID source tests should not pull the 13/1710/3111 tile for the data source because no data exists there",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(stream);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "50cd07c5-4c26-494b-9d37-c40495a9b623",
            "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
            "skipped": false
          },
          {
            "title": "should pull the 11/572/747 tile for the data source",
            "fullTitle": "MrSID MrSID source tests should pull the 11/572/747 tile for the data source",
            "timedOut": false,
            "duration": 98,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">572</span>, <span class=\"hljs-number\">747</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/mrsidtile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
            "isRoot": false,
            "uuid": "043df52e-b091-4319-a832-e83ccc77a13f",
            "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "MrSID MrSID source tests should get all features of the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "mrsid.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "cb81614c-7425-49b1-b95d-a5a1418f8387",
            "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
            "skipped": false
          },
          {
            "title": "should fail to process this source",
            "fullTitle": "MrSID MrSID source tests should fail to process this source",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> fail = <span class=\"hljs-keyword\">new</span> MrSID({<br>  source: failDataSource<br>});<br>fail.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.failure.should.be.true();<br>  done();<br>});",
            "isRoot": false,
            "uuid": "aaef1db5-acc3-4fd2-b312-2d65f30e250c",
            "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/mrsid_test.js",
        "uuid": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
        "fullFile": "/data/git/mapcache-server/test/format/mrsid_test.js",
        "passes": [
          {
            "title": "should process the source",
            "fullTitle": "MrSID MrSID source tests should process the source",
            "timedOut": false,
            "duration": 16,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "mrsid.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'newSource'</span>, newSource);<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'4326'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "654069c7-62d3-4e99-b0d0-3075633f5d24",
            "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
            "skipped": false
          },
          {
            "title": "should not pull the 13/1710/3111 tile for the data source because no data exists there",
            "fullTitle": "MrSID MrSID source tests should not pull the 13/1710/3111 tile for the data source because no data exists there",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(stream);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "50cd07c5-4c26-494b-9d37-c40495a9b623",
            "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
            "skipped": false
          },
          {
            "title": "should pull the 11/572/747 tile for the data source",
            "fullTitle": "MrSID MrSID source tests should pull the 11/572/747 tile for the data source",
            "timedOut": false,
            "duration": 98,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">572</span>, <span class=\"hljs-number\">747</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/mrsidtile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
            "isRoot": false,
            "uuid": "043df52e-b091-4319-a832-e83ccc77a13f",
            "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "MrSID MrSID source tests should get all features of the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "mrsid.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "cb81614c-7425-49b1-b95d-a5a1418f8387",
            "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
            "skipped": false
          },
          {
            "title": "should fail to process this source",
            "fullTitle": "MrSID MrSID source tests should fail to process this source",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> fail = <span class=\"hljs-keyword\">new</span> MrSID({<br>  source: failDataSource<br>});<br>fail.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.failure.should.be.true();<br>  done();<br>});",
            "isRoot": false,
            "uuid": "aaef1db5-acc3-4fd2-b312-2d65f30e250c",
            "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 5,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 116
      },
      "ctx": {
        "_runnable": {
          "title": "\"after all\" hook",
          "async": 0,
          "sync": true,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "type": "hook",
          "parent": {
            "title": "MrSID source tests",
            "suites": [],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "MrSID MrSID source tests should process the source",
                "timedOut": false,
                "duration": 16,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "mrsid.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'newSource'</span>, newSource);<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'4326'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "654069c7-62d3-4e99-b0d0-3075633f5d24",
                "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
                "skipped": false
              },
              {
                "title": "should not pull the 13/1710/3111 tile for the data source because no data exists there",
                "fullTitle": "MrSID MrSID source tests should not pull the 13/1710/3111 tile for the data source because no data exists there",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(stream);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "50cd07c5-4c26-494b-9d37-c40495a9b623",
                "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
                "skipped": false
              },
              {
                "title": "should pull the 11/572/747 tile for the data source",
                "fullTitle": "MrSID MrSID source tests should pull the 11/572/747 tile for the data source",
                "timedOut": false,
                "duration": 98,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">572</span>, <span class=\"hljs-number\">747</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/mrsidtile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
                "isRoot": false,
                "uuid": "043df52e-b091-4319-a832-e83ccc77a13f",
                "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "MrSID MrSID source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "mrsid.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "cb81614c-7425-49b1-b95d-a5a1418f8387",
                "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
                "skipped": false
              },
              {
                "title": "should fail to process this source",
                "fullTitle": "MrSID MrSID source tests should fail to process this source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> fail = <span class=\"hljs-keyword\">new</span> MrSID({<br>  source: failDataSource<br>});<br>fail.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.failure.should.be.true();<br>  done();<br>});",
                "isRoot": false,
                "uuid": "aaef1db5-acc3-4fd2-b312-2d65f30e250c",
                "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/mrsid_test.js",
            "uuid": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
            "fullFile": "/data/git/mapcache-server/test/format/mrsid_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "MrSID MrSID source tests should process the source",
                "timedOut": false,
                "duration": 16,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "mrsid.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'newSource'</span>, newSource);<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'4326'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "654069c7-62d3-4e99-b0d0-3075633f5d24",
                "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
                "skipped": false
              },
              {
                "title": "should not pull the 13/1710/3111 tile for the data source because no data exists there",
                "fullTitle": "MrSID MrSID source tests should not pull the 13/1710/3111 tile for the data source because no data exists there",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(stream);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "50cd07c5-4c26-494b-9d37-c40495a9b623",
                "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
                "skipped": false
              },
              {
                "title": "should pull the 11/572/747 tile for the data source",
                "fullTitle": "MrSID MrSID source tests should pull the 11/572/747 tile for the data source",
                "timedOut": false,
                "duration": 98,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">572</span>, <span class=\"hljs-number\">747</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/mrsidtile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
                "isRoot": false,
                "uuid": "043df52e-b091-4319-a832-e83ccc77a13f",
                "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "MrSID MrSID source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "mrsid.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "cb81614c-7425-49b1-b95d-a5a1418f8387",
                "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
                "skipped": false
              },
              {
                "title": "should fail to process this source",
                "fullTitle": "MrSID MrSID source tests should fail to process this source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> fail = <span class=\"hljs-keyword\">new</span> MrSID({<br>  source: failDataSource<br>});<br>fail.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.failure.should.be.true();<br>  done();<br>});",
                "isRoot": false,
                "uuid": "aaef1db5-acc3-4fd2-b312-2d65f30e250c",
                "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 116
          },
          "ctx": "[Circular ~.allHooks.10.ctx]",
          "_events": {},
          "duration": 0,
          "_error": null
        },
        "test": {
          "title": "\"after all\" hook",
          "async": 0,
          "sync": true,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "type": "hook",
          "parent": {
            "title": "MrSID source tests",
            "suites": [],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "MrSID MrSID source tests should process the source",
                "timedOut": false,
                "duration": 16,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "mrsid.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'newSource'</span>, newSource);<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'4326'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "654069c7-62d3-4e99-b0d0-3075633f5d24",
                "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
                "skipped": false
              },
              {
                "title": "should not pull the 13/1710/3111 tile for the data source because no data exists there",
                "fullTitle": "MrSID MrSID source tests should not pull the 13/1710/3111 tile for the data source because no data exists there",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(stream);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "50cd07c5-4c26-494b-9d37-c40495a9b623",
                "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
                "skipped": false
              },
              {
                "title": "should pull the 11/572/747 tile for the data source",
                "fullTitle": "MrSID MrSID source tests should pull the 11/572/747 tile for the data source",
                "timedOut": false,
                "duration": 98,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">572</span>, <span class=\"hljs-number\">747</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/mrsidtile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
                "isRoot": false,
                "uuid": "043df52e-b091-4319-a832-e83ccc77a13f",
                "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "MrSID MrSID source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "mrsid.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "cb81614c-7425-49b1-b95d-a5a1418f8387",
                "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
                "skipped": false
              },
              {
                "title": "should fail to process this source",
                "fullTitle": "MrSID MrSID source tests should fail to process this source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> fail = <span class=\"hljs-keyword\">new</span> MrSID({<br>  source: failDataSource<br>});<br>fail.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.failure.should.be.true();<br>  done();<br>});",
                "isRoot": false,
                "uuid": "aaef1db5-acc3-4fd2-b312-2d65f30e250c",
                "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/mrsid_test.js",
            "uuid": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
            "fullFile": "/data/git/mapcache-server/test/format/mrsid_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "MrSID MrSID source tests should process the source",
                "timedOut": false,
                "duration": 16,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "mrsid.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'newSource'</span>, newSource);<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'4326'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "654069c7-62d3-4e99-b0d0-3075633f5d24",
                "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
                "skipped": false
              },
              {
                "title": "should not pull the 13/1710/3111 tile for the data source because no data exists there",
                "fullTitle": "MrSID MrSID source tests should not pull the 13/1710/3111 tile for the data source because no data exists there",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(stream);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "50cd07c5-4c26-494b-9d37-c40495a9b623",
                "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
                "skipped": false
              },
              {
                "title": "should pull the 11/572/747 tile for the data source",
                "fullTitle": "MrSID MrSID source tests should pull the 11/572/747 tile for the data source",
                "timedOut": false,
                "duration": 98,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">572</span>, <span class=\"hljs-number\">747</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/mrsidtile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
                "isRoot": false,
                "uuid": "043df52e-b091-4319-a832-e83ccc77a13f",
                "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "MrSID MrSID source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "mrsid.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "cb81614c-7425-49b1-b95d-a5a1418f8387",
                "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
                "skipped": false
              },
              {
                "title": "should fail to process this source",
                "fullTitle": "MrSID MrSID source tests should fail to process this source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> fail = <span class=\"hljs-keyword\">new</span> MrSID({<br>  source: failDataSource<br>});<br>fail.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.failure.should.be.true();<br>  done();<br>});",
                "isRoot": false,
                "uuid": "aaef1db5-acc3-4fd2-b312-2d65f30e250c",
                "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 116
          },
          "ctx": "[Circular ~.allHooks.10.ctx]",
          "_events": {},
          "duration": 0,
          "_error": null
        }
      },
      "_events": {},
      "duration": 0,
      "_error": null
    },
    {
      "title": "\"after all\" hook",
      "async": 0,
      "sync": true,
      "_timeout": 2000,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "MrSID source tests",
        "suites": [],
        "tests": [
          {
            "title": "should process the source",
            "fullTitle": "MrSID MrSID source tests should process the source",
            "timedOut": false,
            "duration": 16,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "mrsid.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'newSource'</span>, newSource);<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'4326'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "654069c7-62d3-4e99-b0d0-3075633f5d24",
            "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
            "skipped": false
          },
          {
            "title": "should not pull the 13/1710/3111 tile for the data source because no data exists there",
            "fullTitle": "MrSID MrSID source tests should not pull the 13/1710/3111 tile for the data source because no data exists there",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(stream);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "50cd07c5-4c26-494b-9d37-c40495a9b623",
            "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
            "skipped": false
          },
          {
            "title": "should pull the 11/572/747 tile for the data source",
            "fullTitle": "MrSID MrSID source tests should pull the 11/572/747 tile for the data source",
            "timedOut": false,
            "duration": 98,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">572</span>, <span class=\"hljs-number\">747</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/mrsidtile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
            "isRoot": false,
            "uuid": "043df52e-b091-4319-a832-e83ccc77a13f",
            "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "MrSID MrSID source tests should get all features of the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "mrsid.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "cb81614c-7425-49b1-b95d-a5a1418f8387",
            "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
            "skipped": false
          },
          {
            "title": "should fail to process this source",
            "fullTitle": "MrSID MrSID source tests should fail to process this source",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> fail = <span class=\"hljs-keyword\">new</span> MrSID({<br>  source: failDataSource<br>});<br>fail.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.failure.should.be.true();<br>  done();<br>});",
            "isRoot": false,
            "uuid": "aaef1db5-acc3-4fd2-b312-2d65f30e250c",
            "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/mrsid_test.js",
        "uuid": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
        "fullFile": "/data/git/mapcache-server/test/format/mrsid_test.js",
        "passes": [
          {
            "title": "should process the source",
            "fullTitle": "MrSID MrSID source tests should process the source",
            "timedOut": false,
            "duration": 16,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "mrsid.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'newSource'</span>, newSource);<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'4326'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "654069c7-62d3-4e99-b0d0-3075633f5d24",
            "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
            "skipped": false
          },
          {
            "title": "should not pull the 13/1710/3111 tile for the data source because no data exists there",
            "fullTitle": "MrSID MrSID source tests should not pull the 13/1710/3111 tile for the data source because no data exists there",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(stream);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "50cd07c5-4c26-494b-9d37-c40495a9b623",
            "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
            "skipped": false
          },
          {
            "title": "should pull the 11/572/747 tile for the data source",
            "fullTitle": "MrSID MrSID source tests should pull the 11/572/747 tile for the data source",
            "timedOut": false,
            "duration": 98,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">572</span>, <span class=\"hljs-number\">747</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/mrsidtile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
            "isRoot": false,
            "uuid": "043df52e-b091-4319-a832-e83ccc77a13f",
            "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "MrSID MrSID source tests should get all features of the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "mrsid.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "cb81614c-7425-49b1-b95d-a5a1418f8387",
            "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
            "skipped": false
          },
          {
            "title": "should fail to process this source",
            "fullTitle": "MrSID MrSID source tests should fail to process this source",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> fail = <span class=\"hljs-keyword\">new</span> MrSID({<br>  source: failDataSource<br>});<br>fail.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.failure.should.be.true();<br>  done();<br>});",
            "isRoot": false,
            "uuid": "aaef1db5-acc3-4fd2-b312-2d65f30e250c",
            "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 5,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 116
      },
      "ctx": {
        "_runnable": "[Circular ~.allHooks.11]",
        "test": "[Circular ~.allHooks.11]"
      },
      "_events": {},
      "duration": 0,
      "_error": null
    },
    {
      "title": "\"before all\" hook",
      "async": 0,
      "sync": true,
      "_timeout": 2000,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "source tests",
        "suites": [],
        "tests": [
          {
            "title": "should process the source",
            "fullTitle": "tms source tests should process the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "tms.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "1018f75d-cc2b-426d-bdbd-a71f07e6250a",
            "parentUUID": "2f56658e-517d-49a5-bdea-2aacc18cd5da",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 tile for the data source",
            "fullTitle": "tms source tests should pull the 0/0/0 tile for the data source",
            "timedOut": false,
            "duration": 105,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "tms.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, tileRequest</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  tileRequest.on(<span class=\"hljs-string\">'response'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">response</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>      response.statusCode.should.equal(<span class=\"hljs-number\">200</span>);<br>      <span class=\"hljs-keyword\">var</span> size = response.headers[<span class=\"hljs-string\">'content-length'</span>];<br>      size.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>      response.headers[<span class=\"hljs-string\">'content-type'</span>].should.equal(<span class=\"hljs-string\">'image/png'</span>);<br>      done();<br>    } <span class=\"hljs-keyword\">catch</span> (e) {<br>      done(e);<br>    }<br>  })<br>  .on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile request error'</span>, err);<br>    done(err);<br>  });<br>});",
            "isRoot": false,
            "uuid": "b0f5e114-e642-410c-88ff-0b42fc897d96",
            "parentUUID": "2f56658e-517d-49a5-bdea-2aacc18cd5da",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/tms_test.js",
        "uuid": "2f56658e-517d-49a5-bdea-2aacc18cd5da",
        "fullFile": "/data/git/mapcache-server/test/format/tms_test.js",
        "passes": [
          {
            "title": "should process the source",
            "fullTitle": "tms source tests should process the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "tms.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "1018f75d-cc2b-426d-bdbd-a71f07e6250a",
            "parentUUID": "2f56658e-517d-49a5-bdea-2aacc18cd5da",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 tile for the data source",
            "fullTitle": "tms source tests should pull the 0/0/0 tile for the data source",
            "timedOut": false,
            "duration": 105,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "tms.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, tileRequest</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  tileRequest.on(<span class=\"hljs-string\">'response'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">response</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>      response.statusCode.should.equal(<span class=\"hljs-number\">200</span>);<br>      <span class=\"hljs-keyword\">var</span> size = response.headers[<span class=\"hljs-string\">'content-length'</span>];<br>      size.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>      response.headers[<span class=\"hljs-string\">'content-type'</span>].should.equal(<span class=\"hljs-string\">'image/png'</span>);<br>      done();<br>    } <span class=\"hljs-keyword\">catch</span> (e) {<br>      done(e);<br>    }<br>  })<br>  .on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile request error'</span>, err);<br>    done(err);<br>  });<br>});",
            "isRoot": false,
            "uuid": "b0f5e114-e642-410c-88ff-0b42fc897d96",
            "parentUUID": "2f56658e-517d-49a5-bdea-2aacc18cd5da",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 2,
        "totalPasses": 2,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 105
      },
      "ctx": {
        "_runnable": {
          "title": "should pull the 0/0/0 tile for the data source",
          "async": 1,
          "sync": false,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "pending": false,
          "type": "test",
          "file": "/data/git/mapcache-server/test/format/tms_test.js",
          "parent": {
            "title": "source tests",
            "suites": [],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "tms source tests should process the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "tms.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "1018f75d-cc2b-426d-bdbd-a71f07e6250a",
                "parentUUID": "2f56658e-517d-49a5-bdea-2aacc18cd5da",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "tms source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 105,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "tms.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, tileRequest</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  tileRequest.on(<span class=\"hljs-string\">'response'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">response</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>      response.statusCode.should.equal(<span class=\"hljs-number\">200</span>);<br>      <span class=\"hljs-keyword\">var</span> size = response.headers[<span class=\"hljs-string\">'content-length'</span>];<br>      size.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>      response.headers[<span class=\"hljs-string\">'content-type'</span>].should.equal(<span class=\"hljs-string\">'image/png'</span>);<br>      done();<br>    } <span class=\"hljs-keyword\">catch</span> (e) {<br>      done(e);<br>    }<br>  })<br>  .on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile request error'</span>, err);<br>    done(err);<br>  });<br>});",
                "isRoot": false,
                "uuid": "b0f5e114-e642-410c-88ff-0b42fc897d96",
                "parentUUID": "2f56658e-517d-49a5-bdea-2aacc18cd5da",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/tms_test.js",
            "uuid": "2f56658e-517d-49a5-bdea-2aacc18cd5da",
            "fullFile": "/data/git/mapcache-server/test/format/tms_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "tms source tests should process the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "tms.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "1018f75d-cc2b-426d-bdbd-a71f07e6250a",
                "parentUUID": "2f56658e-517d-49a5-bdea-2aacc18cd5da",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "tms source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 105,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "tms.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, tileRequest</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  tileRequest.on(<span class=\"hljs-string\">'response'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">response</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>      response.statusCode.should.equal(<span class=\"hljs-number\">200</span>);<br>      <span class=\"hljs-keyword\">var</span> size = response.headers[<span class=\"hljs-string\">'content-length'</span>];<br>      size.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>      response.headers[<span class=\"hljs-string\">'content-type'</span>].should.equal(<span class=\"hljs-string\">'image/png'</span>);<br>      done();<br>    } <span class=\"hljs-keyword\">catch</span> (e) {<br>      done(e);<br>    }<br>  })<br>  .on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile request error'</span>, err);<br>    done(err);<br>  });<br>});",
                "isRoot": false,
                "uuid": "b0f5e114-e642-410c-88ff-0b42fc897d96",
                "parentUUID": "2f56658e-517d-49a5-bdea-2aacc18cd5da",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 105
          },
          "ctx": "[Circular ~.allHooks.12.ctx]",
          "_events": {},
          "duration": 105,
          "state": "passed",
          "speed": "fast"
        },
        "test": {
          "title": "should pull the 0/0/0 tile for the data source",
          "async": 1,
          "sync": false,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "pending": false,
          "type": "test",
          "file": "/data/git/mapcache-server/test/format/tms_test.js",
          "parent": {
            "title": "source tests",
            "suites": [],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "tms source tests should process the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "tms.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "1018f75d-cc2b-426d-bdbd-a71f07e6250a",
                "parentUUID": "2f56658e-517d-49a5-bdea-2aacc18cd5da",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "tms source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 105,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "tms.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, tileRequest</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  tileRequest.on(<span class=\"hljs-string\">'response'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">response</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>      response.statusCode.should.equal(<span class=\"hljs-number\">200</span>);<br>      <span class=\"hljs-keyword\">var</span> size = response.headers[<span class=\"hljs-string\">'content-length'</span>];<br>      size.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>      response.headers[<span class=\"hljs-string\">'content-type'</span>].should.equal(<span class=\"hljs-string\">'image/png'</span>);<br>      done();<br>    } <span class=\"hljs-keyword\">catch</span> (e) {<br>      done(e);<br>    }<br>  })<br>  .on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile request error'</span>, err);<br>    done(err);<br>  });<br>});",
                "isRoot": false,
                "uuid": "b0f5e114-e642-410c-88ff-0b42fc897d96",
                "parentUUID": "2f56658e-517d-49a5-bdea-2aacc18cd5da",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/tms_test.js",
            "uuid": "2f56658e-517d-49a5-bdea-2aacc18cd5da",
            "fullFile": "/data/git/mapcache-server/test/format/tms_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "tms source tests should process the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "tms.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "1018f75d-cc2b-426d-bdbd-a71f07e6250a",
                "parentUUID": "2f56658e-517d-49a5-bdea-2aacc18cd5da",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "tms source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 105,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "tms.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, tileRequest</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  tileRequest.on(<span class=\"hljs-string\">'response'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">response</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>      response.statusCode.should.equal(<span class=\"hljs-number\">200</span>);<br>      <span class=\"hljs-keyword\">var</span> size = response.headers[<span class=\"hljs-string\">'content-length'</span>];<br>      size.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>      response.headers[<span class=\"hljs-string\">'content-type'</span>].should.equal(<span class=\"hljs-string\">'image/png'</span>);<br>      done();<br>    } <span class=\"hljs-keyword\">catch</span> (e) {<br>      done(e);<br>    }<br>  })<br>  .on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile request error'</span>, err);<br>    done(err);<br>  });<br>});",
                "isRoot": false,
                "uuid": "b0f5e114-e642-410c-88ff-0b42fc897d96",
                "parentUUID": "2f56658e-517d-49a5-bdea-2aacc18cd5da",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 105
          },
          "ctx": "[Circular ~.allHooks.12.ctx]",
          "_events": {},
          "duration": 105,
          "state": "passed",
          "speed": "fast"
        }
      },
      "_events": {},
      "duration": 1,
      "_error": null
    },
    {
      "title": "\"before all\" hook",
      "async": 0,
      "sync": true,
      "_timeout": 2000,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "cache tests",
        "suites": [],
        "tests": [
          {
            "title": "should pull the 0/0/0 tile for the cache",
            "fullTitle": "tms cache tests should pull the 0/0/0 tile for the cache",
            "timedOut": false,
            "duration": 232,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "tms.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "b0b624b1-300c-4e4d-ba30-bbf8f4ab2694",
            "parentUUID": "3dc88bca-3ece-43c7-8a3e-73b829c156e6",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/tms_test.js",
        "uuid": "3dc88bca-3ece-43c7-8a3e-73b829c156e6",
        "fullFile": "/data/git/mapcache-server/test/format/tms_test.js",
        "passes": [
          {
            "title": "should pull the 0/0/0 tile for the cache",
            "fullTitle": "tms cache tests should pull the 0/0/0 tile for the cache",
            "timedOut": false,
            "duration": 232,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "tms.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "b0b624b1-300c-4e4d-ba30-bbf8f4ab2694",
            "parentUUID": "3dc88bca-3ece-43c7-8a3e-73b829c156e6",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 232
      },
      "ctx": {
        "_runnable": {
          "title": "should pull the 0/0/0 tile for the cache",
          "async": 1,
          "sync": false,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "pending": false,
          "type": "test",
          "file": "/data/git/mapcache-server/test/format/tms_test.js",
          "parent": {
            "title": "cache tests",
            "suites": [],
            "tests": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "tms cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 232,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "tms.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "b0b624b1-300c-4e4d-ba30-bbf8f4ab2694",
                "parentUUID": "3dc88bca-3ece-43c7-8a3e-73b829c156e6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/tms_test.js",
            "uuid": "3dc88bca-3ece-43c7-8a3e-73b829c156e6",
            "fullFile": "/data/git/mapcache-server/test/format/tms_test.js",
            "passes": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "tms cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 232,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "tms.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "b0b624b1-300c-4e4d-ba30-bbf8f4ab2694",
                "parentUUID": "3dc88bca-3ece-43c7-8a3e-73b829c156e6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 232
          },
          "ctx": "[Circular ~.allHooks.13.ctx]",
          "_events": {},
          "duration": 232,
          "state": "passed",
          "speed": "fast"
        },
        "test": {
          "title": "should pull the 0/0/0 tile for the cache",
          "async": 1,
          "sync": false,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "pending": false,
          "type": "test",
          "file": "/data/git/mapcache-server/test/format/tms_test.js",
          "parent": {
            "title": "cache tests",
            "suites": [],
            "tests": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "tms cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 232,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "tms.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "b0b624b1-300c-4e4d-ba30-bbf8f4ab2694",
                "parentUUID": "3dc88bca-3ece-43c7-8a3e-73b829c156e6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/tms_test.js",
            "uuid": "3dc88bca-3ece-43c7-8a3e-73b829c156e6",
            "fullFile": "/data/git/mapcache-server/test/format/tms_test.js",
            "passes": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "tms cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 232,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "tms.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "b0b624b1-300c-4e4d-ba30-bbf8f4ab2694",
                "parentUUID": "3dc88bca-3ece-43c7-8a3e-73b829c156e6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 232
          },
          "ctx": "[Circular ~.allHooks.13.ctx]",
          "_events": {},
          "duration": 232,
          "state": "passed",
          "speed": "fast"
        }
      },
      "_events": {},
      "duration": 0,
      "_error": null
    },
    {
      "title": "\"before all\" hook",
      "async": 0,
      "sync": true,
      "_timeout": 2000,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "wms source tests",
        "suites": [],
        "tests": [
          {
            "title": "should process the source",
            "fullTitle": "WMS wms source tests should process the source",
            "timedOut": false,
            "duration": 549,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "wms.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-comment\">// console.log('after the source has been processed', JSON.stringify(newSource, null, 2));</span><br>  should.exist(newSource.wmsGetCapabilities);<br>  <span class=\"hljs-comment\">// console.log('layer', JSON.stringify(newSource.wmsGetCapabilities.Capability.Layer, null, 2));</span><br>  wms.setSourceLayer(newSource.wmsGetCapabilities.Capability.Layer.Layer[<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, source</span>) </span>{<br>    map.dataSources.push(source);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "7db58231-2554-4926-8753-f6330ae84de6",
            "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 tile for the data source",
            "fullTitle": "WMS wms source tests should pull the 0/0/0 tile for the data source",
            "timedOut": false,
            "duration": 199,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "wms.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    done();<br>    <span class=\"hljs-comment\">// var imageDiff = require('image-diff');</span><br>    <span class=\"hljs-comment\">// imageDiff({</span><br>    <span class=\"hljs-comment\">//   actualImage: tmpImage,</span><br>    <span class=\"hljs-comment\">//   expectedImage: __dirname + '/geotifftile.png',</span><br>    <span class=\"hljs-comment\">//   diffImage: '/tmp/difference.png',</span><br>    <span class=\"hljs-comment\">// }, function (err, imagesAreSame) {</span><br>    <span class=\"hljs-comment\">//   should.not.exist(err);</span><br>    <span class=\"hljs-comment\">//   imagesAreSame.should.be.true();</span><br>    <span class=\"hljs-comment\">//   done();</span><br>    <span class=\"hljs-comment\">// });</span><br>  });<br>});",
            "isRoot": false,
            "uuid": "4e90eec7-02a3-4e4b-b255-49046bdac8f0",
            "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 geojson tile for the data source",
            "fullTitle": "WMS wms source tests should pull the 0/0/0 geojson tile for the data source",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>wms.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "d047dbfb-883c-4889-b7b8-b46b5dfc42c2",
            "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "WMS wms source tests should get all features of the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>wms.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "fbe685e5-e6da-4d5e-9cb5-a032d5c30b2e",
            "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/wms_test.js",
        "uuid": "ee8a901d-36b2-4d82-9d78-e61918c30693",
        "fullFile": "/data/git/mapcache-server/test/format/wms_test.js",
        "passes": [
          {
            "title": "should process the source",
            "fullTitle": "WMS wms source tests should process the source",
            "timedOut": false,
            "duration": 549,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "wms.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-comment\">// console.log('after the source has been processed', JSON.stringify(newSource, null, 2));</span><br>  should.exist(newSource.wmsGetCapabilities);<br>  <span class=\"hljs-comment\">// console.log('layer', JSON.stringify(newSource.wmsGetCapabilities.Capability.Layer, null, 2));</span><br>  wms.setSourceLayer(newSource.wmsGetCapabilities.Capability.Layer.Layer[<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, source</span>) </span>{<br>    map.dataSources.push(source);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "7db58231-2554-4926-8753-f6330ae84de6",
            "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 tile for the data source",
            "fullTitle": "WMS wms source tests should pull the 0/0/0 tile for the data source",
            "timedOut": false,
            "duration": 199,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "wms.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    done();<br>    <span class=\"hljs-comment\">// var imageDiff = require('image-diff');</span><br>    <span class=\"hljs-comment\">// imageDiff({</span><br>    <span class=\"hljs-comment\">//   actualImage: tmpImage,</span><br>    <span class=\"hljs-comment\">//   expectedImage: __dirname + '/geotifftile.png',</span><br>    <span class=\"hljs-comment\">//   diffImage: '/tmp/difference.png',</span><br>    <span class=\"hljs-comment\">// }, function (err, imagesAreSame) {</span><br>    <span class=\"hljs-comment\">//   should.not.exist(err);</span><br>    <span class=\"hljs-comment\">//   imagesAreSame.should.be.true();</span><br>    <span class=\"hljs-comment\">//   done();</span><br>    <span class=\"hljs-comment\">// });</span><br>  });<br>});",
            "isRoot": false,
            "uuid": "4e90eec7-02a3-4e4b-b255-49046bdac8f0",
            "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 geojson tile for the data source",
            "fullTitle": "WMS wms source tests should pull the 0/0/0 geojson tile for the data source",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>wms.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "d047dbfb-883c-4889-b7b8-b46b5dfc42c2",
            "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "WMS wms source tests should get all features of the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>wms.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "fbe685e5-e6da-4d5e-9cb5-a032d5c30b2e",
            "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 4,
        "totalPasses": 4,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 749
      },
      "ctx": {
        "_runnable": {
          "title": "\"after all\" hook",
          "async": 0,
          "sync": true,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "type": "hook",
          "parent": {
            "title": "wms source tests",
            "suites": [],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "WMS wms source tests should process the source",
                "timedOut": false,
                "duration": 549,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "wms.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-comment\">// console.log('after the source has been processed', JSON.stringify(newSource, null, 2));</span><br>  should.exist(newSource.wmsGetCapabilities);<br>  <span class=\"hljs-comment\">// console.log('layer', JSON.stringify(newSource.wmsGetCapabilities.Capability.Layer, null, 2));</span><br>  wms.setSourceLayer(newSource.wmsGetCapabilities.Capability.Layer.Layer[<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, source</span>) </span>{<br>    map.dataSources.push(source);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "7db58231-2554-4926-8753-f6330ae84de6",
                "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "WMS wms source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 199,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "wms.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    done();<br>    <span class=\"hljs-comment\">// var imageDiff = require('image-diff');</span><br>    <span class=\"hljs-comment\">// imageDiff({</span><br>    <span class=\"hljs-comment\">//   actualImage: tmpImage,</span><br>    <span class=\"hljs-comment\">//   expectedImage: __dirname + '/geotifftile.png',</span><br>    <span class=\"hljs-comment\">//   diffImage: '/tmp/difference.png',</span><br>    <span class=\"hljs-comment\">// }, function (err, imagesAreSame) {</span><br>    <span class=\"hljs-comment\">//   should.not.exist(err);</span><br>    <span class=\"hljs-comment\">//   imagesAreSame.should.be.true();</span><br>    <span class=\"hljs-comment\">//   done();</span><br>    <span class=\"hljs-comment\">// });</span><br>  });<br>});",
                "isRoot": false,
                "uuid": "4e90eec7-02a3-4e4b-b255-49046bdac8f0",
                "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the data source",
                "fullTitle": "WMS wms source tests should pull the 0/0/0 geojson tile for the data source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>wms.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "d047dbfb-883c-4889-b7b8-b46b5dfc42c2",
                "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "WMS wms source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>wms.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "fbe685e5-e6da-4d5e-9cb5-a032d5c30b2e",
                "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/wms_test.js",
            "uuid": "ee8a901d-36b2-4d82-9d78-e61918c30693",
            "fullFile": "/data/git/mapcache-server/test/format/wms_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "WMS wms source tests should process the source",
                "timedOut": false,
                "duration": 549,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "wms.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-comment\">// console.log('after the source has been processed', JSON.stringify(newSource, null, 2));</span><br>  should.exist(newSource.wmsGetCapabilities);<br>  <span class=\"hljs-comment\">// console.log('layer', JSON.stringify(newSource.wmsGetCapabilities.Capability.Layer, null, 2));</span><br>  wms.setSourceLayer(newSource.wmsGetCapabilities.Capability.Layer.Layer[<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, source</span>) </span>{<br>    map.dataSources.push(source);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "7db58231-2554-4926-8753-f6330ae84de6",
                "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "WMS wms source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 199,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "wms.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    done();<br>    <span class=\"hljs-comment\">// var imageDiff = require('image-diff');</span><br>    <span class=\"hljs-comment\">// imageDiff({</span><br>    <span class=\"hljs-comment\">//   actualImage: tmpImage,</span><br>    <span class=\"hljs-comment\">//   expectedImage: __dirname + '/geotifftile.png',</span><br>    <span class=\"hljs-comment\">//   diffImage: '/tmp/difference.png',</span><br>    <span class=\"hljs-comment\">// }, function (err, imagesAreSame) {</span><br>    <span class=\"hljs-comment\">//   should.not.exist(err);</span><br>    <span class=\"hljs-comment\">//   imagesAreSame.should.be.true();</span><br>    <span class=\"hljs-comment\">//   done();</span><br>    <span class=\"hljs-comment\">// });</span><br>  });<br>});",
                "isRoot": false,
                "uuid": "4e90eec7-02a3-4e4b-b255-49046bdac8f0",
                "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the data source",
                "fullTitle": "WMS wms source tests should pull the 0/0/0 geojson tile for the data source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>wms.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "d047dbfb-883c-4889-b7b8-b46b5dfc42c2",
                "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "WMS wms source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>wms.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "fbe685e5-e6da-4d5e-9cb5-a032d5c30b2e",
                "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 749
          },
          "ctx": "[Circular ~.allHooks.14.ctx]",
          "_events": {},
          "duration": 1,
          "_error": null
        },
        "test": {
          "title": "\"after all\" hook",
          "async": 0,
          "sync": true,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "type": "hook",
          "parent": {
            "title": "wms source tests",
            "suites": [],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "WMS wms source tests should process the source",
                "timedOut": false,
                "duration": 549,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "wms.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-comment\">// console.log('after the source has been processed', JSON.stringify(newSource, null, 2));</span><br>  should.exist(newSource.wmsGetCapabilities);<br>  <span class=\"hljs-comment\">// console.log('layer', JSON.stringify(newSource.wmsGetCapabilities.Capability.Layer, null, 2));</span><br>  wms.setSourceLayer(newSource.wmsGetCapabilities.Capability.Layer.Layer[<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, source</span>) </span>{<br>    map.dataSources.push(source);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "7db58231-2554-4926-8753-f6330ae84de6",
                "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "WMS wms source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 199,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "wms.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    done();<br>    <span class=\"hljs-comment\">// var imageDiff = require('image-diff');</span><br>    <span class=\"hljs-comment\">// imageDiff({</span><br>    <span class=\"hljs-comment\">//   actualImage: tmpImage,</span><br>    <span class=\"hljs-comment\">//   expectedImage: __dirname + '/geotifftile.png',</span><br>    <span class=\"hljs-comment\">//   diffImage: '/tmp/difference.png',</span><br>    <span class=\"hljs-comment\">// }, function (err, imagesAreSame) {</span><br>    <span class=\"hljs-comment\">//   should.not.exist(err);</span><br>    <span class=\"hljs-comment\">//   imagesAreSame.should.be.true();</span><br>    <span class=\"hljs-comment\">//   done();</span><br>    <span class=\"hljs-comment\">// });</span><br>  });<br>});",
                "isRoot": false,
                "uuid": "4e90eec7-02a3-4e4b-b255-49046bdac8f0",
                "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the data source",
                "fullTitle": "WMS wms source tests should pull the 0/0/0 geojson tile for the data source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>wms.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "d047dbfb-883c-4889-b7b8-b46b5dfc42c2",
                "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "WMS wms source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>wms.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "fbe685e5-e6da-4d5e-9cb5-a032d5c30b2e",
                "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/wms_test.js",
            "uuid": "ee8a901d-36b2-4d82-9d78-e61918c30693",
            "fullFile": "/data/git/mapcache-server/test/format/wms_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "WMS wms source tests should process the source",
                "timedOut": false,
                "duration": 549,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "wms.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-comment\">// console.log('after the source has been processed', JSON.stringify(newSource, null, 2));</span><br>  should.exist(newSource.wmsGetCapabilities);<br>  <span class=\"hljs-comment\">// console.log('layer', JSON.stringify(newSource.wmsGetCapabilities.Capability.Layer, null, 2));</span><br>  wms.setSourceLayer(newSource.wmsGetCapabilities.Capability.Layer.Layer[<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, source</span>) </span>{<br>    map.dataSources.push(source);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
                "isRoot": false,
                "uuid": "7db58231-2554-4926-8753-f6330ae84de6",
                "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "WMS wms source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 199,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "wms.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    done();<br>    <span class=\"hljs-comment\">// var imageDiff = require('image-diff');</span><br>    <span class=\"hljs-comment\">// imageDiff({</span><br>    <span class=\"hljs-comment\">//   actualImage: tmpImage,</span><br>    <span class=\"hljs-comment\">//   expectedImage: __dirname + '/geotifftile.png',</span><br>    <span class=\"hljs-comment\">//   diffImage: '/tmp/difference.png',</span><br>    <span class=\"hljs-comment\">// }, function (err, imagesAreSame) {</span><br>    <span class=\"hljs-comment\">//   should.not.exist(err);</span><br>    <span class=\"hljs-comment\">//   imagesAreSame.should.be.true();</span><br>    <span class=\"hljs-comment\">//   done();</span><br>    <span class=\"hljs-comment\">// });</span><br>  });<br>});",
                "isRoot": false,
                "uuid": "4e90eec7-02a3-4e4b-b255-49046bdac8f0",
                "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 geojson tile for the data source",
                "fullTitle": "WMS wms source tests should pull the 0/0/0 geojson tile for the data source",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>wms.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "d047dbfb-883c-4889-b7b8-b46b5dfc42c2",
                "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
                "skipped": false
              },
              {
                "title": "should get all features of the source",
                "fullTitle": "WMS wms source tests should get all features of the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>wms.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
                "isRoot": false,
                "uuid": "fbe685e5-e6da-4d5e-9cb5-a032d5c30b2e",
                "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 749
          },
          "ctx": "[Circular ~.allHooks.14.ctx]",
          "_events": {},
          "duration": 1,
          "_error": null
        }
      },
      "_events": {},
      "duration": 0,
      "_error": null
    },
    {
      "title": "\"after all\" hook",
      "async": 0,
      "sync": true,
      "_timeout": 2000,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "wms source tests",
        "suites": [],
        "tests": [
          {
            "title": "should process the source",
            "fullTitle": "WMS wms source tests should process the source",
            "timedOut": false,
            "duration": 549,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "wms.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-comment\">// console.log('after the source has been processed', JSON.stringify(newSource, null, 2));</span><br>  should.exist(newSource.wmsGetCapabilities);<br>  <span class=\"hljs-comment\">// console.log('layer', JSON.stringify(newSource.wmsGetCapabilities.Capability.Layer, null, 2));</span><br>  wms.setSourceLayer(newSource.wmsGetCapabilities.Capability.Layer.Layer[<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, source</span>) </span>{<br>    map.dataSources.push(source);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "7db58231-2554-4926-8753-f6330ae84de6",
            "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 tile for the data source",
            "fullTitle": "WMS wms source tests should pull the 0/0/0 tile for the data source",
            "timedOut": false,
            "duration": 199,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "wms.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    done();<br>    <span class=\"hljs-comment\">// var imageDiff = require('image-diff');</span><br>    <span class=\"hljs-comment\">// imageDiff({</span><br>    <span class=\"hljs-comment\">//   actualImage: tmpImage,</span><br>    <span class=\"hljs-comment\">//   expectedImage: __dirname + '/geotifftile.png',</span><br>    <span class=\"hljs-comment\">//   diffImage: '/tmp/difference.png',</span><br>    <span class=\"hljs-comment\">// }, function (err, imagesAreSame) {</span><br>    <span class=\"hljs-comment\">//   should.not.exist(err);</span><br>    <span class=\"hljs-comment\">//   imagesAreSame.should.be.true();</span><br>    <span class=\"hljs-comment\">//   done();</span><br>    <span class=\"hljs-comment\">// });</span><br>  });<br>});",
            "isRoot": false,
            "uuid": "4e90eec7-02a3-4e4b-b255-49046bdac8f0",
            "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 geojson tile for the data source",
            "fullTitle": "WMS wms source tests should pull the 0/0/0 geojson tile for the data source",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>wms.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "d047dbfb-883c-4889-b7b8-b46b5dfc42c2",
            "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "WMS wms source tests should get all features of the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>wms.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "fbe685e5-e6da-4d5e-9cb5-a032d5c30b2e",
            "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/wms_test.js",
        "uuid": "ee8a901d-36b2-4d82-9d78-e61918c30693",
        "fullFile": "/data/git/mapcache-server/test/format/wms_test.js",
        "passes": [
          {
            "title": "should process the source",
            "fullTitle": "WMS wms source tests should process the source",
            "timedOut": false,
            "duration": 549,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "wms.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-comment\">// console.log('after the source has been processed', JSON.stringify(newSource, null, 2));</span><br>  should.exist(newSource.wmsGetCapabilities);<br>  <span class=\"hljs-comment\">// console.log('layer', JSON.stringify(newSource.wmsGetCapabilities.Capability.Layer, null, 2));</span><br>  wms.setSourceLayer(newSource.wmsGetCapabilities.Capability.Layer.Layer[<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, source</span>) </span>{<br>    map.dataSources.push(source);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
            "isRoot": false,
            "uuid": "7db58231-2554-4926-8753-f6330ae84de6",
            "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 tile for the data source",
            "fullTitle": "WMS wms source tests should pull the 0/0/0 tile for the data source",
            "timedOut": false,
            "duration": 199,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "wms.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    done();<br>    <span class=\"hljs-comment\">// var imageDiff = require('image-diff');</span><br>    <span class=\"hljs-comment\">// imageDiff({</span><br>    <span class=\"hljs-comment\">//   actualImage: tmpImage,</span><br>    <span class=\"hljs-comment\">//   expectedImage: __dirname + '/geotifftile.png',</span><br>    <span class=\"hljs-comment\">//   diffImage: '/tmp/difference.png',</span><br>    <span class=\"hljs-comment\">// }, function (err, imagesAreSame) {</span><br>    <span class=\"hljs-comment\">//   should.not.exist(err);</span><br>    <span class=\"hljs-comment\">//   imagesAreSame.should.be.true();</span><br>    <span class=\"hljs-comment\">//   done();</span><br>    <span class=\"hljs-comment\">// });</span><br>  });<br>});",
            "isRoot": false,
            "uuid": "4e90eec7-02a3-4e4b-b255-49046bdac8f0",
            "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 geojson tile for the data source",
            "fullTitle": "WMS wms source tests should pull the 0/0/0 geojson tile for the data source",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>wms.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "d047dbfb-883c-4889-b7b8-b46b5dfc42c2",
            "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
            "skipped": false
          },
          {
            "title": "should get all features of the source",
            "fullTitle": "WMS wms source tests should get all features of the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>wms.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
            "isRoot": false,
            "uuid": "fbe685e5-e6da-4d5e-9cb5-a032d5c30b2e",
            "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 4,
        "totalPasses": 4,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 749
      },
      "ctx": {
        "_runnable": "[Circular ~.allHooks.15]",
        "test": "[Circular ~.allHooks.15]"
      },
      "_events": {},
      "duration": 1,
      "_error": null
    },
    {
      "title": "\"before all\" hook",
      "async": 0,
      "sync": true,
      "_timeout": 2000,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "source tests",
        "suites": [],
        "tests": [
          {
            "title": "should process the source",
            "fullTitle": "xyz source tests should process the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "xyz.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "ab504760-5b5f-457a-bcee-957519980332",
            "parentUUID": "66cb5a5e-ea2e-453f-ad0d-5cc44f3a6d2c",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 tile for the data source",
            "fullTitle": "xyz source tests should pull the 0/0/0 tile for the data source",
            "timedOut": false,
            "duration": 103,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, tileRequest</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  tileRequest.on(<span class=\"hljs-string\">'response'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">response</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>      response.statusCode.should.equal(<span class=\"hljs-number\">200</span>);<br>      <span class=\"hljs-keyword\">var</span> size = response.headers[<span class=\"hljs-string\">'content-length'</span>];<br>      size.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>      response.headers[<span class=\"hljs-string\">'content-type'</span>].should.equal(<span class=\"hljs-string\">'image/png'</span>);<br>      done();<br>    } <span class=\"hljs-keyword\">catch</span> (e) {<br>      done(e);<br>    }<br>  })<br>  .on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile request error'</span>, err);<br>    done(err);<br>  });<br>});",
            "isRoot": false,
            "uuid": "e4b11415-3ed6-4384-83c8-e0441112033f",
            "parentUUID": "66cb5a5e-ea2e-453f-ad0d-5cc44f3a6d2c",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/xyz_test.js",
        "uuid": "66cb5a5e-ea2e-453f-ad0d-5cc44f3a6d2c",
        "fullFile": "/data/git/mapcache-server/test/format/xyz_test.js",
        "passes": [
          {
            "title": "should process the source",
            "fullTitle": "xyz source tests should process the source",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "xyz.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  done();<br>});",
            "isRoot": false,
            "uuid": "ab504760-5b5f-457a-bcee-957519980332",
            "parentUUID": "66cb5a5e-ea2e-453f-ad0d-5cc44f3a6d2c",
            "skipped": false
          },
          {
            "title": "should pull the 0/0/0 tile for the data source",
            "fullTitle": "xyz source tests should pull the 0/0/0 tile for the data source",
            "timedOut": false,
            "duration": 103,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, tileRequest</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  tileRequest.on(<span class=\"hljs-string\">'response'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">response</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>      response.statusCode.should.equal(<span class=\"hljs-number\">200</span>);<br>      <span class=\"hljs-keyword\">var</span> size = response.headers[<span class=\"hljs-string\">'content-length'</span>];<br>      size.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>      response.headers[<span class=\"hljs-string\">'content-type'</span>].should.equal(<span class=\"hljs-string\">'image/png'</span>);<br>      done();<br>    } <span class=\"hljs-keyword\">catch</span> (e) {<br>      done(e);<br>    }<br>  })<br>  .on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile request error'</span>, err);<br>    done(err);<br>  });<br>});",
            "isRoot": false,
            "uuid": "e4b11415-3ed6-4384-83c8-e0441112033f",
            "parentUUID": "66cb5a5e-ea2e-453f-ad0d-5cc44f3a6d2c",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 2,
        "totalPasses": 2,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 103
      },
      "ctx": {
        "_runnable": {
          "title": "should pull the 0/0/0 tile for the data source",
          "async": 1,
          "sync": false,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "pending": false,
          "type": "test",
          "file": "/data/git/mapcache-server/test/format/xyz_test.js",
          "parent": {
            "title": "source tests",
            "suites": [],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "xyz source tests should process the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "ab504760-5b5f-457a-bcee-957519980332",
                "parentUUID": "66cb5a5e-ea2e-453f-ad0d-5cc44f3a6d2c",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "xyz source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 103,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, tileRequest</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  tileRequest.on(<span class=\"hljs-string\">'response'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">response</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>      response.statusCode.should.equal(<span class=\"hljs-number\">200</span>);<br>      <span class=\"hljs-keyword\">var</span> size = response.headers[<span class=\"hljs-string\">'content-length'</span>];<br>      size.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>      response.headers[<span class=\"hljs-string\">'content-type'</span>].should.equal(<span class=\"hljs-string\">'image/png'</span>);<br>      done();<br>    } <span class=\"hljs-keyword\">catch</span> (e) {<br>      done(e);<br>    }<br>  })<br>  .on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile request error'</span>, err);<br>    done(err);<br>  });<br>});",
                "isRoot": false,
                "uuid": "e4b11415-3ed6-4384-83c8-e0441112033f",
                "parentUUID": "66cb5a5e-ea2e-453f-ad0d-5cc44f3a6d2c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/xyz_test.js",
            "uuid": "66cb5a5e-ea2e-453f-ad0d-5cc44f3a6d2c",
            "fullFile": "/data/git/mapcache-server/test/format/xyz_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "xyz source tests should process the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "ab504760-5b5f-457a-bcee-957519980332",
                "parentUUID": "66cb5a5e-ea2e-453f-ad0d-5cc44f3a6d2c",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "xyz source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 103,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, tileRequest</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  tileRequest.on(<span class=\"hljs-string\">'response'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">response</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>      response.statusCode.should.equal(<span class=\"hljs-number\">200</span>);<br>      <span class=\"hljs-keyword\">var</span> size = response.headers[<span class=\"hljs-string\">'content-length'</span>];<br>      size.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>      response.headers[<span class=\"hljs-string\">'content-type'</span>].should.equal(<span class=\"hljs-string\">'image/png'</span>);<br>      done();<br>    } <span class=\"hljs-keyword\">catch</span> (e) {<br>      done(e);<br>    }<br>  })<br>  .on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile request error'</span>, err);<br>    done(err);<br>  });<br>});",
                "isRoot": false,
                "uuid": "e4b11415-3ed6-4384-83c8-e0441112033f",
                "parentUUID": "66cb5a5e-ea2e-453f-ad0d-5cc44f3a6d2c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 103
          },
          "ctx": "[Circular ~.allHooks.16.ctx]",
          "_events": {},
          "duration": 103,
          "state": "passed",
          "speed": "fast"
        },
        "test": {
          "title": "should pull the 0/0/0 tile for the data source",
          "async": 1,
          "sync": false,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "pending": false,
          "type": "test",
          "file": "/data/git/mapcache-server/test/format/xyz_test.js",
          "parent": {
            "title": "source tests",
            "suites": [],
            "tests": [
              {
                "title": "should process the source",
                "fullTitle": "xyz source tests should process the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "ab504760-5b5f-457a-bcee-957519980332",
                "parentUUID": "66cb5a5e-ea2e-453f-ad0d-5cc44f3a6d2c",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "xyz source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 103,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, tileRequest</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  tileRequest.on(<span class=\"hljs-string\">'response'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">response</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>      response.statusCode.should.equal(<span class=\"hljs-number\">200</span>);<br>      <span class=\"hljs-keyword\">var</span> size = response.headers[<span class=\"hljs-string\">'content-length'</span>];<br>      size.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>      response.headers[<span class=\"hljs-string\">'content-type'</span>].should.equal(<span class=\"hljs-string\">'image/png'</span>);<br>      done();<br>    } <span class=\"hljs-keyword\">catch</span> (e) {<br>      done(e);<br>    }<br>  })<br>  .on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile request error'</span>, err);<br>    done(err);<br>  });<br>});",
                "isRoot": false,
                "uuid": "e4b11415-3ed6-4384-83c8-e0441112033f",
                "parentUUID": "66cb5a5e-ea2e-453f-ad0d-5cc44f3a6d2c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/xyz_test.js",
            "uuid": "66cb5a5e-ea2e-453f-ad0d-5cc44f3a6d2c",
            "fullFile": "/data/git/mapcache-server/test/format/xyz_test.js",
            "passes": [
              {
                "title": "should process the source",
                "fullTitle": "xyz source tests should process the source",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  done();<br>});",
                "isRoot": false,
                "uuid": "ab504760-5b5f-457a-bcee-957519980332",
                "parentUUID": "66cb5a5e-ea2e-453f-ad0d-5cc44f3a6d2c",
                "skipped": false
              },
              {
                "title": "should pull the 0/0/0 tile for the data source",
                "fullTitle": "xyz source tests should pull the 0/0/0 tile for the data source",
                "timedOut": false,
                "duration": 103,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, tileRequest</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  tileRequest.on(<span class=\"hljs-string\">'response'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">response</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>      response.statusCode.should.equal(<span class=\"hljs-number\">200</span>);<br>      <span class=\"hljs-keyword\">var</span> size = response.headers[<span class=\"hljs-string\">'content-length'</span>];<br>      size.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>      response.headers[<span class=\"hljs-string\">'content-type'</span>].should.equal(<span class=\"hljs-string\">'image/png'</span>);<br>      done();<br>    } <span class=\"hljs-keyword\">catch</span> (e) {<br>      done(e);<br>    }<br>  })<br>  .on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile request error'</span>, err);<br>    done(err);<br>  });<br>});",
                "isRoot": false,
                "uuid": "e4b11415-3ed6-4384-83c8-e0441112033f",
                "parentUUID": "66cb5a5e-ea2e-453f-ad0d-5cc44f3a6d2c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 103
          },
          "ctx": "[Circular ~.allHooks.16.ctx]",
          "_events": {},
          "duration": 103,
          "state": "passed",
          "speed": "fast"
        }
      },
      "_events": {},
      "duration": 0,
      "_error": null
    },
    {
      "title": "\"before all\" hook",
      "async": 0,
      "sync": true,
      "_timeout": 2000,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "cache tests",
        "suites": [],
        "tests": [
          {
            "title": "should pull the 0/0/0 tile for the cache",
            "fullTitle": "xyz cache tests should pull the 0/0/0 tile for the cache",
            "timedOut": false,
            "duration": 241,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "82823631-74f6-47e2-93d3-ec81afdab172",
            "parentUUID": "361407dd-8d20-4a60-9d60-be3f513630f7",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/format/xyz_test.js",
        "uuid": "361407dd-8d20-4a60-9d60-be3f513630f7",
        "fullFile": "/data/git/mapcache-server/test/format/xyz_test.js",
        "passes": [
          {
            "title": "should pull the 0/0/0 tile for the cache",
            "fullTitle": "xyz cache tests should pull the 0/0/0 tile for the cache",
            "timedOut": false,
            "duration": 241,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
            "isRoot": false,
            "uuid": "82823631-74f6-47e2-93d3-ec81afdab172",
            "parentUUID": "361407dd-8d20-4a60-9d60-be3f513630f7",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 241
      },
      "ctx": {
        "_runnable": {
          "title": "should pull the 0/0/0 tile for the cache",
          "async": 1,
          "sync": false,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "pending": false,
          "type": "test",
          "file": "/data/git/mapcache-server/test/format/xyz_test.js",
          "parent": {
            "title": "cache tests",
            "suites": [],
            "tests": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "xyz cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 241,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "82823631-74f6-47e2-93d3-ec81afdab172",
                "parentUUID": "361407dd-8d20-4a60-9d60-be3f513630f7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/xyz_test.js",
            "uuid": "361407dd-8d20-4a60-9d60-be3f513630f7",
            "fullFile": "/data/git/mapcache-server/test/format/xyz_test.js",
            "passes": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "xyz cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 241,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "82823631-74f6-47e2-93d3-ec81afdab172",
                "parentUUID": "361407dd-8d20-4a60-9d60-be3f513630f7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 241
          },
          "ctx": "[Circular ~.allHooks.17.ctx]",
          "_events": {},
          "duration": 241,
          "state": "passed",
          "speed": "fast"
        },
        "test": {
          "title": "should pull the 0/0/0 tile for the cache",
          "async": 1,
          "sync": false,
          "_timeout": 2000,
          "timedOut": false,
          "_trace": {},
          "pending": false,
          "type": "test",
          "file": "/data/git/mapcache-server/test/format/xyz_test.js",
          "parent": {
            "title": "cache tests",
            "suites": [],
            "tests": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "xyz cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 241,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "82823631-74f6-47e2-93d3-ec81afdab172",
                "parentUUID": "361407dd-8d20-4a60-9d60-be3f513630f7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/format/xyz_test.js",
            "uuid": "361407dd-8d20-4a60-9d60-be3f513630f7",
            "fullFile": "/data/git/mapcache-server/test/format/xyz_test.js",
            "passes": [
              {
                "title": "should pull the 0/0/0 tile for the cache",
                "fullTitle": "xyz cache tests should pull the 0/0/0 tile for the cache",
                "timedOut": false,
                "duration": 241,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
                "isRoot": false,
                "uuid": "82823631-74f6-47e2-93d3-ec81afdab172",
                "parentUUID": "361407dd-8d20-4a60-9d60-be3f513630f7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 241
          },
          "ctx": "[Circular ~.allHooks.17.ctx]",
          "_events": {},
          "duration": 241,
          "state": "passed",
          "speed": "fast"
        }
      },
      "_events": {},
      "duration": 0,
      "_error": null
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should construct an generic with a source",
      "fullTitle": "#constructor should construct an generic with a source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> generic = <span class=\"hljs-keyword\">new</span> Generic({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>generic.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
      "isRoot": false,
      "uuid": "6c3b613e-8906-4d85-9225-3eef3a9409fb",
      "parentUUID": "ab96b6b1-17dc-4694-96ff-65dd72a3f651",
      "skipped": false
    },
    {
      "title": "should construct an generic with a cache",
      "fullTitle": "#constructor should construct an generic with a cache",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> generic = <span class=\"hljs-keyword\">new</span> Generic({cache: {id: <span class=\"hljs-string\">'6'</span>}});<br>generic.cache.id.should.equal(<span class=\"hljs-string\">'6'</span>);",
      "isRoot": false,
      "uuid": "c4ea3cae-8385-48ae-a7e3-f9a362e00cca",
      "parentUUID": "ab96b6b1-17dc-4694-96ff-65dd72a3f651",
      "skipped": false
    },
    {
      "title": "should process the source",
      "fullTitle": "generic source tests should process the source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
      "isRoot": false,
      "uuid": "04904fc6-7778-4ac7-b7d1-7662a037d690",
      "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 tile for the data source",
      "fullTitle": "generic source tests should pull the 0/0/0 tile for the data source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
      "isRoot": false,
      "uuid": "8da32e37-fa33-4ea9-975e-4e9f51a4f9b1",
      "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 geojson tile for the data source",
      "fullTitle": "generic source tests should pull the 0/0/0 geojson tile for the data source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
      "isRoot": false,
      "uuid": "0971d9d6-88cd-4f84-9f33-6a6b5464021e",
      "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
      "skipped": false
    },
    {
      "title": "should get all features of the source",
      "fullTitle": "generic source tests should get all features of the source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
      "isRoot": false,
      "uuid": "d75f5c2c-782f-4be5-8b0f-2e2ba502a0c6",
      "parentUUID": "a5272916-c673-4ba4-b9ab-07087a8f2c58",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 tile for the cache",
      "fullTitle": "generic cache tests should pull the 0/0/0 tile for the cache",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "generic.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
      "isRoot": false,
      "uuid": "d3d39349-31cb-4b63-af82-25f975ef840c",
      "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 generic tile for the cache",
      "fullTitle": "generic cache tests should pull the 0/0/0 generic tile for the cache",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>generic.getTile(<span class=\"hljs-string\">'generic'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
      "isRoot": false,
      "uuid": "dd429a15-5a10-422d-a063-2ebfec3b747c",
      "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
      "skipped": false
    },
    {
      "title": "should generate the cache",
      "fullTitle": "generic cache tests should generate the cache",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "generic.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
      "isRoot": false,
      "uuid": "32ec7ffc-3c25-47ac-8bc1-349d185bae54",
      "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
      "skipped": false
    },
    {
      "title": "should pull features for the cache",
      "fullTitle": "generic cache tests should pull features for the cache",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "generic.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
      "isRoot": false,
      "uuid": "98b3edfb-b943-4ce3-8b07-38728e7b707f",
      "parentUUID": "b776c184-153b-43e5-b5f0-a78e1ccba443",
      "skipped": false
    },
    {
      "title": "should construct an geojson with a source",
      "fullTitle": "#constructor should construct an geojson with a source",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> geojson = <span class=\"hljs-keyword\">new</span> GeoJSON({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>geojson.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
      "isRoot": false,
      "uuid": "ed424a35-afc1-458d-8d3f-df868a20359a",
      "parentUUID": "20722038-c433-4559-ad0c-28cf1b305d32",
      "skipped": false
    },
    {
      "title": "should construct an geojson with a cache",
      "fullTitle": "#constructor should construct an geojson with a cache",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> geojson = <span class=\"hljs-keyword\">new</span> GeoJSON({cache: {id: <span class=\"hljs-string\">'6'</span>}});<br>geojson.cache.id.should.equal(<span class=\"hljs-string\">'6'</span>);",
      "isRoot": false,
      "uuid": "80b895a9-c00c-4e37-b478-b1c34bcd9877",
      "parentUUID": "20722038-c433-4559-ad0c-28cf1b305d32",
      "skipped": false
    },
    {
      "title": "should process the source",
      "fullTitle": "geojson source tests should process the source",
      "timedOut": false,
      "duration": 12,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'after the source has been processed'</span>, newSource);<br>  map.dataSources.push(newSource);<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  FeatureModel.getAllSourceFeatures(geojson.source.id, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'features'</span>, features);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
      "isRoot": false,
      "uuid": "60fdfaf0-1e67-4dd4-8690-07c77a2f0c98",
      "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 tile for the data source",
      "fullTitle": "geojson source tests should pull the 0/0/0 tile for the data source",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
      "isRoot": false,
      "uuid": "7965ce36-4c66-466d-a4ba-61a3809db86d",
      "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 geojson tile for the data source",
      "fullTitle": "geojson source tests should pull the 0/0/0 geojson tile for the data source",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile size is '</span>, length);<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
      "isRoot": false,
      "uuid": "467a8cc4-135b-45cb-837e-4afee773871b",
      "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
      "skipped": false
    },
    {
      "title": "should get all features of the source",
      "fullTitle": "geojson source tests should get all features of the source",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geojson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"feature count\"</span>, features);<br>  features.length.should.be.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
      "isRoot": false,
      "uuid": "92315cc2-abdf-439e-bf6d-210c9e16dc73",
      "parentUUID": "b031367e-b9ec-487b-a069-5c90e11f10fa",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 tile for the cache",
      "fullTitle": "geojson cache tests should pull the 0/0/0 tile for the cache",
      "timedOut": false,
      "duration": 14,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "geoJson.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
      "isRoot": false,
      "uuid": "eac64864-26d4-4af1-9c2a-2fc278daf025",
      "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 geojson tile for the cache",
      "fullTitle": "geojson cache tests should pull the 0/0/0 geojson tile for the cache",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geoJson.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>, projection: <span class=\"hljs-number\">4326</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-comment\">//console.log('stream came back', stream);</span><br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> geojsonString = <span class=\"hljs-string\">''</span>;<br>  stream.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream data event'</span>);<br>    geojsonString += data;<br>  });<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream end event'</span>, geojsonString);<br>    <span class=\"hljs-keyword\">var</span> parsed = <span class=\"hljs-built_in\">JSON</span>.parse(geojsonString);<br>    geojsonString.should.be.equal(<span class=\"hljs-string\">'{\"type\":\"FeatureCollection\",\"features\":[{\"geometry\":{\"type\":\"Point\",\"coordinates\":[-105.01621,39.57422]},\"properties\":{}}]}'</span>);<br>    should.exist(parsed);<br>    done();<br>  });<br>  stream.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream error'</span>, err);<br>  });<br>  stream.on(<span class=\"hljs-string\">'close'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'stream close'</span>);<br>  });<br>  stream.pipe(devnull());<br>});",
      "isRoot": false,
      "uuid": "5aff3d2d-9880-4ae3-a922-c2bd6a28916f",
      "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
      "skipped": false
    },
    {
      "title": "should generate the cache",
      "fullTitle": "geojson cache tests should generate the cache",
      "timedOut": false,
      "duration": 12,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "geoJson.generateCache(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, cache, features</span>) </span>{<br>  done();<br>});",
      "isRoot": false,
      "uuid": "d95a21bd-a0bb-4449-b0cf-d392cce19394",
      "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
      "skipped": false
    },
    {
      "title": "should pull features for the cache",
      "fullTitle": "geojson cache tests should pull features for the cache",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "geoJson.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  features.length.should.equal(<span class=\"hljs-number\">1</span>);<br>  done();<br>});",
      "isRoot": false,
      "uuid": "8b45b444-6570-457f-8e69-b9da6500fca5",
      "parentUUID": "29310d26-976f-48c9-8c54-9fbb39fb2f15",
      "skipped": false
    },
    {
      "title": "should construct an geotiff with a source",
      "fullTitle": "#constructor should construct an geotiff with a source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> geotiff = <span class=\"hljs-keyword\">new</span> GeoTIFF({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>geotiff.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
      "isRoot": false,
      "uuid": "8e002aa5-0659-4ed0-9e80-70c4b888b75b",
      "parentUUID": "bd32730a-02ea-4ef2-aa11-268038b09715",
      "skipped": false
    },
    {
      "title": "should throw an error since geotiff caches are not supported",
      "fullTitle": "#constructor should throw an error since geotiff caches are not supported",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">try</span> {<br>  <span class=\"hljs-keyword\">new</span> GeoTIFF({cache: {id: <span class=\"hljs-string\">'6'</span>}}).should.throw(<span class=\"hljs-built_in\">Error</span>);<br>} <span class=\"hljs-keyword\">catch</span> (e) {<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'threw error'</span>, e);<br>}",
      "isRoot": false,
      "uuid": "4de631d2-61a1-4fd4-a801-c9a172a201a2",
      "parentUUID": "bd32730a-02ea-4ef2-aa11-268038b09715",
      "skipped": false
    },
    {
      "title": "should process the source",
      "fullTitle": "geotiff source tests should process the source",
      "timedOut": false,
      "duration": 19,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "geotiff.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>],<br>        [-<span class=\"hljs-number\">104.82331093941556</span>,<span class=\"hljs-number\">39.67084478892132</span>],<br>        [-<span class=\"hljs-number\">104.82337800954186</span>,<span class=\"hljs-number\">39.64449869141027</span>],<br>        [-<span class=\"hljs-number\">104.85255015490993</span>,<span class=\"hljs-number\">39.64453938508538</span>],<br>        [-<span class=\"hljs-number\">104.85249416245563</span>,<span class=\"hljs-number\">39.67088552045151</span>]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'26913'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
      "isRoot": false,
      "uuid": "37fab921-7637-4c5a-8b62-d61f52edf9fa",
      "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
      "skipped": false
    },
    {
      "title": "should pull the 13/1710/3111 tile for the data source",
      "fullTitle": "geotiff source tests should pull the 13/1710/3111 tile for the data source",
      "timedOut": false,
      "duration": 118,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/geotifftile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
      "isRoot": false,
      "uuid": "da96c4df-5f61-4825-a1c8-cf779e040114",
      "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
      "skipped": false
    },
    {
      "title": "should get all features of the source",
      "fullTitle": "geotiff source tests should get all features of the source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>geotiff.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
      "isRoot": false,
      "uuid": "66062a7b-c23e-4e85-bdd0-3f7d8d1f7b46",
      "parentUUID": "519a0472-75e8-4afc-aa24-26d8af5175ba",
      "skipped": false
    },
    {
      "title": "should construct an MrSID with a source",
      "fullTitle": "#constructor should construct an MrSID with a source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> mrsid = <span class=\"hljs-keyword\">new</span> MrSID({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>mrsid.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
      "isRoot": false,
      "uuid": "0ec06cb0-ddc6-4612-a5f5-34d6b753c499",
      "parentUUID": "659d67b6-81ff-4b5c-a24f-520bbeb2039d",
      "skipped": false
    },
    {
      "title": "should throw an error since MrSID caches are not supported",
      "fullTitle": "#constructor should throw an error since MrSID caches are not supported",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">try</span> {<br>  <span class=\"hljs-keyword\">new</span> MrSID({cache: {id: <span class=\"hljs-string\">'6'</span>}}).should.throw(<span class=\"hljs-built_in\">Error</span>);<br>} <span class=\"hljs-keyword\">catch</span> (e) {<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'threw error'</span>, e);<br>}",
      "isRoot": false,
      "uuid": "2824efd4-9394-473a-8070-ca1ff9faac5f",
      "parentUUID": "659d67b6-81ff-4b5c-a24f-520bbeb2039d",
      "skipped": false
    },
    {
      "title": "should process the source",
      "fullTitle": "MrSID source tests should process the source",
      "timedOut": false,
      "duration": 16,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "mrsid.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-keyword\">var</span> geom = {<br>    type:<span class=\"hljs-string\">\"Feature\"</span>,<br>    geometry: {<br>      type:<span class=\"hljs-string\">\"Polygon\"</span>,<br>      coordinates:[[<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.67320449320221</span> ],<br>        [ -<span class=\"hljs-number\">79.30881449983531</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.599476493218596</span> ],<br>        [ -<span class=\"hljs-number\">79.38254249991722</span>, <span class=\"hljs-number\">43.67320449320221</span> ]<br>      ]]<br>    },<br>    <span class=\"hljs-string\">\"properties\"</span>:{<br>    }<br>  };<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'newSource'</span>, newSource);<br>  newSource.geometry.geometry.coordinates.should.containDeep(geom.geometry.coordinates);<br>  newSource.projection.should.be.equal(<span class=\"hljs-string\">'4326'</span>);<br>  should.exist(newSource.scaledFiles);<br>  map.dataSources.push(newSource);<br>  done();<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
      "isRoot": false,
      "uuid": "27e75f62-034d-4c90-9bb3-b5fc716e0e7c",
      "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
      "skipped": false
    },
    {
      "title": "should not pull the 13/1710/3111 tile for the data source because no data exists there",
      "fullTitle": "MrSID source tests should not pull the 13/1710/3111 tile for the data source because no data exists there",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">1710</span>, <span class=\"hljs-number\">3111</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(stream);<br>  done();<br>});",
      "isRoot": false,
      "uuid": "51e03e7a-c9d2-4149-8255-195ed434c7a6",
      "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
      "skipped": false
    },
    {
      "title": "should pull the 11/572/747 tile for the data source",
      "fullTitle": "MrSID source tests should pull the 11/572/747 tile for the data source",
      "timedOut": false,
      "duration": 98,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>mrsid.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">572</span>, <span class=\"hljs-number\">747</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> imageDiff = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'image-diff'</span>);<br>    imageDiff({<br>      actualImage: tmpImage,<br>      expectedImage: __dirname + <span class=\"hljs-string\">'/mrsidtile.png'</span>,<br>      diffImage: <span class=\"hljs-string\">'/tmp/difference.png'</span>,<br>    }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, imagesAreSame</span>) </span>{<br>      should.not.exist(err);<br>      imagesAreSame.should.be.true();<br>      done();<br>    });<br>  });<br>});",
      "isRoot": false,
      "uuid": "e0e13262-2970-4c9b-a9b2-7d239cdc0de7",
      "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
      "skipped": false
    },
    {
      "title": "should get all features of the source",
      "fullTitle": "MrSID source tests should get all features of the source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "mrsid.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.not.exist(features);<br>  done();<br>});",
      "isRoot": false,
      "uuid": "43e4050a-5561-4ca2-af93-e0e228c7c408",
      "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
      "skipped": false
    },
    {
      "title": "should fail to process this source",
      "fullTitle": "MrSID source tests should fail to process this source",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> fail = <span class=\"hljs-keyword\">new</span> MrSID({<br>  source: failDataSource<br>});<br>fail.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.failure.should.be.true();<br>  done();<br>});",
      "isRoot": false,
      "uuid": "a62cd747-1bc1-4524-89ec-bdfb6c59a7fa",
      "parentUUID": "16e820ed-c46a-4cfd-9a04-8ae78c6ac47d",
      "skipped": false
    },
    {
      "title": "should construct an Tms with a source",
      "fullTitle": "#constructor should construct an Tms with a source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> tms = <span class=\"hljs-keyword\">new</span> TMS({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>tms.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
      "isRoot": false,
      "uuid": "6d42319a-55a8-47e6-a238-92201071a844",
      "parentUUID": "5eabfa4c-704b-4934-adc9-c64d7e56e727",
      "skipped": false
    },
    {
      "title": "should construct an Tms with a cache",
      "fullTitle": "#constructor should construct an Tms with a cache",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> tms = <span class=\"hljs-keyword\">new</span> TMS({cache: {id: <span class=\"hljs-string\">'6'</span>}});<br>tms.cache.id.should.equal(<span class=\"hljs-string\">'6'</span>);",
      "isRoot": false,
      "uuid": "60823ec6-d35c-478a-b6a9-d3e98c989c9e",
      "parentUUID": "5eabfa4c-704b-4934-adc9-c64d7e56e727",
      "skipped": false
    },
    {
      "title": "should process the source",
      "fullTitle": "source tests should process the source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "tms.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  done();<br>});",
      "isRoot": false,
      "uuid": "181065ae-067e-4e58-b117-585f16492911",
      "parentUUID": "2f56658e-517d-49a5-bdea-2aacc18cd5da",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 tile for the data source",
      "fullTitle": "source tests should pull the 0/0/0 tile for the data source",
      "timedOut": false,
      "duration": 105,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "tms.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, tileRequest</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  tileRequest.on(<span class=\"hljs-string\">'response'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">response</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>      response.statusCode.should.equal(<span class=\"hljs-number\">200</span>);<br>      <span class=\"hljs-keyword\">var</span> size = response.headers[<span class=\"hljs-string\">'content-length'</span>];<br>      size.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>      response.headers[<span class=\"hljs-string\">'content-type'</span>].should.equal(<span class=\"hljs-string\">'image/png'</span>);<br>      done();<br>    } <span class=\"hljs-keyword\">catch</span> (e) {<br>      done(e);<br>    }<br>  })<br>  .on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile request error'</span>, err);<br>    done(err);<br>  });<br>});",
      "isRoot": false,
      "uuid": "c7781583-c545-42df-bc26-0389ab5284dc",
      "parentUUID": "2f56658e-517d-49a5-bdea-2aacc18cd5da",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 tile for the cache",
      "fullTitle": "cache tests should pull the 0/0/0 tile for the cache",
      "timedOut": false,
      "duration": 232,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "tms.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
      "isRoot": false,
      "uuid": "ec2ab584-c38d-41c4-8e96-a615727a4b93",
      "parentUUID": "3dc88bca-3ece-43c7-8a3e-73b829c156e6",
      "skipped": false
    },
    {
      "title": "should construct an WMS with a source",
      "fullTitle": "#constructor should construct an WMS with a source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> wms = <span class=\"hljs-keyword\">new</span> WMS({source: {id: <span class=\"hljs-string\">'5'</span>}});<br>wms.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
      "isRoot": false,
      "uuid": "13d98f3c-5a6b-4c64-a033-240553d94298",
      "parentUUID": "ff73c858-5b3b-4acd-878b-b9aab92f2cec",
      "skipped": false
    },
    {
      "title": "should construct throw and exception since we cannot make a WMS cache",
      "fullTitle": "#constructor should construct throw and exception since we cannot make a WMS cache",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">try</span> {<br>  <span class=\"hljs-keyword\">new</span> WMS({cache: {id: <span class=\"hljs-string\">'6'</span>}}).should.throw(<span class=\"hljs-built_in\">Error</span>);<br>} <span class=\"hljs-keyword\">catch</span> (e) {<br>  <span class=\"hljs-built_in\">console</span>.log(e);<br>}",
      "isRoot": false,
      "uuid": "cb0b14d3-253a-45a3-8230-025d89406365",
      "parentUUID": "ff73c858-5b3b-4acd-878b-b9aab92f2cec",
      "skipped": false
    },
    {
      "title": "should process the source",
      "fullTitle": "wms source tests should process the source",
      "timedOut": false,
      "duration": 549,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "wms.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  <span class=\"hljs-comment\">// console.log('after the source has been processed', JSON.stringify(newSource, null, 2));</span><br>  should.exist(newSource.wmsGetCapabilities);<br>  <span class=\"hljs-comment\">// console.log('layer', JSON.stringify(newSource.wmsGetCapabilities.Capability.Layer, null, 2));</span><br>  wms.setSourceLayer(newSource.wmsGetCapabilities.Capability.Layer.Layer[<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, source</span>) </span>{<br>    map.dataSources.push(source);<br>    done();<br>  });<br>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">source, callback</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'progress'</span>, source);<br>  callback(<span class=\"hljs-literal\">null</span>, source);<br>});",
      "isRoot": false,
      "uuid": "5e42f852-c66c-4f8c-8f7f-084e6d388d5d",
      "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 tile for the data source",
      "fullTitle": "wms source tests should pull the 0/0/0 tile for the data source",
      "timedOut": false,
      "duration": 199,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "wms.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  should.exist(stream);<br>  <span class=\"hljs-keyword\">var</span> ws = fs.createWriteStream(tmpImage);<br>  stream.pipe(ws);<br>  stream.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    done();<br>    <span class=\"hljs-comment\">// var imageDiff = require('image-diff');</span><br>    <span class=\"hljs-comment\">// imageDiff({</span><br>    <span class=\"hljs-comment\">//   actualImage: tmpImage,</span><br>    <span class=\"hljs-comment\">//   expectedImage: __dirname + '/geotifftile.png',</span><br>    <span class=\"hljs-comment\">//   diffImage: '/tmp/difference.png',</span><br>    <span class=\"hljs-comment\">// }, function (err, imagesAreSame) {</span><br>    <span class=\"hljs-comment\">//   should.not.exist(err);</span><br>    <span class=\"hljs-comment\">//   imagesAreSame.should.be.true();</span><br>    <span class=\"hljs-comment\">//   done();</span><br>    <span class=\"hljs-comment\">// });</span><br>  });<br>});",
      "isRoot": false,
      "uuid": "3e50347c-9b3f-49f4-b9f4-cb3533381284",
      "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 geojson tile for the data source",
      "fullTitle": "wms source tests should pull the 0/0/0 geojson tile for the data source",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>wms.getTile(<span class=\"hljs-string\">'geojson'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
      "isRoot": false,
      "uuid": "3767c48c-cbdd-4d18-b0d4-696414a1b213",
      "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
      "skipped": false
    },
    {
      "title": "should get all features of the source",
      "fullTitle": "wms source tests should get all features of the source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">0</span>);<br>wms.getDataWithin(-<span class=\"hljs-number\">180</span>, -<span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">85</span>, <span class=\"hljs-number\">4326</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, features</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'err'</span>, err);<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  done();<br>});",
      "isRoot": false,
      "uuid": "cc5d123c-71a6-4eb2-a0c6-67218baa8ffb",
      "parentUUID": "ee8a901d-36b2-4d82-9d78-e61918c30693",
      "skipped": false
    },
    {
      "title": "should construct an Xyz with a source",
      "fullTitle": "#constructor should construct an Xyz with a source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> xyz = <span class=\"hljs-keyword\">new</span> XYZ({source: {id: <span class=\"hljs-string\">'5'</span>}, outputDirectory:<span class=\"hljs-string\">'/tmp'</span>});<br>xyz.source.id.should.equal(<span class=\"hljs-string\">'5'</span>);",
      "isRoot": false,
      "uuid": "dfaa6ba1-65e7-4705-b7ff-aec34d69a9c5",
      "parentUUID": "c6ad9854-ae51-44c3-9da9-42bed660eb71",
      "skipped": false
    },
    {
      "title": "should construct an Xyz with a cache",
      "fullTitle": "#constructor should construct an Xyz with a cache",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> xyz = <span class=\"hljs-keyword\">new</span> XYZ({cache: {id: <span class=\"hljs-string\">'6'</span>}, outputDirectory:<span class=\"hljs-string\">'/tmp'</span>});<br>xyz.cache.id.should.equal(<span class=\"hljs-string\">'6'</span>);",
      "isRoot": false,
      "uuid": "2a8f8cdd-0e28-477e-9074-51b2f249ce8e",
      "parentUUID": "c6ad9854-ae51-44c3-9da9-42bed660eb71",
      "skipped": false
    },
    {
      "title": "should process the source",
      "fullTitle": "source tests should process the source",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "xyz.processSource(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, newSource</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span>(err) {<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  }<br>  newSource.status.message.should.equal(<span class=\"hljs-string\">\"Complete\"</span>);<br>  done();<br>});",
      "isRoot": false,
      "uuid": "f1d703a8-d227-4bd0-b52f-87698b3781b4",
      "parentUUID": "66cb5a5e-ea2e-453f-ad0d-5cc44f3a6d2c",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 tile for the data source",
      "fullTitle": "source tests should pull the 0/0/0 tile for the data source",
      "timedOut": false,
      "duration": 103,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, tileRequest</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  tileRequest.on(<span class=\"hljs-string\">'response'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">response</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>      response.statusCode.should.equal(<span class=\"hljs-number\">200</span>);<br>      <span class=\"hljs-keyword\">var</span> size = response.headers[<span class=\"hljs-string\">'content-length'</span>];<br>      size.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>      response.headers[<span class=\"hljs-string\">'content-type'</span>].should.equal(<span class=\"hljs-string\">'image/png'</span>);<br>      done();<br>    } <span class=\"hljs-keyword\">catch</span> (e) {<br>      done(e);<br>    }<br>  })<br>  .on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'tile request error'</span>, err);<br>    done(err);<br>  });<br>});",
      "isRoot": false,
      "uuid": "e15df832-137b-4403-9e5b-23a6707e4332",
      "parentUUID": "66cb5a5e-ea2e-453f-ad0d-5cc44f3a6d2c",
      "skipped": false
    },
    {
      "title": "should pull the 0/0/0 tile for the cache",
      "fullTitle": "cache tests should pull the 0/0/0 tile for the cache",
      "timedOut": false,
      "duration": 241,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "xyz.getTile(<span class=\"hljs-string\">'png'</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, {noCache: <span class=\"hljs-literal\">true</span>}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, stream</span>) </span>{<br>  <span class=\"hljs-keyword\">if</span> (err) {<br>    done(err);<br>    <span class=\"hljs-keyword\">return</span>;<br>  }<br>  <span class=\"hljs-keyword\">var</span> lstream = lengthStream(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">length</span>) </span>{<br>    length.should.be.greaterThan(<span class=\"hljs-number\">0</span>);<br>    done();<br>  });<br>  stream.pipe(lstream).pipe(devnull());<br>});",
      "isRoot": false,
      "uuid": "a2845902-9a7b-4f87-a198-3e75a5e296d4",
      "parentUUID": "361407dd-8d20-4a60-9d60-be3f513630f7",
      "skipped": false
    }
  ],
  "allFailures": []
}